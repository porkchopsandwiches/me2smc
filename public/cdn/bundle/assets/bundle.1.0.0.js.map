{"version":3,"sources":["webpack:///bundle.1.0.0.js","webpack:///webpack/bootstrap 545963a5129d4d60503e","webpack:///./source/typescript/app.ts","webpack:///./source/typescript/Knockout/Bindings/Modal.ts","webpack:///./source/typescript/Knockout/ForcibleComputed.ts","webpack:///./source/typescript/App/Application.ts","webpack:///./source/typescript/App/ME2/Henchman.ts","webpack:///./source/typescript/App/ME2/Stages/Stager.ts","webpack:///./source/typescript/App/ME2/Stages/Setup.ts","webpack:///./source/typescript/App/ME2/Stages/Stage.ts","webpack:///./source/typescript/App/ME2/Teammate.ts","webpack:///./source/typescript/App/ME2/TeammateField.ts","webpack:///./source/typescript/App/ME2/TeammateDeathList.ts","webpack:///./source/typescript/App/constants.ts","webpack:///./source/typescript/App/ME2/Stages/Occulus.ts","webpack:///./source/typescript/App/ME2/Stages/Vents.ts","webpack:///./source/typescript/App/ME2/Stages/LongWalk.ts","webpack:///./source/typescript/App/ME2/Stages/Boss.ts","webpack:///./source/typescript/App/ME2/Stages/Summary.ts","webpack:///./source/typescript/App/ME2/State.ts","webpack:///./source/typescript/App/ME2/Normandy.ts","webpack:///./source/typescript/App/ME2/Teammates.ts","webpack:///./source/typescript/App/ME2/Serialisation.ts","webpack:///./source/typescript/Utilities/ObjectArray.ts"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Modal_1","ForcibleComputed_1","Application_1","constants_1","Constants","name","join","_","extend","window","Application","StageIDs","TeammateRoles","ko","bindingHandlers","init","element","value_accessor","all_bindings_accessor","data","context","$element","$","modal","show","utils","domNodeDisposal","addDisposeCallback","update","value","func","options","trigger","observable","notify","target","computed","valueHasMutated","Henchman_1","Stager_1","State_1","Serialisation_1","this","henchmen","Henchman","HenchmanIDs","Garrus","Grunt","Jack","Jacob","Kasumi","Legion","Miranda","Mordin","Samara","Tali","Thane","Zaeed","serialisation","Serialisation","henchman","undefined","state","State","share","stager","Stager","location","search","length","applySerialisedState","substr","renderYesNo","renderRank","renderTeammateName","teammate","highlight","ideal_symbol","renderTeammateNameVentVenter","willBeEffectiveVentVenter","renderTeammateNameVentLeader","willBeEffectiveVentLeader","renderTeammateNameLongWalkBubbler","willBeEffectiveLongWalkBubbler","renderTeammateNameLongWalkLeader","willBeEffectiveLongWalkLeader","renderTeammateNameLongWalkEscort","willBeEffectiveLongWalkEscort","renderTeammateNameBossSquadmate","willSurviveBeingBossSquadmate","renderTeammateNameKeepBaseAdvocate","renderTeammateDeathCause","death_cause","TeammateDeathCauses","ArmourFailure","ShieldingFailure","CannonFailure","VentsBadLeader","VentsBadVenter","Escort","LongWalkBadBubbler","LongWalkBadLeader","Boss","HoldTheLine","renderCrewSurvival","crew_survival","SummaryCrewSurvivalOptions","AllDied","HalfSurvived","AllSurvived","renderHTLScore","score","toString","showArmourDeathRankPopover","event","showRankPopover","getHenchmenSortedByArmourDeathPriority","showShieldingDeathRankPopover","getHenchmenSortedByShieldingDeathPriority","showCannonDeathRankPopover","getHenchmenSortedByCannonDeathPriority","showLongWalkDeathRankPopover","getHenchmenSortedByLongWalkDeathPriority","showHTMLDeathRankPopover","getHenchmenSortedByHTLDeathPriority","showDefenceReportRankPopover","getHenchmenSortedByDefenceReportPriority","showKeepBaseAdvocateRankPopover","getHenchmenSortedByKeepBasePriority","showDestroyBaseAdvocateRankPopover","getHenchmenSortedByDestroyBasePriority","showCutsceneRescueRankPopover","getHenchmenSortedByCutsceneRescuePriority","getDelayCandidates","NormandyDelayOptions","None","Few","Many","renderDelayValue","$target","title","list","$content","addClass","each","list_henchman","append","popover","html","content","on","prototype","getHenchmen","getHenchman","find","predictedToBeDead","stage","is_evaluatable","evaluate","app","is_essential","htl_value","htl_death_priority","armour_death_priority","shielding_death_priority","cannon_death_priority","long_walk_death_priority","cutscene_rescue_priority","defence_report_priority","keep_base_priority","destroy_base_priority","is_tech_expert","is_biotic_expert","is_leader","is_super_leader","is_escort_candidate","is_vent_candidate","is_bubble_candidate","is_leader_candidate","getHenchmenSortedBy","filter","getHTLDeathPriorityRank","indexOf","getArmourDeathPriorityRank","getShieldingDeathPriorityRank","getCannonDeathPriorityRank","getLongWalkDeathPriorityRank","getCutsceneRescuePriorityRank","getDefenceReportPriorityRank","getKeepBasePriorityRank","getDestroyBasePriorityRank","field","sortBy","reverse","Setup_1","Occulus_1","Vents_1","LongWalk_1","Boss_1","Summary_1","freezes","stages","Setup","Occulus","Vents","LongWalk","Summary","subscribe","setup","can_go_back","getStage","initial_freeze","serialise","reset","back","pop","next","current_stage","isEvaluatable","freeze","evaluateAndApply","push","__extends","d","b","__","constructor","hasOwnProperty","Object","create","Stage_1","TeammateDeathList_1","_super","_this","label","all_recruited","pureComputed","read","getTeammates","is_recruited","write","owner","all_loyal","is_loyal","TeammateDeathList","teammates","Stage","Teammate_1","TeammateField_1","genericTeammateFieldFilter","is_dead","apply","configureFields","configs","fields","map","config","TeammateField","candidates","evaluateImmediate","forcibleComputed","fields_missing","optional","getField","getFieldObservable","getFieldCandidates","getFieldValue","state_teammate","withRole","role","first","selector_teammate","no_teammate","Teammate","roles","observableArray","death_stage_id","addRole","hasRole","removeRole","remove","hasAnyOfTheseRoles","_i","arguments","some","hasAllOfTheseRoles","every","getHoldTheLineScore","die","stage_id","siblings","candidate","other_field","unshift","getAll","death","add","SerialisedElements","SerialisedTeammateElements","OcculusSquadmate1","OcculusSquadmate2","death_list","dpt","whoAreRecruited","withoutAnyOfTheseRoles","normandy","has_shielding","whoAreAlive","sortByShieldingDeathPriority","last","has_armour","sortByArmourDeathPriority","has_thanix_cannon","sortByCannonDeathPriority","VentsSquadmate1","VentsSquadmate2","VentsVenter","VentsLeader","venter","leader","LongWalkBubbler","LongWalkLeader","LongWalkEscort","LongWalkSquadmate1","LongWalkSquadmate2","escort","bubbler","withAnyOfTheseRoles","sortByLongWalkDeathPriority","BossSquadmate1","BossSquadmate2","updateHTLRoles","squadmate_1","squadmate_2","HeldTheLine","whoDieHoldingTheLine","squadmates","shepard_lives","shepard_pulled_up_by","defence_reporter","keep_base_advocate","destroy_base_advocate","htl_total","htl_score","htl_candidates_count","htl_death_count","htl_teammates","getDefenceReporter","getShepardLives","getShepardCatcher","getKeepBaseAdvocate","getDestroyBaseAdvocate","getCrewSurvival","getHoldTheLineTotal","toFixed","getHoldTheLineDeathCount","getLivingTeammates","sort","sortByDefenceReportPriority","whoAdvocateKeepingTheBase","sortByKeepBasePriority","whoAdvocateDestroyingTheBase","sortByDestroyBasePriority","delay","Normandy_1","Teammates_1","Normandy","bootstrapTeammates","serialised","_teammates","Teammates","chain","has_armor","_delay","parseInt","isNaN","ObjectArray_1","elements","oa","ObjectArray","fromObjectArray","withoutRole","sortByHenchmanProperty","property","ascending","sortByIsRecruited","without","iterator","findByHenchman","findByHenchmanID","slice","start","end","scores","reduce","sum","pool_size","death_count","lpad","value_str","Array","indexesToFlags","indexes","accumulator","index","Math","pow","flagsToIndexes","flags","flag","getRoleCount","keys","serialiseNormandy","serialiseTeammate","deserialise","matches","match","SerialisedRegex","deserialised","StageID","deserialiseNormandyElements","NormandyDelay","NormandyFlags","TeammatesRegex","serialised_teammate","deserialiseTeammate","Error","new_state","new_teammates","new_teammate","removeAll","role_offset","TeammateRegex","henchman_id","HenchmanID","DeathCause","DeathStageID","Roles","serialised_delay","serialised_flags","cloneElements","factory","values"],"mappings":"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","file":"bundle.1.0.0.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/cdn/bundle/assets\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Modal_1 = __webpack_require__(1);\n\tvar ForcibleComputed_1 = __webpack_require__(2);\n\tvar Application_1 = __webpack_require__(3);\n\tvar constants_1 = __webpack_require__(11);\n\tvar Constants = __webpack_require__(11);\n\t__webpack_require__(21);\n\tvoid ([\n\t    Modal_1.name,\n\t    ForcibleComputed_1.name,\n\t    Constants\n\t].join(\",\"));\n\t_.extend(window, {\n\t    Application: Application_1.Application,\n\t    Constants: {\n\t        StageIDs: constants_1.StageIDs,\n\t        TeammateRoles: constants_1.TeammateRoles\n\t    }\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.name = \"modal\";\n\tvoid ((function () {\n\t    ko.bindingHandlers[exports.name] = {\n\t        init: function (element, value_accessor, all_bindings_accessor, data, context) {\n\t            var $element = $(element);\n\t            $element.modal({\n\t                show: false\n\t            });\n\t            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n\t                $element.modal(\"destroy\");\n\t            });\n\t        },\n\t        update: function (element, value_accessor, all_bindings_accessor, data, context) {\n\t            var value = value_accessor();\n\t            var $element = $(element);\n\t            if (value) {\n\t                $element.modal(\"show\");\n\t            }\n\t            else {\n\t                $element.modal(\"hide\");\n\t            }\n\t        }\n\t    };\n\t})());\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.name = \"forcibleComputed\";\n\tvoid ((function () {\n\t    ko[exports.name] = function (func, context, options) {\n\t        var trigger = ko.observable().extend({ notify: 'always' });\n\t        var target = ko.computed(function () {\n\t            trigger();\n\t            return func.call(context);\n\t        }, null, options);\n\t        target[\"evaluateImmediate\"] = function () {\n\t            trigger.valueHasMutated();\n\t        };\n\t        return target;\n\t    };\n\t})());\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Henchman_1 = __webpack_require__(4);\n\tvar Stager_1 = __webpack_require__(5);\n\tvar State_1 = __webpack_require__(17);\n\tvar Serialisation_1 = __webpack_require__(20);\n\tvar constants_1 = __webpack_require__(11);\n\tvar Application = (function () {\n\t    function Application() {\n\t        this.henchmen = [\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Garrus, \"Garrus Vakarian\", true, 3, 5, 0, 8, 11, 10, 2, 11, 8, 0, false, false, true, false, true, true, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Grunt, \"Grunt\", false, 3, 0, 0, 6, 9, 8, 4, 9, 12, 0, false, false, false, false, true, false, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Jack, \"Jack\", true, 0, 8, 12, 5, 8, 11, 1, 12, 0, 8, false, true, false, false, true, false, true, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Jacob, \"Jacob Taylor\", true, 1, 6, 0, 0, 0, 6, 7, 8, 0, 10, false, false, true, false, true, true, true, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Kasumi, \"Kasumi Goto\", false, 0, 9, 0, 12, 0, 3, 9, 4, 0, 9, true, false, false, false, true, true, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Legion, \"Legion\", false, 1, 3, 0, 11, 0, 9, 3, 10, 9, 0, true, false, false, false, true, true, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Miranda, \"Miranda Lawson\", true, 1, 7, 0, 0, 0, -1, 11, 2, 13, 0, false, false, true, true, false, false, true, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Mordin, \"Mordin Solus\", true, 0, 11, 0, 0, 0, 5, 6, 6, 10, 0, false, false, false, false, true, true, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Samara, \"Samara\", false, 1, 4, 0, 4, 7, 7, 5, 7, 0, 12, false, true, false, false, true, false, true, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Tali, \"Tali'zorah\", false, 0, 10, 0, 10, 0, 4, 8, 5, 0, 11, true, false, false, false, true, true, false, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Thane, \"Thane\", false, 1, 2, 0, 9, 12, 12, 0, 13, 0, 13, false, false, false, false, true, true, true, true),\n\t            new Henchman_1.Henchman(this, constants_1.HenchmanIDs.Zaeed, \"Zaeed Masani\", false, 3, 1, 0, 7, 10, 2, 10, 3, 11, 0, false, false, false, false, true, false, false, true)\n\t        ];\n\t        this.serialisation = new Serialisation_1.Serialisation(this);\n\t        this.henchman = ko.observable(undefined);\n\t        this.state = new State_1.State(this);\n\t        this.share = ko.observable(undefined);\n\t        this.stager = new Stager_1.Stager(this);\n\t        if (window.location.search.length > 2) {\n\t            this.state.applySerialisedState(window.location.search.substr(1));\n\t        }\n\t    }\n\t    Application.renderYesNo = function (value) {\n\t        return value ? \"Yes\" : \"No\";\n\t    };\n\t    Application.renderRank = function (value) {\n\t        if (value !== undefined) {\n\t            return \"#\" + (value + 1);\n\t        }\n\t        else {\n\t            return \"<span class=\\\"text-muted\\\">N/A</span>\";\n\t        }\n\t    };\n\t    Application.renderTeammateName = function (teammate, highlight) {\n\t        if (highlight === void 0) { highlight = false; }\n\t        if (teammate) {\n\t            return teammate.henchman.name + (highlight ? \" \" + Application.ideal_symbol : \"\");\n\t        }\n\t        else {\n\t            return \"N/A\";\n\t        }\n\t    };\n\t    Application.renderTeammateNameVentVenter = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willBeEffectiveVentVenter());\n\t    };\n\t    Application.renderTeammateNameVentLeader = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willBeEffectiveVentLeader());\n\t    };\n\t    Application.renderTeammateNameLongWalkBubbler = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkBubbler());\n\t    };\n\t    Application.renderTeammateNameLongWalkLeader = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkLeader());\n\t    };\n\t    Application.renderTeammateNameLongWalkEscort = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkEscort());\n\t    };\n\t    Application.renderTeammateNameBossSquadmate = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate.willSurviveBeingBossSquadmate());\n\t    };\n\t    Application.renderTeammateNameKeepBaseAdvocate = function (teammate) {\n\t        return Application.renderTeammateName(teammate, teammate && teammate.henchman.id === constants_1.HenchmanIDs.Miranda);\n\t    };\n\t    Application.renderTeammateDeathCause = function (death_cause) {\n\t        switch (death_cause) {\n\t            case constants_1.TeammateDeathCauses.ArmourFailure:\n\t                return \"Advanced Armour not acquired\";\n\t            case constants_1.TeammateDeathCauses.ShieldingFailure:\n\t                return \"Advanced Shielding not acquired\";\n\t            case constants_1.TeammateDeathCauses.CannonFailure:\n\t                return \"Thanix Cannon not acquired\";\n\t            case constants_1.TeammateDeathCauses.VentsBadLeader:\n\t                return \"Bad vents leader\";\n\t            case constants_1.TeammateDeathCauses.VentsBadVenter:\n\t                return \"Bad vents choice\";\n\t            case constants_1.TeammateDeathCauses.Escort:\n\t                return \"Disloyal escort\";\n\t            case constants_1.TeammateDeathCauses.LongWalkBadBubbler:\n\t                return \"Bad long walk bubbler\";\n\t            case constants_1.TeammateDeathCauses.LongWalkBadLeader:\n\t                return \"Bad long walk leader\";\n\t            case constants_1.TeammateDeathCauses.Boss:\n\t                return \"Disloyal Boss squadmate\";\n\t            case constants_1.TeammateDeathCauses.HoldTheLine:\n\t                return \"Failed to hold the line\";\n\t            default:\n\t                return constants_1.TeammateDeathCauses[death_cause];\n\t        }\n\t    };\n\t    Application.renderCrewSurvival = function (crew_survival) {\n\t        switch (crew_survival) {\n\t            case constants_1.SummaryCrewSurvivalOptions.AllDied:\n\t                return \"All Died\";\n\t            case constants_1.SummaryCrewSurvivalOptions.HalfSurvived:\n\t                return \"Half Survived\";\n\t            case constants_1.SummaryCrewSurvivalOptions.AllSurvived:\n\t                return \"All Survived\";\n\t            default:\n\t                return constants_1.SummaryCrewSurvivalOptions[crew_survival];\n\t        }\n\t    };\n\t    Application.renderHTLScore = function (score) {\n\t        switch (score) {\n\t            case 0:\n\t                return \"0\";\n\t            case 1:\n\t                return \"➊\";\n\t            case 2:\n\t                return \"➋\";\n\t            case 3:\n\t                return \"➌\";\n\t            case 4:\n\t                return \"➍\";\n\t            default:\n\t                return score.toString(10);\n\t        }\n\t    };\n\t    Application.showArmourDeathRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Armour Deaths\", henchman, henchman.getHenchmenSortedByArmourDeathPriority());\n\t    };\n\t    Application.showShieldingDeathRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Shielding Deaths\", henchman, henchman.getHenchmenSortedByShieldingDeathPriority());\n\t    };\n\t    Application.showCannonDeathRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Cannon Deaths\", henchman, henchman.getHenchmenSortedByCannonDeathPriority());\n\t    };\n\t    Application.showLongWalkDeathRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Long Walk Deaths\", henchman, henchman.getHenchmenSortedByLongWalkDeathPriority());\n\t    };\n\t    Application.showHTMLDeathRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Hold the line Deaths\", henchman, henchman.getHenchmenSortedByHTLDeathPriority());\n\t    };\n\t    Application.showDefenceReportRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Defence Reports\", henchman, henchman.getHenchmenSortedByDefenceReportPriority());\n\t    };\n\t    Application.showKeepBaseAdvocateRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Keep Base Advocates\", henchman, henchman.getHenchmenSortedByKeepBasePriority());\n\t    };\n\t    Application.showDestroyBaseAdvocateRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Destroy Base Advocates\", henchman, henchman.getHenchmenSortedByDestroyBasePriority());\n\t    };\n\t    Application.showCutsceneRescueRankPopover = function (henchman, event) {\n\t        return Application.showRankPopover($(event.target), \"Catchs Shepard\", henchman, henchman.getHenchmenSortedByCutsceneRescuePriority());\n\t    };\n\t    Application.getDelayCandidates = function () {\n\t        return [\n\t            constants_1.NormandyDelayOptions.None,\n\t            constants_1.NormandyDelayOptions.Few,\n\t            constants_1.NormandyDelayOptions.Many\n\t        ];\n\t    };\n\t    Application.renderDelayValue = function (value) {\n\t        switch (value) {\n\t            case constants_1.NormandyDelayOptions.None:\n\t                return \"None\";\n\t            case constants_1.NormandyDelayOptions.Few:\n\t                return \"1-3\";\n\t            case constants_1.NormandyDelayOptions.Many:\n\t                return \"More than 3\";\n\t            default:\n\t                return \"\" + value;\n\t        }\n\t    };\n\t    Application.showRankPopover = function ($target, title, henchman, list) {\n\t        var $content = $(\"<ol />\").addClass(\"rank-popover-list\");\n\t        _.each(list, function (list_henchman) {\n\t            $content.append($(\"<li />\")\n\t                .append(list_henchman.name));\n\t        });\n\t        $target.popover({\n\t            trigger: \"focus\",\n\t            title: title,\n\t            html: true,\n\t            content: $content\n\t        })\n\t            .on(\"hidden.bs.popover\", function () {\n\t            $target.popover(\"destroy\");\n\t        })\n\t            .popover(\"show\");\n\t    };\n\t    Application.prototype.getHenchmen = function () {\n\t        return this.henchmen;\n\t    };\n\t    Application.prototype.getHenchman = function (id) {\n\t        return _.find(this.henchmen, function (henchman) {\n\t            return henchman.id === id;\n\t        });\n\t    };\n\t    Application.prototype.predictedToBeDead = function (teammate) {\n\t        if (this.state.stage().is_evaluatable()) {\n\t            return !!this.state.stage().evaluate().find(teammate);\n\t        }\n\t        return false;\n\t    };\n\t    Application.ideal_symbol = \"✭\";\n\t    return Application;\n\t}());\n\texports.Application = Application;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Henchman = (function () {\n\t    function Henchman(app, id, name, is_essential, htl_value, htl_death_priority, armour_death_priority, shielding_death_priority, cannon_death_priority, long_walk_death_priority, cutscene_rescue_priority, defence_report_priority, keep_base_priority, destroy_base_priority, is_tech_expert, is_biotic_expert, is_leader, is_super_leader, is_escort_candidate, is_vent_candidate, is_bubble_candidate, is_leader_candidate) {\n\t        if (id === void 0) { id = undefined; }\n\t        if (name === void 0) { name = \"\"; }\n\t        if (is_essential === void 0) { is_essential = false; }\n\t        if (htl_value === void 0) { htl_value = 0; }\n\t        if (htl_death_priority === void 0) { htl_death_priority = 0; }\n\t        if (armour_death_priority === void 0) { armour_death_priority = 0; }\n\t        if (shielding_death_priority === void 0) { shielding_death_priority = 0; }\n\t        if (cannon_death_priority === void 0) { cannon_death_priority = 0; }\n\t        if (long_walk_death_priority === void 0) { long_walk_death_priority = 0; }\n\t        if (cutscene_rescue_priority === void 0) { cutscene_rescue_priority = 0; }\n\t        if (defence_report_priority === void 0) { defence_report_priority = 0; }\n\t        if (keep_base_priority === void 0) { keep_base_priority = 0; }\n\t        if (destroy_base_priority === void 0) { destroy_base_priority = 0; }\n\t        if (is_tech_expert === void 0) { is_tech_expert = false; }\n\t        if (is_biotic_expert === void 0) { is_biotic_expert = false; }\n\t        if (is_leader === void 0) { is_leader = false; }\n\t        if (is_super_leader === void 0) { is_super_leader = false; }\n\t        if (is_escort_candidate === void 0) { is_escort_candidate = false; }\n\t        if (is_vent_candidate === void 0) { is_vent_candidate = false; }\n\t        if (is_bubble_candidate === void 0) { is_bubble_candidate = false; }\n\t        if (is_leader_candidate === void 0) { is_leader_candidate = false; }\n\t        this.name = \"\";\n\t        this.app = app;\n\t        this.id = id;\n\t        this.name = name;\n\t        this.is_essential = is_essential;\n\t        this.htl_value = htl_value;\n\t        this.htl_death_priority = htl_death_priority;\n\t        this.armour_death_priority = armour_death_priority;\n\t        this.shielding_death_priority = shielding_death_priority;\n\t        this.cannon_death_priority = cannon_death_priority;\n\t        this.long_walk_death_priority = long_walk_death_priority;\n\t        this.cutscene_rescue_priority = cutscene_rescue_priority;\n\t        this.defence_report_priority = defence_report_priority;\n\t        this.keep_base_priority = keep_base_priority;\n\t        this.destroy_base_priority = destroy_base_priority;\n\t        this.is_tech_expert = is_tech_expert;\n\t        this.is_biotic_expert = is_biotic_expert;\n\t        this.is_leader = is_leader;\n\t        this.is_super_leader = is_super_leader;\n\t        this.is_escort_candidate = is_escort_candidate;\n\t        this.is_vent_candidate = is_vent_candidate;\n\t        this.is_bubble_candidate = is_bubble_candidate;\n\t        this.is_leader_candidate = is_leader_candidate;\n\t    }\n\t    Henchman.prototype.getHenchmenSortedByArmourDeathPriority = function () {\n\t        return this.getHenchmenSortedBy(\"armour_death_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByShieldingDeathPriority = function () {\n\t        return this.getHenchmenSortedBy(\"shielding_death_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByCannonDeathPriority = function () {\n\t        return this.getHenchmenSortedBy(\"cannon_death_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByHTLDeathPriority = function () {\n\t        return this.getHenchmenSortedBy(\"htl_death_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByLongWalkDeathPriority = function () {\n\t        return this.getHenchmenSortedBy(\"long_walk_death_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByCutsceneRescuePriority = function () {\n\t        return this.getHenchmenSortedBy(\"cutscene_rescue_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByDefenceReportPriority = function () {\n\t        return this.getHenchmenSortedBy(\"defence_report_priority\");\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByKeepBasePriority = function () {\n\t        return _.filter(this.getHenchmenSortedBy(\"keep_base_priority\"), function (henchman) {\n\t            return henchman.keep_base_priority > 0;\n\t        });\n\t    };\n\t    Henchman.prototype.getHenchmenSortedByDestroyBasePriority = function () {\n\t        return _.filter(this.getHenchmenSortedBy(\"destroy_base_priority\"), function (henchman) {\n\t            return henchman.destroy_base_priority > 0;\n\t        });\n\t    };\n\t    Henchman.prototype.getHTLDeathPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByHTLDeathPriority(), this);\n\t    };\n\t    Henchman.prototype.getArmourDeathPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByArmourDeathPriority(), this);\n\t    };\n\t    Henchman.prototype.getShieldingDeathPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByShieldingDeathPriority(), this);\n\t    };\n\t    Henchman.prototype.getCannonDeathPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByCannonDeathPriority(), this);\n\t    };\n\t    Henchman.prototype.getLongWalkDeathPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByLongWalkDeathPriority(), this);\n\t    };\n\t    Henchman.prototype.getCutsceneRescuePriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByCutsceneRescuePriority(), this);\n\t    };\n\t    Henchman.prototype.getDefenceReportPriorityRank = function () {\n\t        return _.indexOf(this.getHenchmenSortedByDefenceReportPriority(), this);\n\t    };\n\t    Henchman.prototype.getKeepBasePriorityRank = function () {\n\t        return this.keep_base_priority > 0 ? _.indexOf(this.getHenchmenSortedByKeepBasePriority(), this) : undefined;\n\t    };\n\t    Henchman.prototype.getDestroyBasePriorityRank = function () {\n\t        return this.destroy_base_priority > 0 ? _.indexOf(this.getHenchmenSortedByDestroyBasePriority(), this) : undefined;\n\t    };\n\t    Henchman.prototype.getHenchmenSortedBy = function (field) {\n\t        return _.sortBy(this.app.getHenchmen(), function (henchman) {\n\t            return henchman[field];\n\t        }).reverse();\n\t    };\n\t    return Henchman;\n\t}());\n\texports.Henchman = Henchman;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Setup_1 = __webpack_require__(6);\n\tvar Occulus_1 = __webpack_require__(12);\n\tvar Vents_1 = __webpack_require__(13);\n\tvar LongWalk_1 = __webpack_require__(14);\n\tvar Boss_1 = __webpack_require__(15);\n\tvar Summary_1 = __webpack_require__(16);\n\tvar Stager = (function () {\n\t    function Stager(app) {\n\t        this.app = app;\n\t        this.freezes = [];\n\t        this.stages = _.sortBy([\n\t            new Setup_1.Setup(this),\n\t            new Occulus_1.Occulus(this),\n\t            new Vents_1.Vents(this),\n\t            new LongWalk_1.LongWalk(this),\n\t            new Boss_1.Boss(this),\n\t            new Summary_1.Summary(this)\n\t        ], function (stage) {\n\t            return stage.id;\n\t        });\n\t        this.app.state.stage.subscribe(function (stage) {\n\t            stage.setup();\n\t        });\n\t        this.can_go_back = ko.observable(false);\n\t        this.app.state.stage(this.getStage(0));\n\t        this.initial_freeze = this.app.state.serialise();\n\t    }\n\t    Stager.prototype.getStage = function (id) {\n\t        return this.stages[id];\n\t    };\n\t    Stager.prototype.reset = function () {\n\t        this.app.state.applySerialisedState(this.initial_freeze);\n\t    };\n\t    Stager.prototype.back = function () {\n\t        if (this.can_go_back()) {\n\t            this.app.state.applySerialisedState(this.freezes.pop());\n\t            this.can_go_back(!!this.freezes.length);\n\t        }\n\t    };\n\t    Stager.prototype.next = function () {\n\t        var current_stage = this.app.state.stage();\n\t        if (current_stage.isEvaluatable()) {\n\t            this.freeze();\n\t            current_stage.evaluateAndApply();\n\t            if (current_stage.id < this.stages.length - 1) {\n\t                this.app.state.stage(this.getStage(current_stage.id + 1));\n\t            }\n\t        }\n\t    };\n\t    Stager.prototype.freeze = function () {\n\t        this.freezes.push(this.app.state.serialise());\n\t        this.can_go_back(true);\n\t    };\n\t    return Stager;\n\t}());\n\texports.Stager = Stager;\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Setup = (function (_super) {\n\t    __extends(Setup, _super);\n\t    function Setup(stager) {\n\t        var _this = this;\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.Setup;\n\t        this.label = \"Set up\";\n\t        this.all_recruited = ko.pureComputed({\n\t            read: function () {\n\t                return !_this.getTeammates().find(function (teammate) {\n\t                    return !teammate.is_recruited();\n\t                });\n\t            },\n\t            write: function (all_recruited) {\n\t                _this.getTeammates().each(function (teammate) {\n\t                    if (all_recruited || !teammate.henchman.is_essential) {\n\t                        teammate.is_recruited(all_recruited);\n\t                    }\n\t                });\n\t            },\n\t            owner: this\n\t        });\n\t        this.all_loyal = ko.pureComputed({\n\t            read: function () {\n\t                return !_this.getTeammates().find(function (teammate) {\n\t                    return !teammate.is_loyal();\n\t                });\n\t            },\n\t            write: function (all_loyal) {\n\t                if (all_loyal) {\n\t                    _this.getTeammates().each(function (teammate) {\n\t                        teammate.is_recruited(true);\n\t                        teammate.is_loyal(true);\n\t                    });\n\t                }\n\t                else {\n\t                    _this.getTeammates().each(function (teammate) {\n\t                        teammate.is_loyal(false);\n\t                    });\n\t                }\n\t            },\n\t            owner: this\n\t        });\n\t        this.is_evaluatable = ko.pureComputed(function () {\n\t            var is_evaluatable = _.filter(_this.getTeammates().value(), function (teammate) {\n\t                return teammate.is_recruited();\n\t            }).length >= 8;\n\t            return is_evaluatable;\n\t        });\n\t    }\n\t    Setup.prototype.evaluate = function () {\n\t        return new TeammateDeathList_1.TeammateDeathList();\n\t    };\n\t    Setup.prototype.getTeammates = function () {\n\t        return this.stager.app.state.teammates();\n\t    };\n\t    return Setup;\n\t}(Stage_1.Stage));\n\texports.Setup = Setup;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Teammate_1 = __webpack_require__(8);\n\tvar TeammateField_1 = __webpack_require__(9);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Henchman_1 = __webpack_require__(4);\n\tvar Stage = (function () {\n\t    function Stage(stager) {\n\t        this.stager = stager;\n\t    }\n\t    Stage.genericTeammateFieldFilter = function (teammate) {\n\t        return teammate.is_recruited() && !teammate.is_dead();\n\t    };\n\t    Stage.prototype.evaluate = function () {\n\t        return new TeammateDeathList_1.TeammateDeathList();\n\t    };\n\t    Stage.prototype.evaluateAndApply = function () {\n\t        this.evaluate().apply();\n\t    };\n\t    Stage.prototype.configureFields = function (configs) {\n\t        var _this = this;\n\t        this.fields = [];\n\t        this.fields = _.map(configs, function (config) {\n\t            return new TeammateField_1.TeammateField(_this.stager.app.state, function () { return _this.fields; }, config);\n\t        });\n\t        _.each(this.fields, function (field) {\n\t            field.candidates.evaluateImmediate();\n\t        });\n\t        this.is_evaluatable = ko.forcibleComputed(function () {\n\t            var fields_missing = !!_.find(_this.fields, function (field) {\n\t                if (field.config.optional) {\n\t                    return false;\n\t                }\n\t                var teammate = field.observable();\n\t                return teammate ? (teammate.henchman.id === undefined) : true;\n\t            });\n\t            return !fields_missing;\n\t        });\n\t    };\n\t    Stage.prototype.getField = function (name) {\n\t        return _.find(this.fields, function (field) {\n\t            return field.config.name === name;\n\t        });\n\t    };\n\t    Stage.prototype.getFieldObservable = function (name) {\n\t        return this.getField(name).observable;\n\t    };\n\t    Stage.prototype.getFieldCandidates = function (name) {\n\t        return this.getField(name).candidates;\n\t    };\n\t    Stage.prototype.getFieldValue = function (name) {\n\t        return this.getFieldObservable(name)();\n\t    };\n\t    Stage.prototype.setup = function () {\n\t        var _this = this;\n\t        _.each(this.fields, function (field) {\n\t            var state_teammate = _this.stager.app.state.teammates().withRole(field.config.role).first();\n\t            var selector_teammate = field.observable();\n\t            if (state_teammate) {\n\t                if (selector_teammate === undefined || selector_teammate.henchman.id !== state_teammate.henchman.id) {\n\t                    field.observable(state_teammate);\n\t                }\n\t            }\n\t        });\n\t    };\n\t    Stage.prototype.isEvaluatable = function () {\n\t        return this.is_evaluatable();\n\t    };\n\t    Stage.no_teammate = new Teammate_1.Teammate(new Henchman_1.Henchman(undefined, undefined, \"— None —\"));\n\t    return Stage;\n\t}());\n\texports.Stage = Stage;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar Teammate = (function () {\n\t    function Teammate(henchman, is_recruited, is_loyal, is_dead, roles) {\n\t        var _this = this;\n\t        if (is_recruited === void 0) { is_recruited = false; }\n\t        if (is_loyal === void 0) { is_loyal = false; }\n\t        if (is_dead === void 0) { is_dead = false; }\n\t        if (roles === void 0) { roles = []; }\n\t        this.henchman = henchman;\n\t        this.is_recruited = ko.observable(is_recruited);\n\t        this.is_loyal = ko.observable(is_recruited && is_loyal);\n\t        this.is_dead = ko.observable(is_dead);\n\t        this.roles = ko.observableArray(roles);\n\t        this.death_cause = ko.observable(undefined);\n\t        this.death_stage_id = ko.observable(undefined);\n\t        this.is_recruited.subscribe(function (is_recruited) {\n\t            if (!is_recruited && _this.is_loyal()) {\n\t                _this.is_loyal(false);\n\t            }\n\t        });\n\t    }\n\t    Teammate.prototype.addRole = function (role) {\n\t        if (!this.hasRole(role)) {\n\t            if (!this.is_dead()) {\n\t                this.roles.push(role);\n\t            }\n\t        }\n\t        return this;\n\t    };\n\t    Teammate.prototype.removeRole = function (role) {\n\t        if (!this.is_dead()) {\n\t            this.roles.remove(role);\n\t        }\n\t        return this;\n\t    };\n\t    Teammate.prototype.hasRole = function (role) {\n\t        return this.roles.indexOf(role) > -1;\n\t    };\n\t    Teammate.prototype.hasAnyOfTheseRoles = function () {\n\t        var _this = this;\n\t        var roles = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            roles[_i - 0] = arguments[_i];\n\t        }\n\t        return _.some(roles, function (role) {\n\t            return _this.hasRole(role);\n\t        });\n\t    };\n\t    Teammate.prototype.hasAllOfTheseRoles = function () {\n\t        var _this = this;\n\t        var roles = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            roles[_i - 0] = arguments[_i];\n\t        }\n\t        return _.every(roles, function (role) {\n\t            return _this.hasRole(role);\n\t        });\n\t    };\n\t    Teammate.prototype.getHoldTheLineScore = function () {\n\t        return this.henchman.htl_value + (this.is_loyal() ? 1 : 0);\n\t    };\n\t    Teammate.prototype.willBeEffectiveLongWalkLeader = function () {\n\t        return this.henchman.is_leader && (this.is_loyal() || this.henchman.is_super_leader);\n\t    };\n\t    Teammate.prototype.willBeEffectiveLongWalkEscort = function () {\n\t        return this.is_loyal();\n\t    };\n\t    Teammate.prototype.willBeEffectiveLongWalkBubbler = function () {\n\t        return this.is_loyal() && this.henchman.is_biotic_expert;\n\t    };\n\t    Teammate.prototype.willSurviveBeingBossSquadmate = function () {\n\t        return this.is_loyal();\n\t    };\n\t    Teammate.prototype.willBeEffectiveVentVenter = function () {\n\t        return this.henchman.is_tech_expert && this.is_loyal();\n\t    };\n\t    Teammate.prototype.willBeEffectiveVentLeader = function () {\n\t        return this.henchman.is_leader && this.is_loyal();\n\t    };\n\t    Teammate.prototype.die = function (stage_id, death_cause) {\n\t        this.death_stage_id(stage_id);\n\t        this.death_cause(death_cause);\n\t        this.is_dead(true);\n\t        return this;\n\t    };\n\t    return Teammate;\n\t}());\n\texports.Teammate = Teammate;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Stage_1 = __webpack_require__(7);\n\tvar TeammateField = (function () {\n\t    function TeammateField(state, siblings, config) {\n\t        this.config = config;\n\t        this.observable = ko.observable(undefined);\n\t        this.candidates = ko.forcibleComputed(function () {\n\t            var candidates = state.teammates().filter(function (teammate) {\n\t                return config.filter(teammate, state.teammates());\n\t            }).filter(function (candidate) {\n\t                return !_.find(siblings(), function (other_field) {\n\t                    if (other_field.config.name !== config.name && other_field.observable) {\n\t                        if (other_field.observable() === candidate) {\n\t                            return true;\n\t                        }\n\t                    }\n\t                    return false;\n\t                });\n\t            }).value();\n\t            candidates.unshift(Stage_1.Stage.no_teammate);\n\t            return candidates;\n\t        });\n\t        this.observable.subscribe(function (teammate) {\n\t            if (config.role !== undefined && teammate && teammate.henchman.id !== undefined) {\n\t                teammate.removeRole(config.role);\n\t            }\n\t        }, null, \"beforeChange\");\n\t        this.observable.subscribe(function (teammate) {\n\t            if (config.role !== undefined) {\n\t                teammate.addRole(config.role);\n\t            }\n\t            _.each(siblings(), function (other_field) {\n\t                if (other_field.config.name !== config.name) {\n\t                    other_field.candidates.evaluateImmediate();\n\t                }\n\t            });\n\t        });\n\t    }\n\t    return TeammateField;\n\t}());\n\texports.TeammateField = TeammateField;\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar TeammateDeathList = (function () {\n\t    function TeammateDeathList() {\n\t        var list = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            list[_i - 0] = arguments[_i];\n\t        }\n\t        this.list = list;\n\t    }\n\t    TeammateDeathList.prototype.apply = function () {\n\t        _.each(this.list, function (element) {\n\t            element.teammate.die(element.death_stage_id, element.death_cause);\n\t        });\n\t        return this;\n\t    };\n\t    TeammateDeathList.prototype.getAll = function () {\n\t        return this.list;\n\t    };\n\t    TeammateDeathList.prototype.find = function (teammate) {\n\t        return _.find(this.list, function (death) {\n\t            return death.teammate.henchman.id === teammate.henchman.id;\n\t        });\n\t    };\n\t    TeammateDeathList.prototype.add = function (death) {\n\t        this.list.push(death);\n\t        return this;\n\t    };\n\t    return TeammateDeathList;\n\t}());\n\texports.TeammateDeathList = TeammateDeathList;\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t(function (HenchmanIDs) {\n\t    HenchmanIDs[HenchmanIDs[\"Garrus\"] = 0] = \"Garrus\";\n\t    HenchmanIDs[HenchmanIDs[\"Grunt\"] = 1] = \"Grunt\";\n\t    HenchmanIDs[HenchmanIDs[\"Jack\"] = 2] = \"Jack\";\n\t    HenchmanIDs[HenchmanIDs[\"Jacob\"] = 3] = \"Jacob\";\n\t    HenchmanIDs[HenchmanIDs[\"Kasumi\"] = 4] = \"Kasumi\";\n\t    HenchmanIDs[HenchmanIDs[\"Legion\"] = 5] = \"Legion\";\n\t    HenchmanIDs[HenchmanIDs[\"Miranda\"] = 6] = \"Miranda\";\n\t    HenchmanIDs[HenchmanIDs[\"Mordin\"] = 7] = \"Mordin\";\n\t    HenchmanIDs[HenchmanIDs[\"Morinth\"] = 8] = \"Morinth\";\n\t    HenchmanIDs[HenchmanIDs[\"Samara\"] = 9] = \"Samara\";\n\t    HenchmanIDs[HenchmanIDs[\"Tali\"] = 10] = \"Tali\";\n\t    HenchmanIDs[HenchmanIDs[\"Thane\"] = 11] = \"Thane\";\n\t    HenchmanIDs[HenchmanIDs[\"Zaeed\"] = 12] = \"Zaeed\";\n\t})(exports.HenchmanIDs || (exports.HenchmanIDs = {}));\n\tvar HenchmanIDs = exports.HenchmanIDs;\n\t(function (NormandyDelayOptions) {\n\t    NormandyDelayOptions[NormandyDelayOptions[\"None\"] = 0] = \"None\";\n\t    NormandyDelayOptions[NormandyDelayOptions[\"Few\"] = 1] = \"Few\";\n\t    NormandyDelayOptions[NormandyDelayOptions[\"Many\"] = 2] = \"Many\";\n\t})(exports.NormandyDelayOptions || (exports.NormandyDelayOptions = {}));\n\tvar NormandyDelayOptions = exports.NormandyDelayOptions;\n\t(function (SerialisedElements) {\n\t    SerialisedElements[SerialisedElements[\"All\"] = 0] = \"All\";\n\t    SerialisedElements[SerialisedElements[\"StageID\"] = 1] = \"StageID\";\n\t    SerialisedElements[SerialisedElements[\"NormandyDelay\"] = 2] = \"NormandyDelay\";\n\t    SerialisedElements[SerialisedElements[\"NormandyFlags\"] = 3] = \"NormandyFlags\";\n\t    SerialisedElements[SerialisedElements[\"Teammates\"] = 4] = \"Teammates\";\n\t})(exports.SerialisedElements || (exports.SerialisedElements = {}));\n\tvar SerialisedElements = exports.SerialisedElements;\n\t(function (SerialisedTeammateElements) {\n\t    SerialisedTeammateElements[SerialisedTeammateElements[\"All\"] = 0] = \"All\";\n\t    SerialisedTeammateElements[SerialisedTeammateElements[\"HenchmanID\"] = 1] = \"HenchmanID\";\n\t    SerialisedTeammateElements[SerialisedTeammateElements[\"DeathCause\"] = 2] = \"DeathCause\";\n\t    SerialisedTeammateElements[SerialisedTeammateElements[\"DeathStageID\"] = 3] = \"DeathStageID\";\n\t    SerialisedTeammateElements[SerialisedTeammateElements[\"Roles\"] = 4] = \"Roles\";\n\t})(exports.SerialisedTeammateElements || (exports.SerialisedTeammateElements = {}));\n\tvar SerialisedTeammateElements = exports.SerialisedTeammateElements;\n\t(function (TeammateDeathCauses) {\n\t    TeammateDeathCauses[TeammateDeathCauses[\"ArmourFailure\"] = 0] = \"ArmourFailure\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"ShieldingFailure\"] = 1] = \"ShieldingFailure\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"CannonFailure\"] = 2] = \"CannonFailure\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"VentsBadVenter\"] = 3] = \"VentsBadVenter\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"VentsBadLeader\"] = 4] = \"VentsBadLeader\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"LongWalkBadBubbler\"] = 5] = \"LongWalkBadBubbler\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"LongWalkBadLeader\"] = 6] = \"LongWalkBadLeader\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"Escort\"] = 7] = \"Escort\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"Boss\"] = 8] = \"Boss\";\n\t    TeammateDeathCauses[TeammateDeathCauses[\"HoldTheLine\"] = 9] = \"HoldTheLine\";\n\t})(exports.TeammateDeathCauses || (exports.TeammateDeathCauses = {}));\n\tvar TeammateDeathCauses = exports.TeammateDeathCauses;\n\t(function (TeammateRoles) {\n\t    TeammateRoles[TeammateRoles[\"OcculusSquadmate1\"] = 0] = \"OcculusSquadmate1\";\n\t    TeammateRoles[TeammateRoles[\"OcculusSquadmate2\"] = 1] = \"OcculusSquadmate2\";\n\t    TeammateRoles[TeammateRoles[\"VentsSquadmate1\"] = 2] = \"VentsSquadmate1\";\n\t    TeammateRoles[TeammateRoles[\"VentsSquadmate2\"] = 3] = \"VentsSquadmate2\";\n\t    TeammateRoles[TeammateRoles[\"VentsVenter\"] = 4] = \"VentsVenter\";\n\t    TeammateRoles[TeammateRoles[\"VentsLeader\"] = 5] = \"VentsLeader\";\n\t    TeammateRoles[TeammateRoles[\"LongWalkSquadmate1\"] = 6] = \"LongWalkSquadmate1\";\n\t    TeammateRoles[TeammateRoles[\"LongWalkSquadmate2\"] = 7] = \"LongWalkSquadmate2\";\n\t    TeammateRoles[TeammateRoles[\"LongWalkEscort\"] = 8] = \"LongWalkEscort\";\n\t    TeammateRoles[TeammateRoles[\"LongWalkBubbler\"] = 9] = \"LongWalkBubbler\";\n\t    TeammateRoles[TeammateRoles[\"LongWalkLeader\"] = 10] = \"LongWalkLeader\";\n\t    TeammateRoles[TeammateRoles[\"BossSquadmate1\"] = 11] = \"BossSquadmate1\";\n\t    TeammateRoles[TeammateRoles[\"BossSquadmate2\"] = 12] = \"BossSquadmate2\";\n\t    TeammateRoles[TeammateRoles[\"HeldTheLine\"] = 13] = \"HeldTheLine\";\n\t})(exports.TeammateRoles || (exports.TeammateRoles = {}));\n\tvar TeammateRoles = exports.TeammateRoles;\n\t(function (StageIDs) {\n\t    StageIDs[StageIDs[\"Setup\"] = 0] = \"Setup\";\n\t    StageIDs[StageIDs[\"Occulus\"] = 1] = \"Occulus\";\n\t    StageIDs[StageIDs[\"Vents\"] = 2] = \"Vents\";\n\t    StageIDs[StageIDs[\"LongWalk\"] = 3] = \"LongWalk\";\n\t    StageIDs[StageIDs[\"Boss\"] = 4] = \"Boss\";\n\t    StageIDs[StageIDs[\"Summary\"] = 5] = \"Summary\";\n\t})(exports.StageIDs || (exports.StageIDs = {}));\n\tvar StageIDs = exports.StageIDs;\n\t(function (SummaryCrewSurvivalOptions) {\n\t    SummaryCrewSurvivalOptions[SummaryCrewSurvivalOptions[\"AllSurvived\"] = 0] = \"AllSurvived\";\n\t    SummaryCrewSurvivalOptions[SummaryCrewSurvivalOptions[\"HalfSurvived\"] = 1] = \"HalfSurvived\";\n\t    SummaryCrewSurvivalOptions[SummaryCrewSurvivalOptions[\"AllDied\"] = 2] = \"AllDied\";\n\t})(exports.SummaryCrewSurvivalOptions || (exports.SummaryCrewSurvivalOptions = {}));\n\tvar SummaryCrewSurvivalOptions = exports.SummaryCrewSurvivalOptions;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Occulus = (function (_super) {\n\t    __extends(Occulus, _super);\n\t    function Occulus(stager) {\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.Occulus;\n\t        this.label = \"Occulus\";\n\t        this.configureFields([\n\t            {\n\t                name: \"occulus_squadmate_1\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.OcculusSquadmate1\n\t            },\n\t            {\n\t                name: \"occulus_squadmate_2\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.OcculusSquadmate2\n\t            }\n\t        ]);\n\t    }\n\t    Occulus.prototype.evaluate = function () {\n\t        var death_list = new TeammateDeathList_1.TeammateDeathList;\n\t        var dpt = this.stager.app.state.teammates().whoAreRecruited().withoutAnyOfTheseRoles(constants_1.TeammateRoles.OcculusSquadmate1, constants_1.TeammateRoles.OcculusSquadmate2);\n\t        if (!this.stager.app.state.normandy.has_shielding()) {\n\t            death_list.add({\n\t                teammate: dpt.whoAreAlive().sortByShieldingDeathPriority().last(),\n\t                death_cause: constants_1.TeammateDeathCauses.ShieldingFailure,\n\t                death_stage_id: this.id\n\t            });\n\t        }\n\t        if (!this.stager.app.state.normandy.has_armour()) {\n\t            death_list.add({\n\t                teammate: dpt.whoAreAlive().sortByArmourDeathPriority().last(),\n\t                death_cause: constants_1.TeammateDeathCauses.ArmourFailure,\n\t                death_stage_id: this.id\n\t            });\n\t        }\n\t        if (!this.stager.app.state.normandy.has_thanix_cannon()) {\n\t            death_list.add({\n\t                teammate: dpt.whoAreAlive().sortByCannonDeathPriority().last(),\n\t                death_cause: constants_1.TeammateDeathCauses.CannonFailure,\n\t                death_stage_id: this.id\n\t            });\n\t        }\n\t        return death_list;\n\t    };\n\t    return Occulus;\n\t}(Stage_1.Stage));\n\texports.Occulus = Occulus;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Vents = (function (_super) {\n\t    __extends(Vents, _super);\n\t    function Vents(stager) {\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.Vents;\n\t        this.label = \"Vents\";\n\t        this.configureFields([\n\t            {\n\t                name: \"vent_squadmate_1\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.VentsSquadmate1\n\t            },\n\t            {\n\t                name: \"vent_squadmate_2\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.VentsSquadmate2\n\t            },\n\t            {\n\t                name: \"vent_venter\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_vent_candidate;\n\t                },\n\t                role: constants_1.TeammateRoles.VentsVenter\n\t            },\n\t            {\n\t                name: \"vent_leader\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_leader_candidate;\n\t                },\n\t                role: constants_1.TeammateRoles.VentsLeader\n\t            }\n\t        ]);\n\t    }\n\t    Vents.prototype.evaluate = function () {\n\t        var death_list = new TeammateDeathList_1.TeammateDeathList();\n\t        var venter = this.getFieldValue(\"vent_venter\");\n\t        var leader = this.getFieldValue(\"vent_leader\");\n\t        if (!venter.willBeEffectiveVentVenter()) {\n\t            death_list.add({\n\t                teammate: venter,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.VentsBadVenter\n\t            });\n\t        }\n\t        else if (!leader.willBeEffectiveVentLeader()) {\n\t            death_list.add({\n\t                teammate: venter,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.VentsBadLeader\n\t            });\n\t        }\n\t        return death_list;\n\t    };\n\t    return Vents;\n\t}(Stage_1.Stage));\n\texports.Vents = Vents;\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar LongWalk = (function (_super) {\n\t    __extends(LongWalk, _super);\n\t    function LongWalk(stager) {\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.LongWalk;\n\t        this.label = \"Long Walk\";\n\t        this.configureFields([\n\t            {\n\t                name: \"long_walk_bubbler\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_bubble_candidate;\n\t                },\n\t                role: constants_1.TeammateRoles.LongWalkBubbler\n\t            },\n\t            {\n\t                name: \"long_walk_leader\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_leader_candidate;\n\t                },\n\t                role: constants_1.TeammateRoles.LongWalkLeader\n\t            },\n\t            {\n\t                name: \"long_walk_escort\",\n\t                filter: function (teammate, teammates) {\n\t                    if (teammates.whoAreAlive().length() <= 4) {\n\t                        return false;\n\t                    }\n\t                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_escort_candidate;\n\t                },\n\t                optional: true,\n\t                role: constants_1.TeammateRoles.LongWalkEscort\n\t            },\n\t            {\n\t                name: \"long_walk_squadmate_1\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.LongWalkSquadmate1\n\t            },\n\t            {\n\t                name: \"long_walk_squadmate_2\",\n\t                filter: Stage_1.Stage.genericTeammateFieldFilter,\n\t                role: constants_1.TeammateRoles.LongWalkSquadmate2\n\t            }\n\t        ]);\n\t    }\n\t    LongWalk.prototype.evaluate = function () {\n\t        var death_list = new TeammateDeathList_1.TeammateDeathList();\n\t        var escort = this.getFieldValue(\"long_walk_escort\");\n\t        var bubbler = this.getFieldValue(\"long_walk_bubbler\");\n\t        var leader = this.getFieldValue(\"long_walk_leader\");\n\t        if (escort.henchman.id !== undefined && !escort.willBeEffectiveLongWalkEscort()) {\n\t            death_list.add({\n\t                teammate: escort,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.Escort\n\t            });\n\t        }\n\t        if (!bubbler.willBeEffectiveLongWalkBubbler()) {\n\t            death_list.add({\n\t                teammate: this.stager.app.state.teammates().withAnyOfTheseRoles(constants_1.TeammateRoles.LongWalkSquadmate1, constants_1.TeammateRoles.LongWalkSquadmate2).sortByLongWalkDeathPriority().last(),\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.LongWalkBadBubbler\n\t            });\n\t        }\n\t        if (!leader.willBeEffectiveLongWalkLeader()) {\n\t            death_list.add({\n\t                teammate: leader,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.LongWalkBadLeader\n\t            });\n\t        }\n\t        return death_list;\n\t    };\n\t    return LongWalk;\n\t}(Stage_1.Stage));\n\texports.LongWalk = LongWalk;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Boss = (function (_super) {\n\t    __extends(Boss, _super);\n\t    function Boss(stager) {\n\t        var _this = this;\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.Boss;\n\t        this.label = \"Boss\";\n\t        this.configureFields([\n\t            {\n\t                name: \"boss_squadmate_1\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && !teammate.hasRole(constants_1.TeammateRoles.LongWalkEscort);\n\t                },\n\t                role: constants_1.TeammateRoles.BossSquadmate1\n\t            },\n\t            {\n\t                name: \"boss_squadmate_2\",\n\t                filter: function (teammate) {\n\t                    return teammate.is_recruited() && !teammate.is_dead() && !teammate.hasRole(constants_1.TeammateRoles.LongWalkEscort);\n\t                },\n\t                role: constants_1.TeammateRoles.BossSquadmate2\n\t            }\n\t        ]);\n\t        this.getFieldObservable(\"boss_squadmate_1\").subscribe(function () {\n\t            _this.updateHTLRoles();\n\t        });\n\t        this.getFieldObservable(\"boss_squadmate_2\").subscribe(function () {\n\t            _this.updateHTLRoles();\n\t        });\n\t    }\n\t    Boss.prototype.evaluate = function () {\n\t        var _this = this;\n\t        var death_list = new TeammateDeathList_1.TeammateDeathList();\n\t        var squadmate_1 = this.getFieldValue(\"boss_squadmate_1\");\n\t        var squadmate_2 = this.getFieldValue(\"boss_squadmate_2\");\n\t        if (!squadmate_1.willSurviveBeingBossSquadmate()) {\n\t            death_list.add({\n\t                teammate: squadmate_1,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.Boss\n\t            });\n\t        }\n\t        if (!squadmate_2.willSurviveBeingBossSquadmate()) {\n\t            death_list.add({\n\t                teammate: squadmate_2,\n\t                death_stage_id: this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.Boss\n\t            });\n\t        }\n\t        this.stager.app.state.teammates().withRole(constants_1.TeammateRoles.HeldTheLine).whoDieHoldingTheLine().each(function (teammate) {\n\t            death_list.add({\n\t                teammate: teammate,\n\t                death_stage_id: _this.id,\n\t                death_cause: constants_1.TeammateDeathCauses.HoldTheLine\n\t            });\n\t        });\n\t        return death_list;\n\t    };\n\t    Boss.prototype.updateHTLRoles = function () {\n\t        var squadmates = this.stager.app.state.teammates().withAnyOfTheseRoles(constants_1.TeammateRoles.BossSquadmate1, constants_1.TeammateRoles.BossSquadmate2);\n\t        var candidates = this.stager.app.state.teammates().whoAreAlive().whoAreRecruited();\n\t        squadmates.removeRole(constants_1.TeammateRoles.HeldTheLine);\n\t        if (squadmates.length() === 2) {\n\t            candidates.removeRole(constants_1.TeammateRoles.HeldTheLine).withoutAnyOfTheseRoles(constants_1.TeammateRoles.BossSquadmate1, constants_1.TeammateRoles.BossSquadmate2, constants_1.TeammateRoles.LongWalkEscort).addRole(constants_1.TeammateRoles.HeldTheLine);\n\t        }\n\t    };\n\t    return Boss;\n\t}(Stage_1.Stage));\n\texports.Boss = Boss;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Stage_1 = __webpack_require__(7);\n\tvar constants_1 = __webpack_require__(11);\n\tvar TeammateDeathList_1 = __webpack_require__(10);\n\tvar Summary = (function (_super) {\n\t    __extends(Summary, _super);\n\t    function Summary(stager) {\n\t        _super.call(this, stager);\n\t        this.id = constants_1.StageIDs.Summary;\n\t        this.label = \"Summary\";\n\t        this.shepard_lives = ko.observable(undefined);\n\t        this.shepard_pulled_up_by = ko.observable(undefined);\n\t        this.defence_reporter = ko.observable(undefined);\n\t        this.keep_base_advocate = ko.observable(undefined);\n\t        this.destroy_base_advocate = ko.observable(undefined);\n\t        this.crew_survival = ko.observable(undefined);\n\t        this.is_evaluatable = ko.observable(false);\n\t        this.htl_total = ko.observable(undefined);\n\t        this.htl_score = ko.observable(undefined);\n\t        this.htl_candidates_count = ko.observable(undefined);\n\t        this.htl_death_count = ko.observable(undefined);\n\t    }\n\t    Summary.prototype.evaluate = function () {\n\t        return new TeammateDeathList_1.TeammateDeathList();\n\t    };\n\t    Summary.prototype.setup = function () {\n\t        var htl_teammates = this.stager.app.state.teammates().withRole(constants_1.TeammateRoles.HeldTheLine);\n\t        this.defence_reporter(this.getDefenceReporter());\n\t        this.shepard_lives(this.getShepardLives());\n\t        this.shepard_pulled_up_by(this.getShepardCatcher());\n\t        this.keep_base_advocate(this.getKeepBaseAdvocate());\n\t        this.destroy_base_advocate(this.getDestroyBaseAdvocate());\n\t        this.crew_survival(this.getCrewSurvival());\n\t        this.htl_total(htl_teammates.getHoldTheLineTotal());\n\t        this.htl_score(htl_teammates.getHoldTheLineScore().toFixed(2));\n\t        this.htl_candidates_count(htl_teammates.length());\n\t        this.htl_death_count(htl_teammates.getHoldTheLineDeathCount());\n\t    };\n\t    Summary.prototype.getLivingTeammates = function () {\n\t        return this.stager.app.state.teammates().whoAreAlive().whoAreRecruited();\n\t    };\n\t    Summary.prototype.getShepardLives = function () {\n\t        return this.getLivingTeammates().length() > 1;\n\t    };\n\t    Summary.prototype.getShepardCatcher = function () {\n\t        var candidates = this.getLivingTeammates().sort(function (teammate) {\n\t            var score = teammate.henchman.cutscene_rescue_priority + (teammate.hasAnyOfTheseRoles(constants_1.TeammateRoles.BossSquadmate1, constants_1.TeammateRoles.BossSquadmate2) ? 100 : 0);\n\t            return score;\n\t        });\n\t        return candidates.length() > 1 ? candidates.last() : undefined;\n\t    };\n\t    Summary.prototype.getDefenceReporter = function () {\n\t        return this.stager.app.state.teammates().withRole(constants_1.TeammateRoles.HeldTheLine).sortByDefenceReportPriority().last();\n\t    };\n\t    Summary.prototype.getKeepBaseAdvocate = function () {\n\t        return this.stager.app.state.teammates().withAnyOfTheseRoles(constants_1.TeammateRoles.BossSquadmate1, constants_1.TeammateRoles.BossSquadmate2).whoAdvocateKeepingTheBase().sortByKeepBasePriority().last();\n\t    };\n\t    Summary.prototype.getDestroyBaseAdvocate = function () {\n\t        return this.stager.app.state.teammates().withAnyOfTheseRoles(constants_1.TeammateRoles.BossSquadmate1, constants_1.TeammateRoles.BossSquadmate2).whoAdvocateDestroyingTheBase().sortByDestroyBasePriority().last();\n\t    };\n\t    Summary.prototype.getCrewSurvival = function () {\n\t        if (this.stager.app.state.teammates().withRole(constants_1.TeammateRoles.LongWalkEscort).length() === 0) {\n\t            return constants_1.SummaryCrewSurvivalOptions.AllDied;\n\t        }\n\t        if (this.stager.app.state.normandy.delay() === constants_1.NormandyDelayOptions.None) {\n\t            return constants_1.SummaryCrewSurvivalOptions.AllSurvived;\n\t        }\n\t        else if (this.stager.app.state.normandy.delay() === constants_1.NormandyDelayOptions.Few) {\n\t            return constants_1.SummaryCrewSurvivalOptions.HalfSurvived;\n\t        }\n\t        else {\n\t            return constants_1.SummaryCrewSurvivalOptions.AllDied;\n\t        }\n\t    };\n\t    return Summary;\n\t}(Stage_1.Stage));\n\texports.Summary = Summary;\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Normandy_1 = __webpack_require__(18);\n\tvar Teammates_1 = __webpack_require__(19);\n\tvar Teammate_1 = __webpack_require__(8);\n\tvar State = (function () {\n\t    function State(app) {\n\t        var _this = this;\n\t        this.app = app;\n\t        this.normandy = new Normandy_1.Normandy(true, true, true);\n\t        this.stage = ko.observable(undefined);\n\t        this.bootstrapTeammates();\n\t        this.serialised = ko.forcibleComputed(function () {\n\t            if (_this.stage()) {\n\t                return _this.serialise();\n\t            }\n\t            else {\n\t                return \"\";\n\t            }\n\t        });\n\t    }\n\t    State.prototype.serialise = function () {\n\t        return this.app.serialisation.serialise(this);\n\t    };\n\t    State.prototype.applySerialisedState = function (serialised) {\n\t        this.app.serialisation.applySerialisedState(this, serialised);\n\t    };\n\t    State.prototype.bootstrapTeammates = function () {\n\t        this._teammates = new Teammates_1.Teammates(_.chain(this.app.getHenchmen()).map(function (henchman) {\n\t            return new Teammate_1.Teammate(henchman, henchman.is_essential, false, false);\n\t        }).sortBy(function (teammate) {\n\t            return teammate.henchman.name;\n\t        }).value());\n\t        this.teammates = ko.observable(this._teammates);\n\t    };\n\t    return State;\n\t}());\n\texports.State = State;\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar constants_1 = __webpack_require__(11);\n\tvar Normandy = (function () {\n\t    function Normandy(has_armor, has_shielding, has_thanix_cannon, delay) {\n\t        var _this = this;\n\t        if (has_armor === void 0) { has_armor = false; }\n\t        if (has_shielding === void 0) { has_shielding = false; }\n\t        if (has_thanix_cannon === void 0) { has_thanix_cannon = false; }\n\t        if (delay === void 0) { delay = 0; }\n\t        this.has_armour = ko.observable(has_armor);\n\t        this.has_shielding = ko.observable(has_shielding);\n\t        this.has_thanix_cannon = ko.observable(has_thanix_cannon);\n\t        this._delay = ko.observable(delay);\n\t        this.delay = ko.pureComputed({\n\t            read: function () {\n\t                return _this._delay();\n\t            },\n\t            write: function (value) {\n\t                var delay = parseInt(\"\" + value, 10);\n\t                if (!_.isNaN(delay) && delay >= constants_1.NormandyDelayOptions.None && delay <= constants_1.NormandyDelayOptions.Many) {\n\t                    _this._delay(delay);\n\t                }\n\t            }\n\t        });\n\t    }\n\t    return Normandy;\n\t}());\n\texports.Normandy = Normandy;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar ObjectArray_1 = __webpack_require__(25);\n\tvar Teammates = (function () {\n\t    function Teammates(elements) {\n\t        this.oa = new ObjectArray_1.ObjectArray(elements);\n\t    }\n\t    Teammates.fromObjectArray = function (oa) {\n\t        return new Teammates(oa.elements);\n\t    };\n\t    Teammates.prototype.value = function () {\n\t        return this.oa.elements;\n\t    };\n\t    Teammates.prototype.first = function () {\n\t        return this.oa.first();\n\t    };\n\t    Teammates.prototype.last = function () {\n\t        return this.oa.last();\n\t    };\n\t    Teammates.prototype.length = function () {\n\t        return this.oa.length();\n\t    };\n\t    Teammates.prototype.whoAreAlive = function () {\n\t        return this.filter(function (teammate) {\n\t            return !teammate.is_dead();\n\t        });\n\t    };\n\t    Teammates.prototype.die = function (stage_id, death_cause) {\n\t        this.each(function (teammate) {\n\t            teammate.die(stage_id, death_cause);\n\t        });\n\t        return this;\n\t    };\n\t    Teammates.prototype.whoAreRecruited = function () {\n\t        return this.filter(function (teammate) {\n\t            return teammate.is_recruited();\n\t        });\n\t    };\n\t    Teammates.prototype.addRole = function (role) {\n\t        this.each(function (teammate) {\n\t            teammate.addRole(role);\n\t        });\n\t        return this;\n\t    };\n\t    Teammates.prototype.removeRole = function (role) {\n\t        this.each(function (teammate) {\n\t            teammate.removeRole(role);\n\t        });\n\t        return this;\n\t    };\n\t    Teammates.prototype.withRole = function (role) {\n\t        return this.filter(function (teammate) {\n\t            return teammate.hasRole(role);\n\t        });\n\t    };\n\t    Teammates.prototype.withAnyOfTheseRoles = function () {\n\t        var roles = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            roles[_i - 0] = arguments[_i];\n\t        }\n\t        return this.filter(function (teammate) {\n\t            return teammate.hasAnyOfTheseRoles.apply(teammate, roles);\n\t        });\n\t    };\n\t    Teammates.prototype.withoutRole = function (role) {\n\t        return this.filter(function (teammate) {\n\t            return !teammate.hasRole(role);\n\t        });\n\t    };\n\t    Teammates.prototype.withoutAnyOfTheseRoles = function () {\n\t        var roles = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            roles[_i - 0] = arguments[_i];\n\t        }\n\t        return this.filter(function (teammate) {\n\t            return !teammate.hasAnyOfTheseRoles.apply(teammate, roles);\n\t        });\n\t    };\n\t    Teammates.prototype.sortByHenchmanProperty = function (property, ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sort(function (teammate) {\n\t            return (ascending ? 1 : -1) * teammate.henchman[property];\n\t        });\n\t    };\n\t    Teammates.prototype.sortByShieldingDeathPriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"shielding_death_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByArmourDeathPriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"armour_death_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByCannonDeathPriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"cannon_death_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByLongWalkDeathPriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"long_walk_death_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByDefenceReportPriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"defence_report_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByKeepBasePriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"keep_base_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByDestroyBasePriority = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sortByHenchmanProperty(\"destroy_base_priority\", ascending);\n\t    };\n\t    Teammates.prototype.sortByIsRecruited = function (ascending) {\n\t        if (ascending === void 0) { ascending = true; }\n\t        return this.sort(function (teammate) {\n\t            return teammate.is_recruited() ? 0 : 1;\n\t        });\n\t    };\n\t    Teammates.prototype.whoAdvocateKeepingTheBase = function () {\n\t        return this.filter(function (teammate) {\n\t            return teammate.henchman.keep_base_priority > 0;\n\t        });\n\t    };\n\t    Teammates.prototype.whoAdvocateDestroyingTheBase = function () {\n\t        return this.filter(function (teammate) {\n\t            return teammate.henchman.destroy_base_priority > 0;\n\t        });\n\t    };\n\t    Teammates.prototype.without = function () {\n\t        var teammates = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            teammates[_i - 0] = arguments[_i];\n\t        }\n\t        return Teammates.fromObjectArray(this.oa.without.apply(this.oa, teammates));\n\t    };\n\t    Teammates.prototype.filter = function (iterator) {\n\t        return Teammates.fromObjectArray(this.oa.filter(iterator));\n\t    };\n\t    Teammates.prototype.map = function (iterator) {\n\t        return this.oa.map(iterator);\n\t    };\n\t    Teammates.prototype.find = function (iterator) {\n\t        return this.oa.find(iterator);\n\t    };\n\t    Teammates.prototype.findByHenchman = function (henchman) {\n\t        return this.findByHenchmanID(henchman.id);\n\t    };\n\t    Teammates.prototype.findByHenchmanID = function (id) {\n\t        return this.find(function (teammate) {\n\t            return teammate.henchman.id === id;\n\t        });\n\t    };\n\t    Teammates.prototype.sort = function (iterator) {\n\t        return Teammates.fromObjectArray(this.oa.sort(iterator));\n\t    };\n\t    Teammates.prototype.slice = function (start, end) {\n\t        return Teammates.fromObjectArray(this.oa.slice(start, end));\n\t    };\n\t    Teammates.prototype.getHoldTheLineTotal = function () {\n\t        var scores = _.map(this.oa.elements, function (teammate) {\n\t            return teammate.getHoldTheLineScore();\n\t        });\n\t        return _.reduce(scores, function (sum, score) {\n\t            return sum + score;\n\t        }, 0);\n\t    };\n\t    Teammates.prototype.getHoldTheLineScore = function () {\n\t        return this.getHoldTheLineTotal() / this.length();\n\t    };\n\t    Teammates.prototype.getHoldTheLineDeathCount = function () {\n\t        var pool_size = this.length();\n\t        var score = this.getHoldTheLineScore();\n\t        if (score < 2.0) {\n\t            if (pool_size >= 5) {\n\t                if (score >= 1.5) {\n\t                    return 1;\n\t                }\n\t                else if (score >= 0.5) {\n\t                    return 2;\n\t                }\n\t                else {\n\t                    return 3;\n\t                }\n\t            }\n\t            else if (pool_size === 4) {\n\t                if (score >= 1.0) {\n\t                    return 1;\n\t                }\n\t                else if (score >= 0.5) {\n\t                    return 2;\n\t                }\n\t                else if (score > 0) {\n\t                    return 3;\n\t                }\n\t                else {\n\t                    return 4;\n\t                }\n\t            }\n\t            else if (pool_size === 3) {\n\t                if (score >= 1) {\n\t                    return 1;\n\t                }\n\t                else if (score > 0) {\n\t                    return 2;\n\t                }\n\t                else {\n\t                    return 3;\n\t                }\n\t            }\n\t            else if (pool_size === 2) {\n\t                if (score > 0) {\n\t                    return 1;\n\t                }\n\t                else {\n\t                    return 2;\n\t                }\n\t            }\n\t            else {\n\t                return 1;\n\t            }\n\t        }\n\t        else {\n\t            return 0;\n\t        }\n\t    };\n\t    Teammates.prototype.whoDieHoldingTheLine = function () {\n\t        var death_count = this.getHoldTheLineDeathCount();\n\t        if (death_count > 0) {\n\t            return this.sort(function (teammate) {\n\t                return teammate.henchman.htl_death_priority + (!teammate.is_loyal() ? 100 : 0);\n\t            }).slice(-death_count);\n\t        }\n\t        else {\n\t            return new Teammates([]);\n\t        }\n\t    };\n\t    Teammates.prototype.each = function (iterator) {\n\t        this.oa.each(iterator);\n\t    };\n\t    return Teammates;\n\t}());\n\texports.Teammates = Teammates;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Normandy_1 = __webpack_require__(18);\n\tvar Teammate_1 = __webpack_require__(8);\n\tvar Teammates_1 = __webpack_require__(19);\n\tvar State_1 = __webpack_require__(17);\n\tvar constants_1 = __webpack_require__(11);\n\tvar Serialisation = (function () {\n\t    function Serialisation(app) {\n\t        this.app = app;\n\t    }\n\t    Serialisation.lpad = function (value, length) {\n\t        if (length === void 0) { length = 2; }\n\t        var value_str = value;\n\t        return value_str.length >= length ? value_str : new Array(length - value_str.length + 1).join(\"0\") + value_str;\n\t    };\n\t    Serialisation.indexesToFlags = function (indexes) {\n\t        return _.reduce(indexes, function (accumulator, index) {\n\t            return accumulator + Math.pow(2, index);\n\t        }, 0);\n\t    };\n\t    Serialisation.flagsToIndexes = function (flags) {\n\t        var indexes = [];\n\t        var index = 0;\n\t        var flag = 1;\n\t        while (flag <= flags) {\n\t            if (flags & flag) {\n\t                indexes.push(index);\n\t            }\n\t            index++;\n\t            flag *= 2;\n\t        }\n\t        return indexes;\n\t    };\n\t    Serialisation.getRoleCount = function () {\n\t        return _.keys(constants_1.TeammateRoles).length / 2;\n\t    };\n\t    Serialisation.prototype.serialise = function (state) {\n\t        var _this = this;\n\t        var elements = [\n\t            Serialisation.lpad(state.stage().id.toString(16), 1),\n\t            this.serialiseNormandy(state.normandy),\n\t            _.map(state.teammates().value(), function (teammate) {\n\t                return _this.serialiseTeammate(teammate);\n\t            }).join(\"\")\n\t        ];\n\t        return elements.join(\"\");\n\t    };\n\t    Serialisation.prototype.deserialise = function (serialised) {\n\t        var _this = this;\n\t        var matches = serialised.match(Serialisation.SerialisedRegex);\n\t        if (matches) {\n\t            var deserialised = new State_1.State(this.app);\n\t            deserialised.stage(this.app.stager.getStage(parseInt(\"0x\" + matches[constants_1.SerialisedElements.StageID], 16)));\n\t            deserialised.normandy = this.deserialiseNormandyElements(matches[constants_1.SerialisedElements.NormandyDelay], matches[constants_1.SerialisedElements.NormandyFlags]);\n\t            deserialised.teammates(new Teammates_1.Teammates(_.map(matches[constants_1.SerialisedElements.Teammates].match(Serialisation.TeammatesRegex), function (serialised_teammate) {\n\t                return _this.deserialiseTeammate(serialised_teammate);\n\t            })));\n\t            return deserialised;\n\t        }\n\t        else {\n\t            throw new Error(\"Serialised data was malformed.\");\n\t        }\n\t    };\n\t    Serialisation.prototype.applySerialisedState = function (state, serialised) {\n\t        var new_state = this.deserialise(serialised);\n\t        state.normandy.delay(new_state.normandy.delay());\n\t        state.normandy.has_armour(new_state.normandy.has_armour());\n\t        state.normandy.has_shielding(new_state.normandy.has_shielding());\n\t        state.normandy.has_thanix_cannon(new_state.normandy.has_thanix_cannon());\n\t        var new_teammates = new_state.teammates();\n\t        state.teammates().each(function (teammate) {\n\t            var new_teammate = new_teammates.findByHenchman(teammate.henchman);\n\t            teammate.is_recruited(new_teammate.is_recruited());\n\t            teammate.is_loyal(new_teammate.is_loyal());\n\t            teammate.is_dead(new_teammate.is_dead());\n\t            teammate.roles.removeAll();\n\t            _.each(new_teammate.roles(), function (role) {\n\t                teammate.addRole(role);\n\t            });\n\t            teammate.death_cause = new_teammate.death_cause;\n\t            teammate.death_stage_id = new_teammate.death_stage_id;\n\t        });\n\t        state.stage(new_state.stage());\n\t    };\n\t    Serialisation.prototype.serialiseTeammate = function (teammate) {\n\t        var role_offset = Serialisation.getRoleCount();\n\t        var roles = teammate.roles().slice(0);\n\t        if (teammate.is_recruited()) {\n\t            roles.push(role_offset + 1);\n\t        }\n\t        if (teammate.is_loyal()) {\n\t            roles.push(role_offset + 2);\n\t        }\n\t        if (teammate.is_dead()) {\n\t            roles.push(role_offset + 3);\n\t        }\n\t        var elements = [\n\t            Serialisation.lpad(teammate.henchman.id.toString(16), 1),\n\t            Serialisation.lpad((teammate.death_cause() === undefined ? 0 : teammate.death_cause() + 1).toString(16), 1),\n\t            Serialisation.lpad((teammate.death_stage_id() || 0).toString(16), 1),\n\t            Serialisation.lpad(Serialisation.indexesToFlags(roles).toString(16), 5)\n\t        ];\n\t        return elements.join(\"\");\n\t    };\n\t    Serialisation.prototype.deserialiseTeammate = function (serialised) {\n\t        var matches = serialised.match(Serialisation.TeammateRegex);\n\t        var henchman_id = parseInt(\"0x\" + matches[constants_1.SerialisedTeammateElements.HenchmanID], 16);\n\t        var death_cause = parseInt(\"0x\" + matches[constants_1.SerialisedTeammateElements.DeathCause], 16);\n\t        var death_stage_id = parseInt(\"0x\" + matches[constants_1.SerialisedTeammateElements.DeathStageID], 16) || undefined;\n\t        var roles = Serialisation.flagsToIndexes(parseInt(\"0x\" + matches[constants_1.SerialisedTeammateElements.Roles], 16));\n\t        var role_offset = Serialisation.getRoleCount();\n\t        var is_recruited = _.indexOf(roles, role_offset + 1) >= 0;\n\t        var is_loyal = _.indexOf(roles, role_offset + 2) >= 0;\n\t        var is_dead = _.indexOf(roles, role_offset + 3) >= 0;\n\t        roles = _.without(roles, role_offset + 1, role_offset + 2, role_offset + 3);\n\t        var deserialised = new Teammate_1.Teammate(this.app.getHenchman(henchman_id), is_recruited, is_loyal, is_dead, roles);\n\t        if (is_dead) {\n\t            deserialised.die(death_stage_id, death_cause - 1);\n\t        }\n\t        return deserialised;\n\t    };\n\t    Serialisation.prototype.serialiseNormandy = function (normandy) {\n\t        var flags = 0 + (normandy.has_armour() ? 1 : 0) + (normandy.has_shielding() ? 2 : 0) + (normandy.has_thanix_cannon() ? 4 : 0);\n\t        var elements = [\n\t            Serialisation.lpad(normandy.delay().toString(10), 2),\n\t            Serialisation.lpad(flags.toString(10), 1)\n\t        ];\n\t        return elements.join(\"\");\n\t    };\n\t    Serialisation.prototype.deserialiseNormandyElements = function (serialised_delay, serialised_flags) {\n\t        var delay = parseInt(serialised_delay, 10);\n\t        var flags = parseInt(serialised_flags, 10);\n\t        var has_armour = !!(flags & 1);\n\t        var has_shielding = !!(flags & 2);\n\t        var has_thanix_cannon = !!(flags & 4);\n\t        return new Normandy_1.Normandy(has_armour, has_shielding, has_thanix_cannon, delay);\n\t    };\n\t    Serialisation.TeammateRegex = /^([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f]{5})$/;\n\t    Serialisation.TeammatesRegex = /[0-9a-f]{8}/g;\n\t    Serialisation.SerialisedRegex = /^([0-9a-f])([\\d]{2})([\\d])((?:[0-9a-f]{2}[0-9a-f][0-9a-f]{5}){12})$/;\n\t    return Serialisation;\n\t}());\n\texports.Serialisation = Serialisation;\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\tvar ObjectArray = (function () {\n\t    function ObjectArray(elements) {\n\t        this.elements = elements;\n\t    }\n\t    ObjectArray.prototype.first = function () {\n\t        return this.elements.length ? this.elements[0] : undefined;\n\t    };\n\t    ObjectArray.prototype.last = function () {\n\t        return this.elements.length ? this.elements[this.elements.length - 1] : undefined;\n\t    };\n\t    ObjectArray.prototype.length = function () {\n\t        return this.elements.length;\n\t    };\n\t    ObjectArray.prototype.push = function (element) {\n\t        var elements = this.cloneElements();\n\t        elements.push(element);\n\t        return this.factory(elements);\n\t    };\n\t    ObjectArray.prototype.unshift = function (element) {\n\t        var elements = this.cloneElements();\n\t        elements.unshift(element);\n\t        return this.factory(elements);\n\t    };\n\t    ObjectArray.prototype.slice = function (start, end) {\n\t        return this.factory(this.elements.slice(start, end));\n\t    };\n\t    ObjectArray.prototype.sort = function (iterator) {\n\t        var elements = _.sortBy(this.cloneElements(), iterator);\n\t        return this.factory(elements);\n\t    };\n\t    ObjectArray.prototype.filter = function (iterator) {\n\t        var elements = _.filter(this.cloneElements(), iterator);\n\t        return this.factory(elements);\n\t    };\n\t    ObjectArray.prototype.without = function () {\n\t        var values = [];\n\t        for (var _i = 0; _i < arguments.length; _i++) {\n\t            values[_i - 0] = arguments[_i];\n\t        }\n\t        values.unshift.apply(values, this.cloneElements());\n\t        var elements = _.without.apply(_, values);\n\t        return this.factory(elements);\n\t    };\n\t    ObjectArray.prototype.find = function (iterator) {\n\t        return _.find(this.elements, iterator);\n\t    };\n\t    ObjectArray.prototype.map = function (iterator) {\n\t        return _.map(this.elements, iterator);\n\t    };\n\t    ObjectArray.prototype.each = function (iterator) {\n\t        _.each(this.elements, iterator);\n\t    };\n\t    ObjectArray.prototype.cloneElements = function () {\n\t        return this.elements.slice(0);\n\t    };\n\t    ObjectArray.prototype.factory = function (elements) {\n\t        return new ObjectArray(elements);\n\t    };\n\t    return ObjectArray;\n\t}());\n\texports.ObjectArray = ObjectArray;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.1.0.0.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/cdn/bundle/assets\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 545963a5129d4d60503e\n **/","/* tslint:disable:no-require-imports */\n\nimport { name as Modal } from \"./Knockout/Bindings/Modal\";\nimport { name as ForcibleComputed } from \"./Knockout/ForcibleComputed\";\nimport { Application } from \"./App/Application\";\nimport { StageIDs, TeammateRoles } from \"./App/constants\";\nimport * as Constants from \"./App/constants\";\n\n// Load the CSS\nrequire(\"../scss/app.scss\");\n\nvoid([\n    Modal,\n    ForcibleComputed,\n    Constants\n].join(\",\"));\n\n_.extend(window, {\n    Application,\n    Constants: {\n        StageIDs,\n        TeammateRoles\n    }\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/app.ts\n **/","export const name: string = \"modal\";\n\nvoid(((): void => {\n    ko.bindingHandlers[name] = {\n        init: (element: HTMLElement, value_accessor: KnockoutObservable<any>, all_bindings_accessor: KnockoutAllBindingsAccessor, data: any, context: any): any => {\n            const $element = $(element);\n\n            $element.modal({\n                show: false\n            });\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, () => {\n                $element.modal(\"destroy\");\n            });\n        },\n        update: (element: HTMLElement, value_accessor: KnockoutObservable<any>, all_bindings_accessor: KnockoutAllBindingsAccessor, data: any, context: any): void => {\n            const value = value_accessor();\n            const $element = $(element);\n\n            if (value) {\n                $element.modal(\"show\");\n            } else {\n                $element.modal(\"hide\");\n            }\n        }\n    };\n})());\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/Knockout/Bindings/Modal.ts\n **/","export const name: string = \"forcibleComputed\";\n\nvoid(((): void => {\n    ko[name] = <T>(func: () => T, context?: any, options?: any): KnockoutForcibleComputed<T> => {\n        const trigger: KnockoutObservable<T> = ko.observable<T>().extend({notify:'always'});\n        const target: KnockoutComputed<T> = ko.computed(function (): T {\n            trigger();\n            return func.call(context);\n        }, null, options);\n\n        target[\"evaluateImmediate\"] = function(): void {\n            trigger.valueHasMutated();\n        };\n\n        return <KnockoutForcibleComputed<T>> target;\n    };\n})());\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/Knockout/ForcibleComputed.ts\n **/","import { Henchman } from \"./ME2/Henchman\";\nimport { Stager } from \"./ME2/Stages/Stager\";\nimport { State } from \"./ME2/State\";\nimport { Serialisation } from \"./ME2/Serialisation\";\nimport { Teammate } from \"./ME2/Teammate\";\nimport { SummaryCrewSurvivalOptions, HenchmanIDs, TeammateDeathCauses, NormandyDelayOptions } from \"./constants\";\n\nexport class Application {\n    public static ideal_symbol = \"✭\";\n    public stager: Stager;\n    public henchman: KnockoutObservable<Henchman>;\n    public share: KnockoutObservable<string>;\n    public state: State;\n    public serialisation: Serialisation;\n    private henchmen: Henchman[];\n\n    public static renderYesNo (value: boolean): string {\n        return value ? \"Yes\" : \"No\";\n    }\n\n    public static renderRank (value: number): string {\n        if (value !== undefined) {\n            return \"#\" + (value + 1);\n        } else {\n            return \"<span class=\\\"text-muted\\\">N/A</span>\";\n        }\n    }\n\n    public static renderTeammateName (teammate: Teammate, highlight: boolean = false): string {\n        if (teammate) {\n            return teammate.henchman.name + (highlight ? \" \" + Application.ideal_symbol : \"\");\n        } else {\n            return \"N/A\";\n        }\n    }\n\n    public static renderTeammateNameVentVenter (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willBeEffectiveVentVenter());\n    }\n\n    public static renderTeammateNameVentLeader (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willBeEffectiveVentLeader());\n    }\n\n    public static renderTeammateNameLongWalkBubbler (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkBubbler());\n    }\n\n    public static renderTeammateNameLongWalkLeader (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkLeader());\n    }\n\n    public static renderTeammateNameLongWalkEscort (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willBeEffectiveLongWalkEscort());\n    }\n\n    public static renderTeammateNameBossSquadmate (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate.willSurviveBeingBossSquadmate());\n    }\n\n    public static renderTeammateNameKeepBaseAdvocate (teammate: Teammate): string {\n        return Application.renderTeammateName(teammate, teammate && teammate.henchman.id === HenchmanIDs.Miranda);\n    }\n\n    public static renderTeammateDeathCause (death_cause: TeammateDeathCauses): string {\n        switch (death_cause) {\n            case TeammateDeathCauses.ArmourFailure:\n                return \"Advanced Armour not acquired\";\n            case TeammateDeathCauses.ShieldingFailure:\n                return \"Advanced Shielding not acquired\";\n            case TeammateDeathCauses.CannonFailure:\n                return \"Thanix Cannon not acquired\";\n            case TeammateDeathCauses.VentsBadLeader:\n                return \"Bad vents leader\"; // Rocket to face\n            case TeammateDeathCauses.VentsBadVenter:\n                return \"Bad vents choice\"; // Rocket to face\n            case TeammateDeathCauses.Escort:\n                return \"Disloyal escort\";\n            case TeammateDeathCauses.LongWalkBadBubbler:\n                return \"Bad long walk bubbler\"; // Eaten by bees\n            case TeammateDeathCauses.LongWalkBadLeader:\n                return \"Bad long walk leader\"; // Gutshot\n            case TeammateDeathCauses.Boss:\n                return \"Disloyal Boss squadmate\";\n            case TeammateDeathCauses.HoldTheLine:\n                return \"Failed to hold the line\";\n            default:\n                return TeammateDeathCauses[death_cause];\n        }\n    }\n\n    public static renderCrewSurvival (crew_survival: SummaryCrewSurvivalOptions): string {\n        switch (crew_survival) {\n            case SummaryCrewSurvivalOptions.AllDied:\n                return \"All Died\";\n            case SummaryCrewSurvivalOptions.HalfSurvived:\n                return \"Half Survived\";\n            case SummaryCrewSurvivalOptions.AllSurvived:\n                return \"All Survived\";\n            default:\n                return SummaryCrewSurvivalOptions[crew_survival];\n        }\n    }\n\n    public static renderHTLScore (score: number): string {\n        switch (score) {\n            case 0:\n                return \"0\";\n            case 1:\n                return \"➊\";\n            case 2:\n                return \"➋\";\n            case 3:\n                return \"➌\";\n            case 4:\n                return \"➍\";\n            default:\n                return score.toString(10);\n        }\n\n    }\n\n    public static showArmourDeathRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Armour Deaths\", henchman, henchman.getHenchmenSortedByArmourDeathPriority());\n    }\n\n    public static showShieldingDeathRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Shielding Deaths\", henchman, henchman.getHenchmenSortedByShieldingDeathPriority());\n    }\n\n    public static showCannonDeathRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Cannon Deaths\", henchman, henchman.getHenchmenSortedByCannonDeathPriority());\n    }\n\n    public static showLongWalkDeathRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Long Walk Deaths\", henchman, henchman.getHenchmenSortedByLongWalkDeathPriority());\n    }\n\n    public static showHTMLDeathRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Hold the line Deaths\", henchman, henchman.getHenchmenSortedByHTLDeathPriority());\n    }\n\n    public static showDefenceReportRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Defence Reports\", henchman, henchman.getHenchmenSortedByDefenceReportPriority());\n    }\n\n    public static showKeepBaseAdvocateRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Keep Base Advocates\", henchman, henchman.getHenchmenSortedByKeepBasePriority());\n    }\n\n    public static showDestroyBaseAdvocateRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Destroy Base Advocates\", henchman, henchman.getHenchmenSortedByDestroyBasePriority());\n    }\n\n    public static showCutsceneRescueRankPopover (henchman: Henchman, event?: Event): void {\n        return Application.showRankPopover($(event.target), \"Catchs Shepard\", henchman, henchman.getHenchmenSortedByCutsceneRescuePriority());\n    }\n\n    public static getDelayCandidates (): number[] {\n        return [\n            NormandyDelayOptions.None,\n            NormandyDelayOptions.Few,\n            NormandyDelayOptions.Many\n        ];\n    }\n\n    public static renderDelayValue (value: NormandyDelayOptions): string {\n        switch (value) {\n            case NormandyDelayOptions.None:\n                return \"None\";\n            case NormandyDelayOptions.Few:\n                return \"1-3\";\n            case NormandyDelayOptions.Many:\n                return \"More than 3\";\n            default:\n                return \"\" + value;\n        }\n    }\n\n    public static showRankPopover ($target: JQuery, title: string, henchman: Henchman, list: Henchman[]): void {\n        const $content = $(\"<ol />\").addClass(\"rank-popover-list\");\n        _.each(list, (list_henchman: Henchman) => {\n            $content.append(\n                $(\"<li />\")\n                .append(list_henchman.name)\n            );\n        });\n\n        $target.popover({\n            trigger: \"focus\",\n            title: title,\n            html: true,\n            content: $content\n        })\n        .on(\"hidden.bs.popover\", () => {\n            $target.popover(\"destroy\");\n        })\n        .popover(\"show\");\n    }\n\n    constructor () {\n        this.henchmen = [\n            //                          ID                             Name                    Ess     HTL     HTLD    AD      SD      CD      LWD     CRP     DRP     KBP         DPB     Tech    Biotic      Leader      SLd     EC      VC      BC      LC\n            new Henchman(this,  HenchmanIDs.Garrus,    \"Garrus Vakarian\",      true,   3,      5,      0,      8,      11,     10,     2,      11,     8,          0,      false,  false,      true,       false,  true,   true,   false,  true),\n            new Henchman(this,  HenchmanIDs.Grunt,     \"Grunt\",                false,  3,      0,      0,      6,      9,      8,      4,      9,      12,         0,      false,  false,      false,      false,  true,   false,  false,  true),\n            new Henchman(this,  HenchmanIDs.Jack,      \"Jack\",                 true,   0,      8,      12,     5,      8,      11,     1,      12,     0,          8,      false,  true,       false,      false,  true,   false,  true,   true),\n            new Henchman(this,  HenchmanIDs.Jacob,     \"Jacob Taylor\",         true,   1,      6,      0,      0,      0,      6,      7,      8,      0,          10,     false,  false,      true,       false,  true,   true,   true,   true),\n            new Henchman(this,  HenchmanIDs.Kasumi,    \"Kasumi Goto\",          false,  0,      9,      0,      12,     0,      3,      9,      4,      0,          9,      true,   false,      false,      false,  true,   true,   false,  true),\n            new Henchman(this,  HenchmanIDs.Legion,    \"Legion\",               false,  1,      3,      0,      11,     0,      9,      3,      10,     9,          0,      true,   false,      false,      false,  true,   true,   false,  true),\n            new Henchman(this,  HenchmanIDs.Miranda,   \"Miranda Lawson\",       true,   1,      7,      0,      0,      0,      -1,     11,     2,      13,         0,      false,  false,      true,       true,   false,  false,  true,   true),\n            new Henchman(this,  HenchmanIDs.Mordin,    \"Mordin Solus\",         true,   0,      11,     0,      0,      0,      5,      6,      6,      10,         0,      false,  false,      false,      false,  true,   true,   false,  true),\n            //new Henchman(this,  HenchmanIDs.Morinth,   \"Morinth\",            false,  1,      4,      0,      4,      7,      0,      5,      7,      0,          0,      false,  false,      false,      false,  true,   false,  true,   true),\n            new Henchman(this,  HenchmanIDs.Samara,    \"Samara\",               false,  1,      4,      0,      4,      7,      7,      5,      7,      0,          12,     false,  true,       false,      false,  true,   false,  true,   true),\n            new Henchman(this,  HenchmanIDs.Tali,      \"Tali'zorah\",           false,  0,      10,     0,      10,     0,      4,      8,      5,      0,          11,     true,   false,      false,      false,  true,   true,   false,  true),\n            new Henchman(this,  HenchmanIDs.Thane,     \"Thane\",                false,  1,      2,      0,      9,      12,     12,     0,      13,     0,          13,     false,  false,      false,      false,  true,   true,   true,   true),\n            new Henchman(this,  HenchmanIDs.Zaeed,     \"Zaeed Masani\",         false,  3,      1,      0,      7,      10,     2,      10,     3,      11,         0,      false,  false,      false,      false,  true,   false,  false,  true)\n        ];\n\n        this.serialisation = new Serialisation(this);\n        this.henchman = ko.observable<Henchman>(undefined);\n        this.state = new State(this);\n        this.share = ko.observable<string>(undefined);\n        this.stager = new Stager(this);\n\n        // If there is a request for a specific state\n        if (window.location.search.length > 2) {\n            this.state.applySerialisedState(window.location.search.substr(1));\n        }\n    }\n\n    public getHenchmen (): Henchman[] {\n        return this.henchmen;\n    }\n\n    public getHenchman (id: HenchmanIDs): Henchman {\n        return _.find(this.henchmen, (henchman: Henchman): boolean => {\n            return henchman.id === id;\n        });\n    }\n\n    public predictedToBeDead (teammate: Teammate): boolean {\n        if (this.state.stage().is_evaluatable()) {\n            return !!this.state.stage().evaluate().find(teammate);\n        }\n\n        return false;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/Application.ts\n **/","import { HenchmanIDs } from \"../constants\";\nimport { Application } from \"../Application\";\n\nexport class Henchman {\n    public id: HenchmanIDs;\n    public name: string = \"\";\n    public is_essential: boolean;\n    public htl_value: number;\n    public htl_death_priority: number;\n    public armour_death_priority: number;\n    public shielding_death_priority: number;\n    public cannon_death_priority: number;\n    public long_walk_death_priority: number;\n    public cutscene_rescue_priority: number;\n    public defence_report_priority: number;\n    public keep_base_priority: number;\n    public destroy_base_priority: number;\n    public is_tech_expert: boolean;\n    public is_biotic_expert: boolean;\n    public is_leader: boolean;\n    public is_super_leader: boolean;\n    public is_escort_candidate: boolean;\n    public is_vent_candidate: boolean;\n    public is_bubble_candidate: boolean;\n    public is_leader_candidate: boolean;\n    private app: Application;\n\n    constructor (\n        app: Application,\n        id: HenchmanIDs = undefined,\n        name: string = \"\",\n        is_essential: boolean = false,\n        htl_value: number = 0,\n        htl_death_priority: number = 0,\n        armour_death_priority: number = 0,\n        shielding_death_priority: number = 0,\n        cannon_death_priority: number = 0,\n        long_walk_death_priority: number = 0,\n        cutscene_rescue_priority: number = 0,\n        defence_report_priority: number = 0,\n        keep_base_priority: number = 0,\n        destroy_base_priority: number = 0,\n        is_tech_expert: boolean = false,\n        is_biotic_expert: boolean = false,\n        is_leader: boolean = false,\n        is_super_leader: boolean = false,\n        is_escort_candidate: boolean = false,\n        is_vent_candidate: boolean = false,\n        is_bubble_candidate: boolean = false,\n        is_leader_candidate: boolean = false\n    ) {\n        this.app = app;\n        this.id = id;\n        this.name = name;\n        this.is_essential = is_essential;\n        this.htl_value = htl_value;\n        this.htl_death_priority = htl_death_priority;\n        this.armour_death_priority = armour_death_priority;\n        this.shielding_death_priority = shielding_death_priority;\n        this.cannon_death_priority = cannon_death_priority;\n        this.long_walk_death_priority = long_walk_death_priority;\n        this.cutscene_rescue_priority = cutscene_rescue_priority;\n        this.defence_report_priority = defence_report_priority;\n        this.keep_base_priority = keep_base_priority;\n        this.destroy_base_priority = destroy_base_priority;\n        this.is_tech_expert = is_tech_expert;\n        this.is_biotic_expert = is_biotic_expert;\n        this.is_leader = is_leader;\n        this.is_super_leader = is_super_leader;\n        this.is_escort_candidate = is_escort_candidate;\n        this.is_vent_candidate = is_vent_candidate;\n        this.is_bubble_candidate = is_bubble_candidate;\n        this.is_leader_candidate = is_leader_candidate;\n    }\n\n    public getHenchmenSortedByArmourDeathPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"armour_death_priority\");\n    }\n\n    public getHenchmenSortedByShieldingDeathPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"shielding_death_priority\");\n    }\n\n    public getHenchmenSortedByCannonDeathPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"cannon_death_priority\");\n    }\n\n    public getHenchmenSortedByHTLDeathPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"htl_death_priority\");\n    }\n\n    public getHenchmenSortedByLongWalkDeathPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"long_walk_death_priority\");\n    }\n\n    public getHenchmenSortedByCutsceneRescuePriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"cutscene_rescue_priority\");\n    }\n\n    public getHenchmenSortedByDefenceReportPriority (): Henchman[] {\n        return this.getHenchmenSortedBy(\"defence_report_priority\");\n    }\n\n    public getHenchmenSortedByKeepBasePriority (): Henchman[] {\n        return _.filter(this.getHenchmenSortedBy(\"keep_base_priority\"), (henchman: Henchman) => {\n            return henchman.keep_base_priority > 0;\n        });\n    }\n\n    public getHenchmenSortedByDestroyBasePriority (): Henchman[] {\n        return _.filter(this.getHenchmenSortedBy(\"destroy_base_priority\"), (henchman: Henchman) => {\n            return henchman.destroy_base_priority > 0;\n        });\n    }\n\n    public getHTLDeathPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByHTLDeathPriority(), this);\n    }\n\n    public getArmourDeathPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByArmourDeathPriority(), this);\n    }\n\n    public getShieldingDeathPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByShieldingDeathPriority(), this);\n    }\n\n    public getCannonDeathPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByCannonDeathPriority(), this);\n    }\n\n    public getLongWalkDeathPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByLongWalkDeathPriority(), this);\n    }\n\n    public getCutsceneRescuePriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByCutsceneRescuePriority(), this);\n    }\n\n    public getDefenceReportPriorityRank (): number {\n        return _.indexOf<Henchman>(this.getHenchmenSortedByDefenceReportPriority(), this);\n    }\n\n    public getKeepBasePriorityRank (): number {\n        return this.keep_base_priority > 0 ? _.indexOf<Henchman>(this.getHenchmenSortedByKeepBasePriority(), this) : undefined;\n    }\n\n    public getDestroyBasePriorityRank (): number {\n        return this.destroy_base_priority > 0 ? _.indexOf<Henchman>(this.getHenchmenSortedByDestroyBasePriority(), this) : undefined;\n    }\n\n    private getHenchmenSortedBy (field: string): Henchman[] {\n        return _.sortBy<Henchman, number>(this.app.getHenchmen(), (henchman: Henchman): number => {\n            return henchman[field];\n        }).reverse();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Henchman.ts\n **/","import { Application } from \"../../Application\";\nimport { StageIDs } from \"../../constants\";\nimport { Stage } from \"./Stage\";\nimport { ISerialisationSerialised } from \"../Serialisation\";\nimport { Setup } from \"./Setup\";\nimport { Occulus } from \"./Occulus\";\nimport { Vents } from \"./Vents\";\nimport { LongWalk } from \"./LongWalk\";\nimport { Boss } from \"./Boss\";\nimport { Summary } from \"./Summary\";\n\nexport interface IStager {\n    app: Application;\n}\n\nexport class Stager implements IStager {\n    public app: Application;\n    public can_go_back: KnockoutObservable<boolean>;\n    private stages: Stage[];\n    private freezes: ISerialisationSerialised[];\n    private initial_freeze: ISerialisationSerialised;\n\n    constructor (app: Application) {\n        this.app = app;\n        this.freezes = [];\n\n        this.stages = _.sortBy<Stage, StageIDs>([\n            new Setup(this),\n            new Occulus(this),\n            new Vents(this),\n            new LongWalk(this),\n            new Boss(this),\n            new Summary(this)\n        ], (stage: Stage): StageIDs => {\n            return stage.id;\n        });\n\n        this.app.state.stage.subscribe((stage: Stage) => {\n            stage.setup();\n        });\n\n        this.can_go_back = ko.observable<boolean>(false);\n\n        // Apply the first stage\n        this.app.state.stage(this.getStage(0));\n\n        // Freeze an initial state for resetting\n        this.initial_freeze = this.app.state.serialise();\n    }\n\n    public getStage (id: StageIDs): Stage {\n        return this.stages[id];\n    }\n\n    public reset () {\n        this.app.state.applySerialisedState(this.initial_freeze);\n    }\n\n    public back () {\n        if (this.can_go_back()) {\n            this.app.state.applySerialisedState(this.freezes.pop());\n            this.can_go_back(!!this.freezes.length);\n        }\n    }\n\n    public next () {\n        const current_stage = this.app.state.stage();\n\n        if (current_stage.isEvaluatable()) {\n\n            // Freeze the current state\n            this.freeze();\n\n            current_stage.evaluateAndApply();\n\n            if (current_stage.id < this.stages.length - 1) {\n                this.app.state.stage(this.getStage(current_stage.id + 1));\n            }\n        }\n    }\n\n    private freeze () {\n        this.freezes.push(this.app.state.serialise());\n        this.can_go_back(true);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Stager.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs } from \"../../constants\";\nimport { Teammate } from \"../Teammate\";\nimport { Teammates } from \"../Teammates\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface ISetup {\n    all_recruited: KnockoutComputed<boolean>;\n    all_loyal: KnockoutComputed<boolean>;\n    is_evaluatable: KnockoutComputed<boolean>;\n}\n\nexport class Setup extends Stage implements ISetup {\n    public id: StageIDs = StageIDs.Setup;\n    public label: string = \"Set up\";\n    public all_recruited: KnockoutComputed<boolean>;\n    public all_loyal: KnockoutComputed<boolean>;\n    public is_evaluatable: KnockoutComputed<boolean>;\n\n    constructor (stager: Stager) {\n        super(stager);\n\n        this.all_recruited = ko.pureComputed({\n            read: (): boolean => {\n                return !this.getTeammates().find((teammate: Teammate): boolean => {\n                    return !teammate.is_recruited();\n                });\n            },\n            write: (all_recruited: boolean): void => {\n                this.getTeammates().each((teammate: Teammate) => {\n                    if (all_recruited || !teammate.henchman.is_essential) {\n                        teammate.is_recruited(all_recruited);\n                    }\n                });\n            },\n            owner: this\n        });\n\n        this.all_loyal = ko.pureComputed({\n            read: (): boolean => {\n                return !this.getTeammates().find((teammate: Teammate) => {\n                    return !teammate.is_loyal();\n                });\n            },\n            write: (all_loyal: boolean): void => {\n                if (all_loyal) {\n                    this.getTeammates().each((teammate: Teammate) => {\n                        teammate.is_recruited(true);\n                        teammate.is_loyal(true);\n                    });\n                } else {\n                    this.getTeammates().each((teammate: Teammate) => {\n                        teammate.is_loyal(false);\n                    });\n                }\n            },\n            owner: this\n        });\n\n        this.is_evaluatable = ko.pureComputed<boolean>((): boolean => {\n            const is_evaluatable = _.filter(this.getTeammates().value(), (teammate: Teammate): boolean => {\n                return teammate.is_recruited();\n            }).length >= 8;\n\n            return is_evaluatable;\n        });\n    }\n\n    public evaluate (): TeammateDeathList {\n        return new TeammateDeathList();\n    }\n\n    private getTeammates (): Teammates {\n        return this.stager.app.state.teammates();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Setup.ts\n **/","import { Teammate } from \"../Teammate\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs } from \"../../constants\";\nimport { ITeammateFieldConfig, TeammateField } from \"../TeammateField\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\nimport { Henchman } from \"../Henchman\";\n\nexport abstract class Stage {\n    public static no_teammate: Teammate = new Teammate(new Henchman(undefined, undefined, \"— None —\"));\n\n    public stager: Stager;\n    public id: StageIDs;\n    public label: string;\n    public is_evaluatable: KnockoutObservable<boolean>;\n    private fields: TeammateField[];\n\n    // Generic filter only requires the teammate be alive\n    public static genericTeammateFieldFilter (teammate: Teammate): boolean {\n        return teammate.is_recruited() && !teammate.is_dead();\n    }\n\n    constructor (stager: Stager) {\n        this.stager = stager;\n    }\n\n    public evaluate (): TeammateDeathList {\n        return new TeammateDeathList();\n    }\n\n    public evaluateAndApply (): void {\n        this.evaluate().apply();\n    }\n\n    // Replaces bootstrapTeammatefields\n    public configureFields (configs: ITeammateFieldConfig[]): void {\n        this.fields = [];\n        this.fields = _.map<ITeammateFieldConfig, TeammateField>(configs, (config: ITeammateFieldConfig): TeammateField => {\n            return new TeammateField(this.stager.app.state, (): TeammateField[] => { return this.fields; }, config);\n        });\n\n        // Force a refresh\n        _.each(this.fields, (field: TeammateField): void => {\n            field.candidates.evaluateImmediate();\n        });\n\n        this.is_evaluatable = ko.forcibleComputed<boolean>(() => {\n            // Return false if there are any teammate fields with 'no teammate' values\n            const fields_missing = !!_.find(this.fields, (field: TeammateField): boolean => {\n                if (field.config.optional) {\n                    return false;\n                }\n\n                const teammate = field.observable();\n\n                return teammate ? (teammate.henchman.id === undefined) : true;\n            });\n\n            return !fields_missing;\n        });\n    }\n\n    public getField (name: string): TeammateField {\n        return _.find<TeammateField>(this.fields, (field: TeammateField): boolean => {\n            return field.config.name === name;\n        });\n    }\n\n    public getFieldObservable (name: string): KnockoutObservable<Teammate> {\n        return this.getField(name).observable;\n    }\n\n    public getFieldCandidates (name: string): KnockoutForcibleComputed<Teammate[]> {\n        return this.getField(name).candidates;\n    }\n\n    public getFieldValue (name: string): Teammate {\n        return this.getFieldObservable(name)();\n    }\n\n    public setup (): void {\n        // Attempt to apply the current values for each field\n        _.each(this.fields, (field: TeammateField): void => {\n\n            // Get teammate with the role this field is attached to\n            const state_teammate = this.stager.app.state.teammates().withRole(field.config.role).first();\n            const selector_teammate = field.observable();\n\n            if (state_teammate) {\n                if (selector_teammate === undefined || selector_teammate.henchman.id !== state_teammate.henchman.id) {\n                    field.observable(state_teammate);\n                }\n            }\n        });\n    }\n\n    public isEvaluatable (): boolean {\n        return this.is_evaluatable();\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Stage.ts\n **/","import { TeammateRoles, TeammateDeathCauses, StageIDs } from \"../constants\";\nimport { Henchman } from \"./Henchman\";\n\nexport class Teammate {\n    public death_cause: KnockoutObservable<TeammateDeathCauses>;\n    public death_stage_id: KnockoutObservable<StageIDs>;\n    public henchman: Henchman;\n    public is_recruited: KnockoutObservable<boolean>;\n    public is_loyal: KnockoutObservable<boolean>;\n    public is_dead: KnockoutObservable<boolean>;\n    public roles: KnockoutObservableArray<TeammateRoles>;\n\n    constructor (henchman: Henchman, is_recruited: boolean = false, is_loyal: boolean = false, is_dead: boolean = false, roles: TeammateRoles[] = []) {\n        this.henchman = henchman;\n        this.is_recruited = ko.observable<boolean>(is_recruited);\n        this.is_loyal = ko.observable<boolean>(is_recruited && is_loyal);\n        this.is_dead = ko.observable<boolean>(is_dead);\n        this.roles = ko.observableArray(roles);\n        this.death_cause = ko.observable<TeammateDeathCauses>(undefined);\n        this.death_stage_id = ko.observable<StageIDs>(undefined);\n\n        // If not recruited, can't be loyal either\n        this.is_recruited.subscribe((is_recruited: boolean) => {\n            if (!is_recruited && this.is_loyal()) {\n                this.is_loyal(false);\n            }\n        });\n    }\n\n    // Only does anything is the Teammate is still alive\n    public addRole (role: TeammateRoles): Teammate {\n        if (!this.hasRole(role)) {\n            if (!this.is_dead()) {\n                this.roles.push(role);\n            }\n        }\n        return this;\n    }\n\n    // Only does anything is the Teammate is still alive\n    public removeRole (role: TeammateRoles): Teammate {\n        if (!this.is_dead()) {\n            this.roles.remove(role);\n        }\n        return this;\n    }\n\n    public hasRole (role: TeammateRoles): boolean {\n        return this.roles.indexOf(role) > -1;\n    }\n\n    public hasAnyOfTheseRoles (...roles: TeammateRoles[]): boolean {\n        return _.some<TeammateRoles>(roles, (role: TeammateRoles): boolean => {\n            return this.hasRole(role);\n        });\n    }\n\n    public hasAllOfTheseRoles (...roles: TeammateRoles[]): boolean {\n        return _.every<TeammateRoles>(roles, (role: TeammateRoles): boolean => {\n            return this.hasRole(role);\n        });\n    }\n\n    public getHoldTheLineScore (): number {\n        return this.henchman.htl_value + (this.is_loyal() ? 1 : 0);\n    }\n\n    public willBeEffectiveLongWalkLeader (): boolean {\n        return this.henchman.is_leader && (this.is_loyal() || this.henchman.is_super_leader); // 'Super leader' (i.e. Miranda) will be effective even if not loyal\n    }\n\n    public willBeEffectiveLongWalkEscort (): boolean {\n        return this.is_loyal();\n    }\n\n    public willBeEffectiveLongWalkBubbler (): boolean {\n        return this.is_loyal() && this.henchman.is_biotic_expert;\n    }\n\n    public willSurviveBeingBossSquadmate (): boolean {\n        return this.is_loyal();\n    }\n\n    public willBeEffectiveVentVenter (): boolean {\n        return this.henchman.is_tech_expert && this.is_loyal();\n    }\n\n    public willBeEffectiveVentLeader (): boolean {\n        return this.henchman.is_leader && this.is_loyal();\n    }\n\n    public die (stage_id: StageIDs, death_cause: TeammateDeathCauses): Teammate {\n        this.death_stage_id(stage_id);\n        this.death_cause(death_cause);\n        this.is_dead(true);\n        return this;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Teammate.ts\n **/","import { Teammate } from \"./Teammate\";\nimport { Teammates } from \"./Teammates\";\nimport { TeammateRoles } from \"../constants\";\nimport { State } from \"./State\";\nimport { Stage } from \"./Stages/Stage\";\n\nexport interface ITeammateFieldFilter {\n    (teammate: Teammate, teammates: Teammates): boolean;\n}\n\nexport interface ITeammateFieldConfig {\n    name: string;\n    filter: ITeammateFieldFilter;\n    optional?: boolean;\n    role?: TeammateRoles;\n}\n\nexport interface ITeammateFieldSiblingGetter {\n    (): TeammateField[];\n}\n\nexport class TeammateField {\n    public config: ITeammateFieldConfig;\n    public observable: KnockoutObservable<Teammate>;\n    public candidates: KnockoutForcibleComputed<Teammate[]>;\n\n    constructor (state: State, siblings: ITeammateFieldSiblingGetter, config: ITeammateFieldConfig) {\n        this.config = config;\n\n        // The observable stores the selected teammate for this field\n        this.observable = ko.observable(undefined);\n\n        // Create the candidates observable that maintains a list of the possible candidates for this field.\n        // Candidates are all teammates who are not filtered out, and who are also not assigned to other sibling fields.\n        this.candidates = ko.forcibleComputed((): Teammate[] => {\n\n            // Candidates are those who fulfill the field's filter, and are not in use elsewhere\n            const candidates: Teammate[] = state.teammates().filter((teammate: Teammate) => {\n                return config.filter(teammate, state.teammates());\n            }).filter((candidate: Teammate): boolean => {\n                return !_.find(siblings(), (other_field: TeammateField): boolean => {\n\n                    // If not looking at self, and alternative has been instantiated\n                    if (other_field.config.name !== config.name && other_field.observable) {\n                        if (other_field.observable() === candidate) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                });\n            }).value();\n\n            // Add a numpty candidate\n            candidates.unshift(Stage.no_teammate);\n\n            return candidates;\n        });\n\n        // Before the teammate changes, the previous teammate has the associated role removed\n        this.observable.subscribe((teammate: Teammate) => {\n            if (config.role !== undefined && teammate && teammate.henchman.id !== undefined) {\n                teammate.removeRole(config.role);\n            }\n        }, null, \"beforeChange\");\n\n        // After the teammate changes, assign them the role, and re-evaluate the sibling candidates list\n        this.observable.subscribe((teammate: Teammate): void => {\n            if (config.role !== undefined) {\n                teammate.addRole(config.role);\n            }\n\n            _.each(siblings(), (other_field: TeammateField) => {\n                if (other_field.config.name !== config.name) {\n                    other_field.candidates.evaluateImmediate();\n                }\n            });\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/TeammateField.ts\n **/","import { Teammate } from \"./Teammate\";\nimport { TeammateDeathCauses, StageIDs } from \"../constants\";\n\nexport interface ITeammateDeath {\n    teammate: Teammate;\n    death_cause: TeammateDeathCauses;\n    death_stage_id: StageIDs;\n}\n\nexport class TeammateDeathList {\n    private list: ITeammateDeath[];\n\n    constructor (...list: ITeammateDeath[]) {\n        this.list = list;\n    }\n\n    public apply (): TeammateDeathList {\n        _.each(this.list, (element: ITeammateDeath) => {\n            element.teammate.die(element.death_stage_id, element.death_cause);\n        });\n        return this;\n    }\n\n    public getAll (): ITeammateDeath[] {\n        return this.list;\n    }\n\n    public find (teammate: Teammate): ITeammateDeath {\n        return _.find(this.list, (death: ITeammateDeath): boolean => {\n            return death.teammate.henchman.id === teammate.henchman.id;\n        });\n    }\n\n    public add (death: ITeammateDeath): TeammateDeathList {\n        this.list.push(death);\n        return this;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/TeammateDeathList.ts\n **/","export enum HenchmanIDs {\n    Garrus,\n    Grunt,\n    Jack,\n    Jacob,\n    Kasumi,\n    Legion,\n    Miranda,\n    Mordin,\n    Morinth,\n    Samara,\n    Tali,\n    Thane,\n    Zaeed\n}\n\nexport enum NormandyDelayOptions {\n    None = 0,\n    Few = 1,\n    Many = 2\n}\n\nexport enum SerialisedElements {\n    All = 0,\n    StageID = 1,\n    NormandyDelay = 2,\n    NormandyFlags = 3,\n    Teammates = 4\n}\n\nexport enum SerialisedTeammateElements {\n    All = 0,\n    HenchmanID = 1,\n    DeathCause = 2,\n    DeathStageID = 3,\n    Roles = 4\n}\n\nexport enum TeammateDeathCauses {\n    ArmourFailure,\n    ShieldingFailure,\n    CannonFailure,\n    VentsBadVenter,\n    VentsBadLeader,\n    LongWalkBadBubbler,\n    LongWalkBadLeader,\n    Escort,\n    Boss,\n    HoldTheLine\n}\n\nexport enum TeammateRoles {\n    OcculusSquadmate1 = 0,\n    OcculusSquadmate2 = 1,\n    VentsSquadmate1 = 2,\n    VentsSquadmate2 = 3,\n    VentsVenter = 4,\n    VentsLeader = 5,\n    LongWalkSquadmate1 = 6,\n    LongWalkSquadmate2 = 7,\n    LongWalkEscort = 8,\n    LongWalkBubbler = 9,\n    LongWalkLeader = 10,\n    BossSquadmate1 = 11,\n    BossSquadmate2 = 12,\n    HeldTheLine = 13\n}\n\nexport enum StageIDs {\n    Setup,\n    Occulus,\n    Vents,\n    LongWalk,\n    Boss,\n    Summary\n}\n\nexport enum SummaryCrewSurvivalOptions {\n    AllSurvived,\n    HalfSurvived,\n    AllDied\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/constants.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs, TeammateRoles, TeammateDeathCauses } from \"../../constants\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface IOcculus {\n}\n\nexport class Occulus extends Stage implements IOcculus {\n    public id: StageIDs = StageIDs.Occulus;\n    public label: string = \"Occulus\";\n\n    constructor (stager: Stager) {\n        super(stager);\n        //this.bootstrapTeammateFields();\n        this.configureFields([\n            {\n                name: \"occulus_squadmate_1\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.OcculusSquadmate1\n            },\n            {\n                name: \"occulus_squadmate_2\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.OcculusSquadmate2\n            }\n        ]);\n    }\n\n    public evaluate (): TeammateDeathList {\n        const death_list = new TeammateDeathList;\n\n        // Get candidates to die (that is, they were not Occulus Squadmates)\n        const dpt = this.stager.app.state.teammates().whoAreRecruited().withoutAnyOfTheseRoles(TeammateRoles.OcculusSquadmate1, TeammateRoles.OcculusSquadmate2);\n\n        // Apply deaths\n        if (!this.stager.app.state.normandy.has_shielding()) {\n            death_list.add({\n                teammate: dpt.whoAreAlive().sortByShieldingDeathPriority().last(),\n                death_cause: TeammateDeathCauses.ShieldingFailure,\n                death_stage_id: this.id\n            });\n\n            //dpt.whoAreAlive().sortByShieldingDeathPriority().last().die(this.id, TeammateDeathCauses.ShieldingFailure);\n        }\n\n        if (!this.stager.app.state.normandy.has_armour()) {\n            //dpt.whoAreAlive().sortByArmourDeathPriority().last().die(this.id, TeammateDeathCauses.ArmourFailure);\n            death_list.add({\n                teammate: dpt.whoAreAlive().sortByArmourDeathPriority().last(),\n                death_cause: TeammateDeathCauses.ArmourFailure,\n                death_stage_id: this.id\n            });\n        }\n\n        if (!this.stager.app.state.normandy.has_thanix_cannon()) {\n            //dpt.whoAreAlive().sortByCannonDeathPriority().last().die(this.id, TeammateDeathCauses.CannonFailure);\n            death_list.add({\n                teammate: dpt.whoAreAlive().sortByCannonDeathPriority().last(),\n                death_cause: TeammateDeathCauses.CannonFailure,\n                death_stage_id: this.id\n            });\n        }\n\n        return death_list;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Occulus.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs, TeammateRoles, TeammateDeathCauses } from \"../../constants\";\nimport { Teammate } from \"../Teammate\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface IVents {\n}\n\nexport class Vents extends Stage implements IVents {\n    public id: StageIDs = StageIDs.Vents;\n    public label: string = \"Vents\";\n\n    constructor (stager: Stager) {\n        super(stager);\n        //this.bootstrapTeammateFields();\n        this.configureFields([\n            {\n                name: \"vent_squadmate_1\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.VentsSquadmate1\n            },\n            {\n                name: \"vent_squadmate_2\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.VentsSquadmate2\n            },\n            {\n                name: \"vent_venter\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_vent_candidate;\n                },\n                role: TeammateRoles.VentsVenter\n            },\n            {\n                name: \"vent_leader\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_leader_candidate;\n                },\n                role: TeammateRoles.VentsLeader\n            }\n        ]);\n    }\n\n    public evaluate (): TeammateDeathList {\n        const death_list = new TeammateDeathList();\n\n        const venter = this.getFieldValue(\"vent_venter\");\n        const leader = this.getFieldValue(\"vent_leader\");\n\n        if (!venter.willBeEffectiveVentVenter()) {\n            //venter.die(this.id, TeammateDeathCauses.VentsBadVenter);\n            death_list.add({\n                teammate: venter,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.VentsBadVenter\n            });\n        } else if (!leader.willBeEffectiveVentLeader()) {\n            //venter.die(this.id, TeammateDeathCauses.VentsBadLeader);\n            death_list.add({\n                teammate: venter,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.VentsBadLeader\n            });\n        }\n\n        return death_list;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Vents.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs, TeammateRoles, TeammateDeathCauses } from \"../../constants\";\nimport { Teammate } from \"../Teammate\";\nimport { Teammates } from \"../Teammates\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface ILongWalk {}\n\nexport class LongWalk extends Stage implements ILongWalk {\n    public id: StageIDs = StageIDs.LongWalk;\n    public label: string = \"Long Walk\";\n\n    constructor (stager: Stager) {\n        super(stager);\n        this.configureFields([\n            {\n                name: \"long_walk_bubbler\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_bubble_candidate;\n                },\n                role: TeammateRoles.LongWalkBubbler\n            },\n            {\n                name: \"long_walk_leader\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_leader_candidate;\n                },\n                role: TeammateRoles.LongWalkLeader\n            },\n            {\n                name: \"long_walk_escort\",\n                filter: (teammate: Teammate, teammates: Teammates): boolean => {\n\n                    // If there are only 4 living teammates, no one can be escort\n                    if (teammates.whoAreAlive().length() <= 4) {\n                        return false;\n                    }\n\n                    return teammate.is_recruited() && !teammate.is_dead() && teammate.henchman.is_escort_candidate;\n                },\n                optional: true,\n                role: TeammateRoles.LongWalkEscort\n            },\n            {\n                name: \"long_walk_squadmate_1\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.LongWalkSquadmate1\n            },\n            {\n                name: \"long_walk_squadmate_2\",\n                filter: Stage.genericTeammateFieldFilter,\n                role: TeammateRoles.LongWalkSquadmate2\n            }\n        ]);\n    }\n\n    public evaluate (): TeammateDeathList {\n        const death_list = new TeammateDeathList();\n        const escort = this.getFieldValue(\"long_walk_escort\");\n        const bubbler = this.getFieldValue(\"long_walk_bubbler\");\n        const leader = this.getFieldValue(\"long_walk_leader\");\n\n        // If escort is not loyal, they will die\n        if (escort.henchman.id !== undefined && !escort.willBeEffectiveLongWalkEscort()) {\n            //escort.die(this.id, TeammateDeathCauses.Escort);\n            death_list.add({\n                teammate: escort,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.Escort\n            });\n        }\n\n        // If bubbler is not an expert, or is not loyal, one of the squadmates dies\n        if (!bubbler.willBeEffectiveLongWalkBubbler()) {\n            //this.stager.app.state.teammates().withAnyOfTheseRoles(TeammateRoles.LongWalkSquadmate1, TeammateRoles.LongWalkSquadmate2).sortByLongWalkDeathPriority().last().die(this.id, TeammateDeathCauses.LongWalkBadBubbler);\n            death_list.add({\n                teammate: this.stager.app.state.teammates().withAnyOfTheseRoles(TeammateRoles.LongWalkSquadmate1, TeammateRoles.LongWalkSquadmate2).sortByLongWalkDeathPriority().last(),\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.LongWalkBadBubbler\n            });\n        }\n\n        // If leader is not loyal and not\n        if (!leader.willBeEffectiveLongWalkLeader()) {\n            //leader.die(this.id, TeammateDeathCauses.LongWalkBadLeader);\n            death_list.add({\n                teammate: leader,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.LongWalkBadLeader\n            });\n        }\n\n        return death_list;\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/LongWalk.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs, TeammateRoles, TeammateDeathCauses } from \"../../constants\";\nimport { Teammate } from \"../Teammate\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface IBoss {\n}\n\nexport class Boss extends Stage implements IBoss {\n    public id: StageIDs = StageIDs.Boss;\n    public label: string = \"Boss\";\n\n    constructor (stager: Stager) {\n        super(stager);\n        this.configureFields([\n            {\n                name: \"boss_squadmate_1\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && !teammate.hasRole(TeammateRoles.LongWalkEscort);\n                },\n                role: TeammateRoles.BossSquadmate1\n            },\n            {\n                name: \"boss_squadmate_2\",\n                filter: (teammate: Teammate): boolean => {\n                    return teammate.is_recruited() && !teammate.is_dead() && !teammate.hasRole(TeammateRoles.LongWalkEscort);\n                },\n                role: TeammateRoles.BossSquadmate2\n            }\n        ]);\n\n        this.getFieldObservable(\"boss_squadmate_1\").subscribe(() => {\n            this.updateHTLRoles();\n        });\n\n        this.getFieldObservable(\"boss_squadmate_2\").subscribe(() => {\n            this.updateHTLRoles();\n        });\n    }\n\n    public evaluate (): TeammateDeathList {\n        const death_list = new TeammateDeathList();\n        const squadmate_1 = this.getFieldValue(\"boss_squadmate_1\");\n        const squadmate_2 = this.getFieldValue(\"boss_squadmate_2\");\n\n        // The two squadmates survive if loyal\n        if (!squadmate_1.willSurviveBeingBossSquadmate()) {\n            //squadmate_1.die(this.id, TeammateDeathCauses.Boss);\n            death_list.add({\n                teammate: squadmate_1,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.Boss\n            });\n        }\n        if (!squadmate_2.willSurviveBeingBossSquadmate()) {\n            //squadmate_2.die(this.id, TeammateDeathCauses.Boss);\n            death_list.add({\n                teammate: squadmate_2,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.Boss\n            });\n        }\n\n        //this.stager.app.state.teammates().withRole(TeammateRoles.HeldTheLine).whoDieHoldingTheLine().die(this.id, TeammateDeathCauses.HoldTheLine);\n        this.stager.app.state.teammates().withRole(TeammateRoles.HeldTheLine).whoDieHoldingTheLine().each((teammate: Teammate) => {\n            death_list.add({\n                teammate: teammate,\n                death_stage_id: this.id,\n                death_cause: TeammateDeathCauses.HoldTheLine\n            });\n        });\n\n        return death_list;\n    }\n\n    private updateHTLRoles () {\n        const squadmates = this.stager.app.state.teammates().withAnyOfTheseRoles(TeammateRoles.BossSquadmate1, TeammateRoles.BossSquadmate2);\n        const candidates = this.stager.app.state.teammates().whoAreAlive().whoAreRecruited();\n\n        // If both Squadmates have been picked\n        squadmates.removeRole(TeammateRoles.HeldTheLine);\n        if (squadmates.length() === 2) {\n            candidates.removeRole(TeammateRoles.HeldTheLine).withoutAnyOfTheseRoles(TeammateRoles.BossSquadmate1, TeammateRoles.BossSquadmate2, TeammateRoles.LongWalkEscort).addRole(TeammateRoles.HeldTheLine);\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Boss.ts\n **/","import { Stage } from \"./Stage\";\nimport { Stager } from \"./Stager\";\nimport { StageIDs, TeammateRoles, SummaryCrewSurvivalOptions, NormandyDelayOptions } from \"../../constants\";\nimport { Teammate } from \"../Teammate\";\nimport { Teammates } from \"../Teammates\";\nimport { TeammateDeathList } from \"../TeammateDeathList\";\n\nexport interface ISummary {\n    shepard_lives: KnockoutObservable<boolean>;\n    shepard_pulled_up_by: KnockoutObservable<Teammate>;\n    defence_reporter: KnockoutObservable<Teammate>;\n    keep_base_advocate: KnockoutObservable<Teammate>;\n    destroy_base_advocate: KnockoutObservable<Teammate>;\n}\n\nexport class Summary extends Stage implements ISummary {\n    public id: StageIDs = StageIDs.Summary;\n    public label: string = \"Summary\";\n    public shepard_lives: KnockoutObservable<boolean>;\n    public shepard_pulled_up_by: KnockoutObservable<Teammate>;\n    public defence_reporter: KnockoutObservable<Teammate>;\n    public keep_base_advocate: KnockoutObservable<Teammate>;\n    public destroy_base_advocate: KnockoutObservable<Teammate>;\n    public crew_survival: KnockoutObservable<SummaryCrewSurvivalOptions>;\n    public htl_total: KnockoutObservable<number>;\n    public htl_score: KnockoutObservable<string>;\n    public htl_candidates_count: KnockoutObservable<number>;\n    public htl_death_count: KnockoutObservable<number>;\n\n    constructor (stager: Stager) {\n        super(stager);\n        this.shepard_lives = ko.observable(undefined);\n        this.shepard_pulled_up_by = ko.observable(undefined);\n        this.defence_reporter = ko.observable(undefined);\n        this.keep_base_advocate = ko.observable(undefined);\n        this.destroy_base_advocate = ko.observable(undefined);\n        this.crew_survival = ko.observable(undefined);\n        this.is_evaluatable = ko.observable(false);\n        this.htl_total = ko.observable<number>(undefined);\n        this.htl_score = ko.observable<string>(undefined);\n        this.htl_candidates_count = ko.observable<number>(undefined);\n        this.htl_death_count = ko.observable<number>(undefined);\n    }\n\n    public evaluate (): TeammateDeathList {\n        return new TeammateDeathList();\n    }\n\n    public setup (): void {\n        const htl_teammates = this.stager.app.state.teammates().withRole(TeammateRoles.HeldTheLine);\n\n        this.defence_reporter(this.getDefenceReporter());\n        this.shepard_lives(this.getShepardLives());\n        this.shepard_pulled_up_by(this.getShepardCatcher());\n        this.keep_base_advocate(this.getKeepBaseAdvocate());\n        this.destroy_base_advocate(this.getDestroyBaseAdvocate());\n        this.crew_survival(this.getCrewSurvival());\n\n        this.htl_total(htl_teammates.getHoldTheLineTotal());\n        this.htl_score(htl_teammates.getHoldTheLineScore().toFixed(2));\n        this.htl_candidates_count(htl_teammates.length());\n        this.htl_death_count(htl_teammates.getHoldTheLineDeathCount());\n    }\n\n    private getLivingTeammates (): Teammates {\n        return this.stager.app.state.teammates().whoAreAlive().whoAreRecruited();\n    }\n\n    private getShepardLives (): boolean {\n        return this.getLivingTeammates().length() > 1;\n    }\n\n    private getShepardCatcher (): Teammate {\n        const candidates = this.getLivingTeammates().sort((teammate: Teammate): number => {\n            let score = teammate.henchman.cutscene_rescue_priority + (teammate.hasAnyOfTheseRoles(TeammateRoles.BossSquadmate1, TeammateRoles.BossSquadmate2) ? 100 : 0);\n            return score;\n        });\n\n        return candidates.length() > 1 ? candidates.last() : undefined;\n    }\n\n    private getDefenceReporter (): Teammate {\n        return this.stager.app.state.teammates().withRole(TeammateRoles.HeldTheLine).sortByDefenceReportPriority().last();\n    }\n\n    private getKeepBaseAdvocate (): Teammate {\n        return this.stager.app.state.teammates().withAnyOfTheseRoles(TeammateRoles.BossSquadmate1, TeammateRoles.BossSquadmate2).whoAdvocateKeepingTheBase().sortByKeepBasePriority().last();\n    }\n\n    private getDestroyBaseAdvocate (): Teammate {\n        return this.stager.app.state.teammates().withAnyOfTheseRoles(TeammateRoles.BossSquadmate1, TeammateRoles.BossSquadmate2).whoAdvocateDestroyingTheBase().sortByDestroyBasePriority().last();\n    }\n\n    private getCrewSurvival (): SummaryCrewSurvivalOptions {\n\n        // If no escort, they die regardless\n        if (this.stager.app.state.teammates().withRole(TeammateRoles.LongWalkEscort).length() === 0) {\n            return SummaryCrewSurvivalOptions.AllDied;\n        }\n\n        if (this.stager.app.state.normandy.delay() === NormandyDelayOptions.None) {\n            return SummaryCrewSurvivalOptions.AllSurvived;\n        } else if (this.stager.app.state.normandy.delay() === NormandyDelayOptions.Few) {\n            return SummaryCrewSurvivalOptions.HalfSurvived;\n        } else {\n            return SummaryCrewSurvivalOptions.AllDied;\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Stages/Summary.ts\n **/","import { ISerialisationSerialised } from \"./Serialisation\";\nimport { Normandy } from \"./Normandy\";\nimport { Application } from \"../Application\";\nimport { Henchman } from \"./Henchman\";\nimport { Teammates } from \"./Teammates\";\nimport { Teammate } from \"./Teammate\";\nimport { Stage } from \"./Stages/Stage\";\n\nexport class State {\n    public teammates: KnockoutObservable<Teammates>;\n    public normandy: Normandy;\n    public stage: KnockoutObservable<Stage>;\n    public app: Application;\n    public serialised: KnockoutForcibleComputed<ISerialisationSerialised>;\n    private _teammates: Teammates;\n\n    constructor (app: Application) {\n        this.app = app;\n        this.normandy = new Normandy(true, true, true);\n        this.stage = ko.observable(undefined);\n        this.bootstrapTeammates();\n\n        this.serialised = ko.forcibleComputed<ISerialisationSerialised>(() => {\n            if (this.stage()) {\n                return this.serialise();\n            } else {\n                return \"\";\n            }\n        });\n    }\n\n    public serialise (): ISerialisationSerialised {\n        return this.app.serialisation.serialise(this);\n    }\n\n    public applySerialisedState (serialised: ISerialisationSerialised): void {\n        this.app.serialisation.applySerialisedState(this, serialised);\n    }\n\n    private bootstrapTeammates (): void {\n        this._teammates = new Teammates(_.chain<Henchman>(this.app.getHenchmen()).map<Teammate>((henchman: Henchman): Teammate => {\n            return new Teammate(henchman, henchman.is_essential, false, false);\n        }).sortBy((teammate: Teammate) => {\n            return teammate.henchman.name;\n        }).value());\n\n        this.teammates = ko.observable<Teammates>(this._teammates);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/State.ts\n **/","import { NormandyDelayOptions } from \"../constants\";\n\nexport class Normandy {\n    public has_armour: KnockoutObservable<boolean>;\n    public has_shielding: KnockoutObservable<boolean>;\n    public has_thanix_cannon: KnockoutObservable<boolean>;\n    public delay: KnockoutComputed<number>;\n    private _delay: KnockoutObservable<NormandyDelayOptions>;\n\n    constructor (\n        has_armor: boolean = false,\n        has_shielding: boolean = false,\n        has_thanix_cannon: boolean = false,\n        delay: number = 0\n    ) {\n        this.has_armour = ko.observable<boolean>(has_armor);\n        this.has_shielding = ko.observable<boolean>(has_shielding);\n        this.has_thanix_cannon = ko.observable<boolean>(has_thanix_cannon);\n        this._delay = ko.observable<number>(delay);\n\n        this.delay = ko.pureComputed<number>({\n            read: (): number => {\n                return this._delay();\n            },\n            write: (value: number): void => {\n                const delay = parseInt(\"\" + value, 10);\n\n                if (!_.isNaN(delay) && delay >= NormandyDelayOptions.None && delay <= NormandyDelayOptions.Many) {\n                    this._delay(delay);\n                }\n            }\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Normandy.ts\n **/","import { Teammate } from \"./Teammate\";\nimport { ObjectArray, IObjectArrayIterator } from \"../../Utilities/ObjectArray\";\nimport { Henchman } from \"./Henchman\";\nimport { TeammateRoles, TeammateDeathCauses, StageIDs, HenchmanIDs } from \"../constants\";\n\nexport class Teammates {\n\n    public oa: ObjectArray<Teammate>;\n\n    constructor (elements: Teammate[]) {\n        this.oa = new ObjectArray<Teammate>(elements);\n    }\n\n    public static fromObjectArray (oa: ObjectArray<Teammate>): Teammates {\n        return new Teammates(oa.elements);\n    }\n\n    public value (): Teammate[] {\n        return this.oa.elements;\n    }\n\n    public first (): Teammate {\n        return this.oa.first();\n    }\n\n    public last (): Teammate {\n        return this.oa.last();\n    }\n\n    public length (): number {\n        return this.oa.length();\n    }\n\n    public whoAreAlive (): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return !teammate.is_dead();\n        });\n    }\n\n    public die (stage_id: StageIDs, death_cause: TeammateDeathCauses): Teammates {\n        this.each((teammate: Teammate): void => {\n            teammate.die(stage_id, death_cause);\n        });\n        return this;\n    }\n\n    public whoAreRecruited (): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return teammate.is_recruited();\n        });\n    }\n\n    public addRole (role: TeammateRoles): Teammates {\n        this.each((teammate: Teammate): void => {\n            teammate.addRole(role);\n        });\n        return this;\n    }\n\n    public removeRole (role: TeammateRoles): Teammates {\n        this.each((teammate: Teammate): void => {\n            teammate.removeRole(role);\n        });\n        return this;\n    }\n\n    public withRole (role: TeammateRoles): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return teammate.hasRole(role);\n        });\n    }\n\n    public withAnyOfTheseRoles (...roles: TeammateRoles[]): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return teammate.hasAnyOfTheseRoles.apply(teammate, roles);\n        });\n    }\n\n    public withoutRole (role: TeammateRoles): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return !teammate.hasRole(role);\n        });\n    }\n\n    public withoutAnyOfTheseRoles (...roles: TeammateRoles[]): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return !teammate.hasAnyOfTheseRoles.apply(teammate, roles);\n        });\n    }\n\n    public sortByHenchmanProperty (property: string, ascending: boolean = true): Teammates {\n        return this.sort<number>((teammate: Teammate): number => {\n            return (ascending ? 1 : -1) * teammate.henchman[property];\n        });\n    }\n\n    public sortByShieldingDeathPriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"shielding_death_priority\", ascending);\n    }\n\n    public sortByArmourDeathPriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"armour_death_priority\", ascending);\n    }\n\n    public sortByCannonDeathPriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"cannon_death_priority\", ascending);\n    }\n\n    public sortByLongWalkDeathPriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"long_walk_death_priority\", ascending);\n    }\n\n    public sortByDefenceReportPriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"defence_report_priority\", ascending);\n    }\n\n    public sortByKeepBasePriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"keep_base_priority\", ascending);\n    }\n\n    public sortByDestroyBasePriority (ascending: boolean = true): Teammates {\n        return this.sortByHenchmanProperty(\"destroy_base_priority\", ascending);\n    }\n\n    public sortByIsRecruited (ascending: boolean = true): Teammates {\n        return this.sort<number>((teammate: Teammate): number => {\n            return teammate.is_recruited() ? 0 : 1;\n        });\n    }\n\n    public whoAdvocateKeepingTheBase (): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return teammate.henchman.keep_base_priority > 0;\n        });\n    }\n\n    public whoAdvocateDestroyingTheBase (): Teammates {\n        return this.filter((teammate: Teammate): boolean => {\n            return teammate.henchman.destroy_base_priority > 0;\n        });\n    }\n\n    public without (...teammates: Teammate[]): Teammates {\n        return Teammates.fromObjectArray(this.oa.without.apply(this.oa, teammates));\n    }\n\n    public filter (iterator: IObjectArrayIterator<Teammate, boolean>): Teammates {\n        return Teammates.fromObjectArray(this.oa.filter(iterator));\n    }\n\n    public map<TResult> (iterator: IObjectArrayIterator<Teammate, TResult>): TResult[] {\n        return this.oa.map(iterator);\n    }\n\n    public find (iterator: IObjectArrayIterator<Teammate, boolean>): Teammate {\n        return this.oa.find(iterator);\n    }\n\n    public findByHenchman (henchman: Henchman): Teammate {\n        return this.findByHenchmanID(henchman.id);\n    }\n\n    public findByHenchmanID (id: HenchmanIDs): Teammate {\n        return this.find((teammate: Teammate): boolean => {\n            return teammate.henchman.id === id;\n        });\n    }\n\n    public sort<TSort> (iterator: IObjectArrayIterator<Teammate, TSort>): Teammates {\n        return Teammates.fromObjectArray(this.oa.sort<TSort>(iterator));\n    }\n\n    public slice (start: number, end?: number): Teammates {\n        return Teammates.fromObjectArray(this.oa.slice(start, end));\n    }\n\n    public getHoldTheLineTotal (): number {\n        const scores: number[] = _.map(this.oa.elements, (teammate: Teammate): number => {\n            return teammate.getHoldTheLineScore();\n        });\n\n        return _.reduce(scores, (sum: number, score: number): number => {\n            return sum + score;\n        }, 0);\n    }\n\n    public getHoldTheLineScore (): number {\n        return this.getHoldTheLineTotal() / this.length();\n    }\n\n    public getHoldTheLineDeathCount (): number {\n        const pool_size = this.length();\n        const score = this.getHoldTheLineScore();\n\n        if (score < 2.0) {\n            if (pool_size >= 5) {\n                if (score >= 1.5) {\n                    return 1;\n                } else if (score >= 0.5) {\n                    return 2;\n                } else {\n                    return 3;\n                }\n            } else if (pool_size === 4) {\n                if (score >= 1.0) {\n                    return 1;\n                } else if (score >= 0.5) {\n                    return 2;\n                } else if (score > 0) {\n                    return 3;\n                } else {\n                    return 4;\n                }\n            } else if (pool_size === 3) {\n                if (score >= 1) {\n                    return 1;\n                } else if (score > 0) {\n                    return 2;\n                } else {\n                    return 3;\n                }\n            } else if (pool_size === 2) {\n                if (score > 0) {\n                    return 1;\n                } else {\n                    return 2;\n                }\n            } else {\n                return 1;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    public whoDieHoldingTheLine (): Teammates {\n        const death_count = this.getHoldTheLineDeathCount();\n\n        if (death_count > 0) {\n            return this.sort<number>((teammate: Teammate): number => {\n                return teammate.henchman.htl_death_priority + (!teammate.is_loyal() ? 100 : 0); // Unloyal team members are prioritised over loyal ones\n            }).slice(-death_count);\n        } else {\n            return new Teammates([]);\n        }\n    }\n\n    public each (iterator: IObjectArrayIterator<Teammate, void>): void {\n        this.oa.each(iterator);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Teammates.ts\n **/","import { Application } from \"../Application\";\nimport { Normandy } from \"./Normandy\";\nimport { Teammate } from \"./Teammate\";\nimport { Teammates } from \"./Teammates\";\nimport { State } from \"./State\";\nimport { TeammateRoles, TeammateDeathCauses, SerialisedTeammateElements, SerialisedElements, StageIDs } from \"../constants\";\n\ninterface ISerialisedNormandy extends String {\n}\n\ninterface ISerialisedTeammate extends String {\n}\n\nexport interface ISerialisationSerialised extends String {\n}\n\nexport class Serialisation {\n    // Captures Henchman ID (1), Death Cause (1), Death Stage ID (1), Roles (5)\n    public static TeammateRegex: RegExp = /^([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f]{5})$/;\n    public static TeammatesRegex: RegExp = /[0-9a-f]{8}/g;\n\n    // Captures: StageID (1), Normandy Delay (2), Normandy Flags (1) ((Teammate Stuff) x 12)\n    public static SerialisedRegex: RegExp = /^([0-9a-f])([\\d]{2})([\\d])((?:[0-9a-f]{2}[0-9a-f][0-9a-f]{5}){12})$/;\n\n    private app: Application;\n\n    /// -------------------------------------------\n    /// Utility methods\n    /// -------------------------------------------\n\n    public static lpad (value: string, length: number = 2): string {\n        const value_str = value;\n        return value_str.length >= length ? value_str : new Array(length - value_str.length + 1).join(\"0\") + value_str;\n    }\n\n    public static indexesToFlags (indexes: number[]): number {\n        return _.reduce(indexes, (accumulator: number, index: number): number => {\n            return accumulator + Math.pow(2, index);\n        }, 0);\n    }\n\n    public static flagsToIndexes (flags: number): number[] {\n        const indexes: number[] = [];\n        let index = 0;\n        let flag = 1;\n        while (flag <= flags) {\n            if (flags & flag) {\n                indexes.push(index);\n            }\n\n            index++;\n            flag *= 2;\n        }\n\n        return indexes;\n    }\n\n    public static getRoleCount (): number {\n        return _.keys(TeammateRoles).length / 2;\n    }\n\n    constructor (app: Application) {\n        this.app = app;\n    }\n\n    /// -------------------------------------------\n    /// Public interfaces\n    /// -------------------------------------------\n\n    public serialise (state: State): ISerialisationSerialised {\n        const elements: any[] = [\n            Serialisation.lpad((<number>state.stage().id).toString(16), 1),\n            this.serialiseNormandy(state.normandy),\n            _.map<Teammate, ISerialisedTeammate>(state.teammates().value(), (teammate: Teammate): ISerialisedTeammate => {\n                return this.serialiseTeammate(teammate);\n            }).join(\"\")\n        ];\n\n        return <ISerialisationSerialised>elements.join(\"\");\n    }\n\n    public deserialise (serialised: ISerialisationSerialised): State {\n        const matches = serialised.match(Serialisation.SerialisedRegex);\n        if (matches) {\n\n            const deserialised = new State(this.app);\n            deserialised.stage(this.app.stager.getStage(parseInt(\"0x\" + matches[SerialisedElements.StageID], 16)));\n            deserialised.normandy = this.deserialiseNormandyElements(matches[SerialisedElements.NormandyDelay], matches[SerialisedElements.NormandyFlags]);\n            deserialised.teammates(new Teammates(_.map(matches[SerialisedElements.Teammates].match(Serialisation.TeammatesRegex), (serialised_teammate: ISerialisedTeammate): Teammate => {\n                return this.deserialiseTeammate(serialised_teammate);\n            })));\n\n            return deserialised;\n        } else {\n            throw new Error(\"Serialised data was malformed.\");\n        }\n    }\n\n    public applySerialisedState (state: State, serialised: ISerialisationSerialised): void {\n        const new_state = this.deserialise(serialised);\n\n        state.normandy.delay(new_state.normandy.delay());\n        state.normandy.has_armour(new_state.normandy.has_armour());\n        state.normandy.has_shielding(new_state.normandy.has_shielding());\n        state.normandy.has_thanix_cannon(new_state.normandy.has_thanix_cannon());\n\n        const new_teammates= new_state.teammates();\n\n        state.teammates().each((teammate: Teammate): void => {\n            const new_teammate = new_teammates.findByHenchman(teammate.henchman);\n\n            teammate.is_recruited(new_teammate.is_recruited());\n            teammate.is_loyal(new_teammate.is_loyal());\n            teammate.is_dead(new_teammate.is_dead());\n            teammate.roles.removeAll();\n            _.each(new_teammate.roles(), (role: TeammateRoles): void => {\n                teammate.addRole(role);\n            });\n\n            //teammate.roles = new_teammate.roles;\n            teammate.death_cause = new_teammate.death_cause;\n            teammate.death_stage_id = new_teammate.death_stage_id;\n        });\n\n        state.stage(new_state.stage());\n    }\n\n    /// -------------------------------------------\n    /// Teammates\n    /// -------------------------------------------\n\n    // Length 8\n    private serialiseTeammate (teammate: Teammate): ISerialisedTeammate {\n        const role_offset = Serialisation.getRoleCount();\n\n        const roles = teammate.roles().slice(0);\n        if (teammate.is_recruited()) {\n            roles.push(role_offset + 1);\n        }\n        if (teammate.is_loyal()) {\n            roles.push(role_offset + 2);\n        }\n        if (teammate.is_dead()) {\n            roles.push(role_offset + 3);\n        }\n\n        const elements = [\n            Serialisation.lpad((<number> teammate.henchman.id).toString(16), 1),\n            Serialisation.lpad((teammate.death_cause() === undefined ? 0 : teammate.death_cause() + 1).toString(16), 1),\n            Serialisation.lpad((teammate.death_stage_id() || 0).toString(16), 1),\n            Serialisation.lpad(Serialisation.indexesToFlags(roles).toString(16), 5)\n        ];\n\n        return <ISerialisedTeammate>elements.join(\"\");\n    }\n\n    private deserialiseTeammate (serialised: ISerialisedTeammate): Teammate {\n        const matches: string[] = serialised.match(Serialisation.TeammateRegex);\n        const henchman_id         = parseInt(\"0x\" + matches[SerialisedTeammateElements.HenchmanID], 16);\n        const death_cause: TeammateDeathCauses         = parseInt(\"0x\" + matches[SerialisedTeammateElements.DeathCause], 16);\n        const death_stage_id: StageIDs      = parseInt(\"0x\" + matches[SerialisedTeammateElements.DeathStageID], 16) || undefined;\n        let roles: TeammateRoles[]               = Serialisation.flagsToIndexes(parseInt(\"0x\" + matches[SerialisedTeammateElements.Roles], 16));\n        const role_offset         = Serialisation.getRoleCount();\n\n        const is_recruited = _.indexOf(roles, role_offset + 1) >= 0;\n        const is_loyal = _.indexOf(roles, role_offset + 2) >= 0;\n        const is_dead = _.indexOf(roles, role_offset + 3) >= 0;\n\n        roles = _.without(roles, role_offset + 1, role_offset + 2, role_offset + 3);\n\n        const deserialised = new Teammate(this.app.getHenchman(henchman_id), is_recruited, is_loyal, is_dead, roles);\n        if (is_dead) {\n            deserialised.die(death_stage_id, death_cause - 1);\n        }\n\n        return deserialised;\n    }\n\n    /// -------------------------------------------\n    /// Normandy\n    /// -------------------------------------------\n\n    private serialiseNormandy (normandy: Normandy): ISerialisedNormandy {\n        const flags = 0 + (normandy.has_armour() ? 1 : 0) + (normandy.has_shielding() ? 2 : 0) + (normandy.has_thanix_cannon() ? 4 : 0);\n        const elements: string[] = [\n            Serialisation.lpad(normandy.delay().toString(10), 2),\n            Serialisation.lpad(flags.toString(10), 1)\n        ];\n\n        return <ISerialisedNormandy>elements.join(\"\");\n    }\n\n    private deserialiseNormandyElements (serialised_delay: string, serialised_flags: string): Normandy {\n        const delay               = parseInt(serialised_delay, 10);\n        const flags               = parseInt(serialised_flags, 10);\n        const has_armour          = !!(flags & 1);\n        const has_shielding       = !!(flags & 2);\n        const has_thanix_cannon   = !!(flags & 4);\n\n        return new Normandy(has_armour, has_shielding, has_thanix_cannon, delay);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/App/ME2/Serialisation.ts\n **/","export interface IObjectArrayIterator<T, TResult> {\n    (value: T, index: number, list: T[]): TResult;\n}\n\nexport interface IObjectArray<T> {\n    elements: T[];\n    first (): T;\n    last (): T;\n    length (): number;\n    push (element: T): IObjectArray<T>;\n    unshift (element: T): IObjectArray<T>;\n    sort<TSort> (iterator: IObjectArrayIterator<T, TSort>): IObjectArray<T>;\n    filter (iterator: IObjectArrayIterator<T, boolean>): IObjectArray<T>;\n    find (iterator: IObjectArrayIterator<T, boolean>): T;\n    map<TResult> (iterator: IObjectArrayIterator<T, TResult>): TResult[];\n    each (iterator: IObjectArrayIterator<T, void>): void;\n}\n\nexport class ObjectArray<T> implements IObjectArray<T> {\n    public elements: T[];\n\n    constructor (elements: T[]) {\n        this.elements = elements;\n    }\n\n    public first (): T {\n        return this.elements.length ? this.elements[0] : undefined;\n    }\n\n    public last (): T {\n        return this.elements.length ? this.elements[this.elements.length - 1] : undefined;\n    }\n\n    public length (): number {\n        return this.elements.length;\n    }\n\n    public push (element: T): ObjectArray<T> {\n        const elements = this.cloneElements();\n        elements.push(element);\n        return this.factory(elements);\n    }\n\n    public unshift (element: T): ObjectArray<T> {\n        const elements = this.cloneElements();\n        elements.unshift(element);\n        return this.factory(elements);\n    }\n\n    public slice (start: number, end?: number): ObjectArray<T> {\n        return this.factory(this.elements.slice(start, end));\n    }\n\n    public sort<TSort> (iterator: IObjectArrayIterator<T, TSort>): ObjectArray<T> {\n        const elements = _.sortBy<T, TSort>(this.cloneElements(), iterator);\n        return this.factory(elements);\n    }\n\n    public filter (iterator: IObjectArrayIterator<T, boolean>): ObjectArray<T> {\n        const elements = _.filter<T>(this.cloneElements(), iterator);\n        return this.factory(elements);\n    }\n\n    public without (...values: T[]) {\n        values.unshift(...this.cloneElements());\n        const elements = _.without.apply(_, values);\n        return this.factory(elements);\n    }\n\n    public find (iterator: IObjectArrayIterator<T, boolean>): T {\n        return _.find<T>(this.elements, iterator);\n    }\n\n    public map<TResult> (iterator: IObjectArrayIterator<T, TResult>): TResult[] {\n        return _.map<T, TResult>(this.elements, iterator);\n    }\n\n    public each (iterator: IObjectArrayIterator<T, void>): void {\n        _.each<T>(this.elements, iterator);\n    }\n\n    private cloneElements (): T[] {\n        return this.elements.slice(0);\n    }\n\n    private factory (elements: T[]): ObjectArray<T> {\n        return new ObjectArray<T>(elements);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/tslint-loader!./source/typescript/Utilities/ObjectArray.ts\n **/"],"sourceRoot":""}