!function(e){function t(n){if(a[n])return a[n].exports;var o=a[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var a={};return t.m=e,t.c=a,t.p="/cdn/bundle/assets",t(0)}([function(e,t,a){"use strict";var n=a(1),o=a(2),r=a(27),i=a(28),s=a(29),l=a(30),u=a(31),d=a(32),h=a(33),c=a(34),m=a(35),p=a(36),f=a(3),v=a(11),g=a(11),y=a(22);a(23),void[n.name,o.name,r.name,i.name,s.name,l.name,u.name,d.name,h.name,c.name,m.name,p.name,g].join(","),_.extend(window,{Application:f.Application,Role:y.Role,Constants:{StageIDs:v.StageIDs,TeammateRoles:v.TeammateRoles}})},function(e,t){"use strict";t.name="modal",void function(){ko.bindingHandlers[t.name]={init:function(e,t,a,n,o){var r=$(e);r.modal({show:!1}),ko.utils.domNodeDisposal.addDisposeCallback(e,function(){r.modal("destroy")})},update:function(e,t,a,n,o){var r=t(),i=$(e);r?i.modal("show"):i.modal("hide")}}}()},function(e,t){"use strict";t.name="forcibleComputed",void function(){ko[t.name]=function(e,t,a){var n=ko.observable().extend({notify:"always"}),o=ko.computed(function(){return n(),e.call(t)},null,a);return o.evaluateImmediate=function(){n.valueHasMutated()},o}}()},function(e,t,a){"use strict";var n=a(4),o=a(5),r=a(17),i=a(21),s=a(22),l=a(37),u=a(11),d=function(){function e(){this.henchmen=[new n.Henchman(this,u.HenchmanIDs.Garrus,"Garrus Vakarian",!0,3,5,0,8,11,10,2,11,8,0,!1,!1,!0,!1,!0,!0,!1,!0),new n.Henchman(this,u.HenchmanIDs.Grunt,"Grunt",!1,3,0,0,6,9,8,4,9,12,0,!1,!1,!1,!1,!0,!1,!1,!0),new n.Henchman(this,u.HenchmanIDs.Jack,"Jack",!0,0,8,12,5,8,11,1,12,0,8,!1,!0,!1,!1,!0,!1,!0,!0),new n.Henchman(this,u.HenchmanIDs.Jacob,"Jacob Taylor",!0,1,6,0,0,0,6,7,8,0,10,!1,!1,!0,!1,!0,!0,!0,!0),new n.Henchman(this,u.HenchmanIDs.Kasumi,"Kasumi Goto",!1,0,9,0,12,0,3,9,4,0,9,!0,!1,!1,!1,!0,!0,!1,!0),new n.Henchman(this,u.HenchmanIDs.Legion,"Legion",!1,1,3,0,11,0,9,3,10,9,0,!0,!1,!1,!1,!0,!0,!1,!0),new n.Henchman(this,u.HenchmanIDs.Miranda,"Miranda Lawson",!0,1,7,0,0,0,-1,11,2,13,0,!1,!1,!0,!0,!1,!1,!0,!0),new n.Henchman(this,u.HenchmanIDs.Mordin,"Mordin Solus",!0,0,11,0,0,0,5,6,6,10,0,!1,!1,!1,!1,!0,!0,!1,!0),new n.Henchman(this,u.HenchmanIDs.Samara,"Samara",!1,1,4,0,4,7,7,5,7,0,12,!1,!0,!1,!1,!0,!1,!0,!0),new n.Henchman(this,u.HenchmanIDs.Tali,"Tali'zorah",!1,0,10,0,10,0,4,8,5,0,11,!0,!1,!1,!1,!0,!0,!1,!0),new n.Henchman(this,u.HenchmanIDs.Thane,"Thane",!1,1,2,0,9,12,12,0,13,0,13,!1,!1,!1,!1,!0,!0,!0,!0),new n.Henchman(this,u.HenchmanIDs.Zaeed,"Zaeed Masani",!1,3,1,0,7,10,2,10,3,11,0,!1,!1,!1,!1,!0,!1,!1,!0)],this.serialisation=new i.Serialisation(this),this.henchman=ko.observable(void 0),this.state=new r.State(this),this.share=ko.observable(void 0),this.stager=new o.Stager(this),window.location.search.length>2&&this.state.applySerialisedState(window.location.search.substr(1)),this.logic=new s.Logic(this),this.ui=new l.UI(this)}return e.renderYesNo=function(e){return e?"Yes":"No"},e.renderRank=function(e){return void 0!==e?"#"+(e+1):'<span class="text-muted">N/A</span>'},e.renderTeammateName=function(t,a){return void 0===a&&(a=!1),t?t.henchman.name+(a?" "+e.ideal_symbol:""):"N/A"},e.renderTeammateNameVentVenter=function(t){return e.renderTeammateName(t,t.willBeEffectiveVentVenter())},e.renderTeammateNameVentLeader=function(t){return e.renderTeammateName(t,t.willBeEffectiveVentLeader())},e.renderTeammateNameLongWalkBubbler=function(t){return e.renderTeammateName(t,t.willBeEffectiveLongWalkBubbler())},e.renderTeammateNameLongWalkLeader=function(t){return e.renderTeammateName(t,t.willBeEffectiveLongWalkLeader())},e.renderTeammateNameLongWalkEscort=function(t){return e.renderTeammateName(t,t.willBeEffectiveLongWalkEscort())},e.renderTeammateNameBossSquadmate=function(t){return e.renderTeammateName(t,t.willSurviveBeingBossSquadmate())},e.renderTeammateNameKeepBaseAdvocate=function(t){return e.renderTeammateName(t,t&&t.henchman.id===u.HenchmanIDs.Miranda)},e.renderTeammateDeathCause=function(e){switch(e){case u.TeammateDeathCauses.ArmourFailure:return"Advanced Armour not acquired";case u.TeammateDeathCauses.ShieldingFailure:return"Advanced Shielding not acquired";case u.TeammateDeathCauses.CannonFailure:return"Thanix Cannon not acquired";case u.TeammateDeathCauses.VentsBadLeader:return"Bad vents leader";case u.TeammateDeathCauses.VentsBadVenter:return"Bad vents choice";case u.TeammateDeathCauses.Escort:return"Disloyal escort";case u.TeammateDeathCauses.LongWalkBadBubbler:return"Bad long walk bubbler";case u.TeammateDeathCauses.LongWalkBadLeader:return"Bad long walk leader";case u.TeammateDeathCauses.Boss:return"Disloyal Boss squadmate";case u.TeammateDeathCauses.HoldTheLine:return"Failed to hold the line";default:return u.TeammateDeathCauses[e]}},e.renderCrewSurvival=function(e){switch(e){case u.SummaryCrewSurvivalOptions.AllDied:return"All Died";case u.SummaryCrewSurvivalOptions.HalfSurvived:return"Half Survived";case u.SummaryCrewSurvivalOptions.AllSurvived:return"All Survived";default:return u.SummaryCrewSurvivalOptions[e]}},e.renderHTLScore=function(e){switch(e){case 0:return"0";case 1:return"➊";case 2:return"➋";case 3:return"➌";case 4:return"➍";default:return e.toString(10)}},e.showArmourDeathRankPopover=function(t,a){return e.showRankPopover($(a.target),"Armour Deaths",t,t.getHenchmenSortedByArmourDeathPriority())},e.showShieldingDeathRankPopover=function(t,a){return e.showRankPopover($(a.target),"Shielding Deaths",t,t.getHenchmenSortedByShieldingDeathPriority())},e.showCannonDeathRankPopover=function(t,a){return e.showRankPopover($(a.target),"Cannon Deaths",t,t.getHenchmenSortedByCannonDeathPriority())},e.showLongWalkDeathRankPopover=function(t,a){return e.showRankPopover($(a.target),"Long Walk Deaths",t,t.getHenchmenSortedByLongWalkDeathPriority())},e.showHTMLDeathRankPopover=function(t,a){return e.showRankPopover($(a.target),"Hold the line Deaths",t,t.getHenchmenSortedByHTLDeathPriority())},e.showDefenceReportRankPopover=function(t,a){return e.showRankPopover($(a.target),"Defence Reports",t,t.getHenchmenSortedByDefenceReportPriority())},e.showKeepBaseAdvocateRankPopover=function(t,a){return e.showRankPopover($(a.target),"Keep Base Advocates",t,t.getHenchmenSortedByKeepBasePriority())},e.showDestroyBaseAdvocateRankPopover=function(t,a){return e.showRankPopover($(a.target),"Destroy Base Advocates",t,t.getHenchmenSortedByDestroyBasePriority())},e.showCutsceneRescueRankPopover=function(t,a){return e.showRankPopover($(a.target),"Catchs Shepard",t,t.getHenchmenSortedByCutsceneRescuePriority())},e.getDelayCandidates=function(){return[u.NormandyDelayOptions.None,u.NormandyDelayOptions.Few,u.NormandyDelayOptions.Many]},e.renderDelayValue=function(e){switch(e){case u.NormandyDelayOptions.None:return"None";case u.NormandyDelayOptions.Few:return"1-3";case u.NormandyDelayOptions.Many:return"More than 3";default:return""+e}},e.showRankPopover=function(e,t,a,n){var o=$("<ol />").addClass("rank-popover-list");_.each(n,function(e){o.append($("<li />").append(e.name))}),e.popover({trigger:"focus",title:t,html:!0,content:o}).on("hidden.bs.popover",function(){e.popover("destroy")}).popover("show")},e.prototype.getHenchmen=function(){return this.henchmen},e.prototype.getHenchman=function(e){return _.find(this.henchmen,function(t){return t.id===e})},e.prototype.predictedToBeDead=function(e){return this.state.stage().is_evaluatable()?!!this.state.stage().evaluate().find(e):!1},e.ideal_symbol="✭",e}();t.Application=d},function(e,t){"use strict";var a=function(){function e(e,t,a,n,o,r,i,s,l,u,d,h,c,m,_,p,f,v,g,y,b,k){void 0===t&&(t=void 0),void 0===a&&(a=""),void 0===n&&(n=!1),void 0===o&&(o=0),void 0===r&&(r=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===l&&(l=0),void 0===u&&(u=0),void 0===d&&(d=0),void 0===h&&(h=0),void 0===c&&(c=0),void 0===m&&(m=0),void 0===_&&(_=!1),void 0===p&&(p=!1),void 0===f&&(f=!1),void 0===v&&(v=!1),void 0===g&&(g=!1),void 0===y&&(y=!1),void 0===b&&(b=!1),void 0===k&&(k=!1),this.name="",this.app=e,this.id=t,this.name=a,this.is_essential=n,this.htl_value=o,this.htl_death_priority=r,this.armour_death_priority=i,this.shielding_death_priority=s,this.cannon_death_priority=l,this.long_walk_death_priority=u,this.cutscene_rescue_priority=d,this.defence_report_priority=h,this.keep_base_priority=c,this.destroy_base_priority=m,this.is_tech_expert=_,this.is_biotic_expert=p,this.is_leader=f,this.is_super_leader=v,this.is_escort_candidate=g,this.is_vent_candidate=y,this.is_bubble_candidate=b,this.is_leader_candidate=k}return e.prototype.getHenchmenSortedByArmourDeathPriority=function(){return this.getHenchmenSortedBy("armour_death_priority")},e.prototype.getHenchmenSortedByShieldingDeathPriority=function(){return this.getHenchmenSortedBy("shielding_death_priority")},e.prototype.getHenchmenSortedByCannonDeathPriority=function(){return this.getHenchmenSortedBy("cannon_death_priority")},e.prototype.getHenchmenSortedByHTLDeathPriority=function(){return this.getHenchmenSortedBy("htl_death_priority")},e.prototype.getHenchmenSortedByLongWalkDeathPriority=function(){return this.getHenchmenSortedBy("long_walk_death_priority")},e.prototype.getHenchmenSortedByCutsceneRescuePriority=function(){return this.getHenchmenSortedBy("cutscene_rescue_priority")},e.prototype.getHenchmenSortedByDefenceReportPriority=function(){return this.getHenchmenSortedBy("defence_report_priority")},e.prototype.getHenchmenSortedByKeepBasePriority=function(){return _.filter(this.getHenchmenSortedBy("keep_base_priority"),function(e){return e.keep_base_priority>0})},e.prototype.getHenchmenSortedByDestroyBasePriority=function(){return _.filter(this.getHenchmenSortedBy("destroy_base_priority"),function(e){return e.destroy_base_priority>0})},e.prototype.getHTLDeathPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByHTLDeathPriority(),this)},e.prototype.getArmourDeathPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByArmourDeathPriority(),this)},e.prototype.getShieldingDeathPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByShieldingDeathPriority(),this)},e.prototype.getCannonDeathPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByCannonDeathPriority(),this)},e.prototype.getLongWalkDeathPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByLongWalkDeathPriority(),this)},e.prototype.getCutsceneRescuePriorityRank=function(){return _.indexOf(this.getHenchmenSortedByCutsceneRescuePriority(),this)},e.prototype.getDefenceReportPriorityRank=function(){return _.indexOf(this.getHenchmenSortedByDefenceReportPriority(),this)},e.prototype.getKeepBasePriorityRank=function(){return this.keep_base_priority>0?_.indexOf(this.getHenchmenSortedByKeepBasePriority(),this):void 0},e.prototype.getDestroyBasePriorityRank=function(){return this.destroy_base_priority>0?_.indexOf(this.getHenchmenSortedByDestroyBasePriority(),this):void 0},e.prototype.getHenchmenSortedBy=function(e){return _.sortBy(this.app.getHenchmen(),function(t){return t[e]}).reverse()},e}();t.Henchman=a},function(e,t,a){"use strict";var n=a(6),o=a(12),r=a(13),i=a(14),s=a(15),l=a(16),u=function(){function e(e){this.app=e,this.freezes=[],this.stages=_.sortBy([new n.Setup(this),new o.Occulus(this),new r.Vents(this),new i.LongWalk(this),new s.Boss(this),new l.Summary(this)],function(e){return e.id}),this.app.state.stage.subscribe(function(e){e.setup()}),this.can_go_back=ko.observable(!1),this.app.state.stage(this.getStage(0)),this.initial_freeze=this.app.state.serialise()}return e.prototype.getStage=function(e){return this.stages[e]},e.prototype.reset=function(){this.app.state.applySerialisedState(this.initial_freeze)},e.prototype.back=function(){this.can_go_back()&&(this.app.state.applySerialisedState(this.freezes.pop()),this.can_go_back(!!this.freezes.length))},e.prototype.next=function(){var e=this.app.state.stage();e.isEvaluatable()&&(this.freeze(),e.evaluateAndApply(),e.id<this.stages.length-1&&this.app.state.stage(this.getStage(e.id+1)))},e.prototype.freeze=function(){this.freezes.push(this.app.state.serialise()),this.can_go_back(!0)},e}();t.Stager=u},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){var a=this;e.call(this,t),this.id=r.StageIDs.Setup,this.label="Set up",this.all_recruited=ko.pureComputed({read:function(){return!a.getTeammates().find(function(e){return!e.is_recruited()})},write:function(e){a.getTeammates().each(function(t){!e&&t.henchman.is_essential||t.is_recruited(e)})},owner:this}),this.all_loyal=ko.pureComputed({read:function(){return!a.getTeammates().find(function(e){return!e.is_loyal()})},write:function(e){e?a.getTeammates().each(function(e){e.is_recruited(!0),e.is_loyal(!0)}):a.getTeammates().each(function(e){e.is_loyal(!1)})},owner:this}),this.is_evaluatable=ko.pureComputed(function(){var e=_.filter(a.getTeammates().value(),function(e){return e.is_recruited()}).length>=8;return e})}return n(t,e),t.prototype.evaluate=function(){return new i.TeammateDeathList},t.prototype.getTeammates=function(){return this.stager.app.state.teammates()},t}(o.Stage);t.Setup=s},function(e,t,a){"use strict";var n=a(8),o=a(9),r=a(10),i=a(4),s=function(){function e(e){this.stager=e}return e.genericTeammateFieldFilter=function(e){return e.is_recruited()&&!e.is_dead()},e.prototype.evaluate=function(){return new r.TeammateDeathList},e.prototype.evaluateAndApply=function(){this.evaluate().apply()},e.prototype.configureFields=function(e){var t=this;this.fields=[],this.fields=_.map(e,function(e){return new o.TeammateField(t.stager.app.state,function(){return t.fields},e)}),_.each(this.fields,function(e){e.candidates.evaluateImmediate()}),this.is_evaluatable=ko.forcibleComputed(function(){var e=!!_.find(t.fields,function(e){if(e.config.optional)return!1;var t=e.observable();return t?void 0===t.henchman.id:!0});return!e})},e.prototype.getField=function(e){return _.find(this.fields,function(t){return t.config.name===e})},e.prototype.getFieldObservable=function(e){return this.getField(e).observable},e.prototype.getFieldCandidates=function(e){return this.getField(e).candidates},e.prototype.getFieldValue=function(e){return this.getFieldObservable(e)()},e.prototype.setup=function(){var e=this;_.each(this.fields,function(t){var a=e.stager.app.state.teammates().withRole(t.config.role).first(),n=t.observable();a&&(void 0!==n&&n.henchman.id===a.henchman.id||t.observable(a))})},e.prototype.isEvaluatable=function(){return this.is_evaluatable()},e.no_teammate=new n.Teammate(new i.Henchman(void 0,void 0,"— None —")),e}();t.Stage=s},function(e,t){"use strict";var a=function(){function e(e,t,a,n,o){var r=this;void 0===t&&(t=!1),void 0===a&&(a=!1),void 0===n&&(n=!1),void 0===o&&(o=[]),this.henchman=e,this.is_recruited=ko.observable(t),this.is_loyal=ko.observable(t&&a),this.is_dead=ko.observable(n),this.roles=ko.observableArray(o),this.death_cause=ko.observable(void 0),this.death_stage_id=ko.observable(void 0),this.is_recruited.subscribe(function(e){!e&&r.is_loyal()&&r.is_loyal(!1)})}return e.prototype.addRole=function(e){return this.hasRole(e)||this.is_dead()||this.roles.push(e),this},e.prototype.removeRole=function(e){return this.is_dead()||this.roles.remove(e),this},e.prototype.hasRole=function(e){return this.roles.indexOf(e)>-1},e.prototype.hasAnyOfTheseRoles=function(){for(var e=this,t=[],a=0;a<arguments.length;a++)t[a-0]=arguments[a];return _.some(t,function(t){return e.hasRole(t)})},e.prototype.hasAllOfTheseRoles=function(){for(var e=this,t=[],a=0;a<arguments.length;a++)t[a-0]=arguments[a];return _.every(t,function(t){return e.hasRole(t)})},e.prototype.getHoldTheLineScore=function(){return this.henchman.htl_value+(this.is_loyal()?1:0)},e.prototype.willBeEffectiveLongWalkLeader=function(){return this.henchman.is_leader&&(this.is_loyal()||this.henchman.is_super_leader)},e.prototype.willBeEffectiveLongWalkEscort=function(){return this.is_loyal()},e.prototype.willBeEffectiveLongWalkBubbler=function(){return this.is_loyal()&&this.henchman.is_biotic_expert},e.prototype.willSurviveBeingBossSquadmate=function(){return this.is_loyal()},e.prototype.willBeEffectiveVentVenter=function(){return this.henchman.is_tech_expert&&this.is_loyal()},e.prototype.willBeEffectiveVentLeader=function(){return this.henchman.is_leader&&this.is_loyal()},e.prototype.die=function(e,t){return this.death_stage_id(e),this.death_cause(t),this.is_dead(!0),this},e}();t.Teammate=a},function(e,t,a){"use strict";var n=a(7),o=function(){function e(e,t,a){this.config=a,this.observable=ko.observable(void 0),this.candidates=ko.forcibleComputed(function(){var o=e.teammates().filter(function(t){return a.filter(t,e.teammates())}).filter(function(e){return!_.find(t(),function(t){return!(t.config.name===a.name||!t.observable||t.observable()!==e)})}).value();return o.unshift(n.Stage.no_teammate),o}),this.observable.subscribe(function(e){void 0!==a.role&&e&&void 0!==e.henchman.id&&e.removeRole(a.role)},null,"beforeChange"),this.observable.subscribe(function(e){void 0!==a.role&&e.addRole(a.role),_.each(t(),function(e){e.config.name!==a.name&&e.candidates.evaluateImmediate()})})}return e}();t.TeammateField=o},function(e,t){"use strict";var a=function(){function e(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];this.list=e}return e.prototype.apply=function(){return _.each(this.list,function(e){e.teammate.die(e.death_stage_id,e.death_cause)}),this},e.prototype.getAll=function(){return this.list},e.prototype.find=function(e){return _.find(this.list,function(t){return t.teammate.henchman.id===e.henchman.id})},e.prototype.add=function(e){return this.list.push(e),this},e}();t.TeammateDeathList=a},function(e,t){"use strict";!function(e){e[e.Garrus=1]="Garrus",e[e.Grunt=2]="Grunt",e[e.Jack=3]="Jack",e[e.Jacob=4]="Jacob",e[e.Kasumi=5]="Kasumi",e[e.Legion=6]="Legion",e[e.Miranda=7]="Miranda",e[e.Mordin=8]="Mordin",e[e.Morinth=9]="Morinth",e[e.Samara=10]="Samara",e[e.Tali=11]="Tali",e[e.Thane=12]="Thane",e[e.Zaeed=13]="Zaeed"}(t.HenchmanIDs||(t.HenchmanIDs={}));t.HenchmanIDs;!function(e){e[e.None=0]="None",e[e.Few=1]="Few",e[e.Many=2]="Many"}(t.NormandyDelayOptions||(t.NormandyDelayOptions={}));t.NormandyDelayOptions;!function(e){e[e.All=0]="All",e[e.StageID=1]="StageID",e[e.NormandyDelay=2]="NormandyDelay",e[e.NormandyFlags=3]="NormandyFlags",e[e.Teammates=4]="Teammates"}(t.SerialisedElements||(t.SerialisedElements={}));t.SerialisedElements;!function(e){e[e.All=0]="All",e[e.HenchmanID=1]="HenchmanID",e[e.DeathCause=2]="DeathCause",e[e.DeathStageID=3]="DeathStageID",e[e.Roles=4]="Roles"}(t.SerialisedTeammateElements||(t.SerialisedTeammateElements={}));t.SerialisedTeammateElements;!function(e){e[e.ArmourFailure=0]="ArmourFailure",e[e.ShieldingFailure=1]="ShieldingFailure",e[e.CannonFailure=2]="CannonFailure",e[e.VentsBadVenter=3]="VentsBadVenter",e[e.VentsBadLeader=4]="VentsBadLeader",e[e.LongWalkBadBubbler=5]="LongWalkBadBubbler",e[e.LongWalkBadLeader=6]="LongWalkBadLeader",e[e.Escort=7]="Escort",e[e.Boss=8]="Boss",e[e.HoldTheLine=9]="HoldTheLine"}(t.TeammateDeathCauses||(t.TeammateDeathCauses={}));t.TeammateDeathCauses;!function(e){e[e.OcculusSquadmate1=0]="OcculusSquadmate1",e[e.OcculusSquadmate2=1]="OcculusSquadmate2",e[e.VentsSquadmate1=2]="VentsSquadmate1",e[e.VentsSquadmate2=3]="VentsSquadmate2",e[e.VentsVenter=4]="VentsVenter",e[e.VentsLeader=5]="VentsLeader",e[e.LongWalkSquadmate1=6]="LongWalkSquadmate1",e[e.LongWalkSquadmate2=7]="LongWalkSquadmate2",e[e.LongWalkEscort=8]="LongWalkEscort",e[e.LongWalkBubbler=9]="LongWalkBubbler",e[e.LongWalkLeader=10]="LongWalkLeader",e[e.BossSquadmate1=11]="BossSquadmate1",e[e.BossSquadmate2=12]="BossSquadmate2",e[e.HeldTheLine=13]="HeldTheLine"}(t.TeammateRoles||(t.TeammateRoles={}));t.TeammateRoles;!function(e){e[e.Setup=0]="Setup",e[e.Occulus=1]="Occulus",e[e.Vents=2]="Vents",e[e.LongWalk=3]="LongWalk",e[e.Boss=4]="Boss",e[e.Summary=5]="Summary"}(t.StageIDs||(t.StageIDs={}));t.StageIDs;!function(e){e[e.AllSurvived=0]="AllSurvived",e[e.HalfSurvived=1]="HalfSurvived",e[e.AllDied=2]="AllDied"}(t.SummaryCrewSurvivalOptions||(t.SummaryCrewSurvivalOptions={}));t.SummaryCrewSurvivalOptions},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){e.call(this,t),this.id=r.StageIDs.Occulus,this.label="Occulus",this.configureFields([{name:"occulus_squadmate_1",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.OcculusSquadmate1},{name:"occulus_squadmate_2",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.OcculusSquadmate2}])}return n(t,e),t.prototype.evaluate=function(){var e=new i.TeammateDeathList,t=this.stager.app.state.teammates().whoAreRecruited().withoutAnyOfTheseRoles(r.TeammateRoles.OcculusSquadmate1,r.TeammateRoles.OcculusSquadmate2);return this.stager.app.state.normandy.has_shielding()||e.add({teammate:t.whoAreAlive().sortByShieldingDeathPriority().last(),death_cause:r.TeammateDeathCauses.ShieldingFailure,death_stage_id:this.id}),this.stager.app.state.normandy.has_armour()||e.add({teammate:t.whoAreAlive().sortByArmourDeathPriority().last(),death_cause:r.TeammateDeathCauses.ArmourFailure,death_stage_id:this.id}),this.stager.app.state.normandy.has_thanix_cannon()||e.add({teammate:t.whoAreAlive().sortByCannonDeathPriority().last(),death_cause:r.TeammateDeathCauses.CannonFailure,death_stage_id:this.id}),e},t}(o.Stage);t.Occulus=s},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){e.call(this,t),this.id=r.StageIDs.Vents,this.label="Vents",this.configureFields([{name:"vent_squadmate_1",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.VentsSquadmate1},{name:"vent_squadmate_2",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.VentsSquadmate2},{name:"vent_venter",filter:function(e){return e.is_recruited()&&!e.is_dead()&&e.henchman.is_vent_candidate},role:r.TeammateRoles.VentsVenter},{name:"vent_leader",filter:function(e){return e.is_recruited()&&!e.is_dead()&&e.henchman.is_leader_candidate},role:r.TeammateRoles.VentsLeader}])}return n(t,e),t.prototype.evaluate=function(){var e=new i.TeammateDeathList,t=this.getFieldValue("vent_venter"),a=this.getFieldValue("vent_leader");return t.willBeEffectiveVentVenter()?a.willBeEffectiveVentLeader()||e.add({teammate:t,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.VentsBadLeader}):e.add({teammate:t,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.VentsBadVenter}),e},t}(o.Stage);t.Vents=s},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){e.call(this,t),this.id=r.StageIDs.LongWalk,this.label="Long Walk",this.configureFields([{name:"long_walk_bubbler",filter:function(e){return e.is_recruited()&&!e.is_dead()&&e.henchman.is_bubble_candidate},role:r.TeammateRoles.LongWalkBubbler},{name:"long_walk_leader",filter:function(e){return e.is_recruited()&&!e.is_dead()&&e.henchman.is_leader_candidate},role:r.TeammateRoles.LongWalkLeader},{name:"long_walk_escort",filter:function(e,t){return t.whoAreAlive().length()<=4?!1:e.is_recruited()&&!e.is_dead()&&e.henchman.is_escort_candidate},optional:!0,role:r.TeammateRoles.LongWalkEscort},{name:"long_walk_squadmate_1",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.LongWalkSquadmate1},{name:"long_walk_squadmate_2",filter:o.Stage.genericTeammateFieldFilter,role:r.TeammateRoles.LongWalkSquadmate2}])}return n(t,e),t.prototype.evaluate=function(){var e=new i.TeammateDeathList,t=this.getFieldValue("long_walk_escort"),a=this.getFieldValue("long_walk_bubbler"),n=this.getFieldValue("long_walk_leader");return void 0===t.henchman.id||t.willBeEffectiveLongWalkEscort()||e.add({teammate:t,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.Escort}),a.willBeEffectiveLongWalkBubbler()||e.add({teammate:this.stager.app.state.teammates().withAnyOfTheseRoles(r.TeammateRoles.LongWalkSquadmate1,r.TeammateRoles.LongWalkSquadmate2).sortByLongWalkDeathPriority().last(),death_stage_id:this.id,death_cause:r.TeammateDeathCauses.LongWalkBadBubbler}),n.willBeEffectiveLongWalkLeader()||e.add({teammate:n,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.LongWalkBadLeader}),e},t}(o.Stage);t.LongWalk=s},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){var a=this;e.call(this,t),this.id=r.StageIDs.Boss,this.label="Boss",this.configureFields([{name:"boss_squadmate_1",filter:function(e){return e.is_recruited()&&!e.is_dead()&&!e.hasRole(r.TeammateRoles.LongWalkEscort)},role:r.TeammateRoles.BossSquadmate1},{name:"boss_squadmate_2",filter:function(e){return e.is_recruited()&&!e.is_dead()&&!e.hasRole(r.TeammateRoles.LongWalkEscort)},role:r.TeammateRoles.BossSquadmate2}]),this.getFieldObservable("boss_squadmate_1").subscribe(function(){a.updateHTLRoles()}),this.getFieldObservable("boss_squadmate_2").subscribe(function(){a.updateHTLRoles()})}return n(t,e),t.prototype.evaluate=function(){var e=this,t=new i.TeammateDeathList,a=this.getFieldValue("boss_squadmate_1"),n=this.getFieldValue("boss_squadmate_2");return a.willSurviveBeingBossSquadmate()||t.add({teammate:a,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.Boss}),n.willSurviveBeingBossSquadmate()||t.add({teammate:n,death_stage_id:this.id,death_cause:r.TeammateDeathCauses.Boss}),this.stager.app.state.teammates().withRole(r.TeammateRoles.HeldTheLine).whoDieHoldingTheLine().each(function(a){t.add({teammate:a,death_stage_id:e.id,death_cause:r.TeammateDeathCauses.HoldTheLine})}),t},t.prototype.updateHTLRoles=function(){var e=this.stager.app.state.teammates().withAnyOfTheseRoles(r.TeammateRoles.BossSquadmate1,r.TeammateRoles.BossSquadmate2),t=this.stager.app.state.teammates().whoAreAlive().whoAreRecruited();e.removeRole(r.TeammateRoles.HeldTheLine),2===e.length()&&t.removeRole(r.TeammateRoles.HeldTheLine).withoutAnyOfTheseRoles(r.TeammateRoles.BossSquadmate1,r.TeammateRoles.BossSquadmate2,r.TeammateRoles.LongWalkEscort).addRole(r.TeammateRoles.HeldTheLine)},t}(o.Stage);t.Boss=s},function(e,t,a){"use strict";var n=this&&this.__extends||function(e,t){function a(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(a.prototype=t.prototype,new a)},o=a(7),r=a(11),i=a(10),s=function(e){function t(t){e.call(this,t),this.id=r.StageIDs.Summary,this.label="Summary",this.shepard_lives=ko.observable(void 0),this.shepard_pulled_up_by=ko.observable(void 0),this.defence_reporter=ko.observable(void 0),this.keep_base_advocate=ko.observable(void 0),this.destroy_base_advocate=ko.observable(void 0),this.crew_survival=ko.observable(void 0),this.is_evaluatable=ko.observable(!1),this.htl_total=ko.observable(void 0),this.htl_score=ko.observable(void 0),this.htl_candidates_count=ko.observable(void 0),this.htl_death_count=ko.observable(void 0)}return n(t,e),t.prototype.evaluate=function(){return new i.TeammateDeathList},t.prototype.setup=function(){var e=this.stager.app.state.teammates().withRole(r.TeammateRoles.HeldTheLine);this.defence_reporter(this.getDefenceReporter()),this.shepard_lives(this.getShepardLives()),this.shepard_pulled_up_by(this.getShepardCatcher()),this.keep_base_advocate(this.getKeepBaseAdvocate()),this.destroy_base_advocate(this.getDestroyBaseAdvocate()),this.crew_survival(this.getCrewSurvival()),this.htl_total(e.getHoldTheLineTotal()),this.htl_score(e.getHoldTheLineScore().toFixed(2)),this.htl_candidates_count(e.length()),this.htl_death_count(e.getHoldTheLineDeathCount())},t.prototype.getLivingTeammates=function(){return this.stager.app.state.teammates().whoAreAlive().whoAreRecruited()},t.prototype.getShepardLives=function(){return this.getLivingTeammates().length()>1},t.prototype.getShepardCatcher=function(){var e=this.getLivingTeammates().sort(function(e){var t=e.henchman.cutscene_rescue_priority+(e.hasAnyOfTheseRoles(r.TeammateRoles.BossSquadmate1,r.TeammateRoles.BossSquadmate2)?100:0);return t});return e.length()>1?e.last():void 0},t.prototype.getDefenceReporter=function(){return this.stager.app.state.teammates().withRole(r.TeammateRoles.HeldTheLine).sortByDefenceReportPriority().last()},t.prototype.getKeepBaseAdvocate=function(){return this.stager.app.state.teammates().withAnyOfTheseRoles(r.TeammateRoles.BossSquadmate1,r.TeammateRoles.BossSquadmate2).whoAdvocateKeepingTheBase().sortByKeepBasePriority().last()},t.prototype.getDestroyBaseAdvocate=function(){return this.stager.app.state.teammates().withAnyOfTheseRoles(r.TeammateRoles.BossSquadmate1,r.TeammateRoles.BossSquadmate2).whoAdvocateDestroyingTheBase().sortByDestroyBasePriority().last()},t.prototype.getCrewSurvival=function(){return 0===this.stager.app.state.teammates().withRole(r.TeammateRoles.LongWalkEscort).length()?r.SummaryCrewSurvivalOptions.AllDied:this.stager.app.state.normandy.delay()===r.NormandyDelayOptions.None?r.SummaryCrewSurvivalOptions.AllSurvived:this.stager.app.state.normandy.delay()===r.NormandyDelayOptions.Few?r.SummaryCrewSurvivalOptions.HalfSurvived:r.SummaryCrewSurvivalOptions.AllDied},t}(o.Stage);t.Summary=s},function(e,t,a){"use strict";var n=a(18),o=a(19),r=a(8),i=function(){function e(e){var t=this;this.app=e,this.normandy=new n.Normandy(!0,!0,!0),this.stage=ko.observable(void 0),this.bootstrapTeammates(),this.serialised=ko.forcibleComputed(function(){return t.stage()?t.serialise():""})}return e.prototype.serialise=function(){return this.app.serialisation.serialise(this)},e.prototype.applySerialisedState=function(e){this.app.serialisation.applySerialisedState(this,e)},e.prototype.bootstrapTeammates=function(){this._teammates=new o.Teammates(_.chain(this.app.getHenchmen()).map(function(e){return new r.Teammate(e,e.is_essential,!1,!1)}).sortBy(function(e){return e.henchman.name}).value()),this.teammates=ko.observable(this._teammates)},e}();t.State=i},function(e,t,a){"use strict";var n=a(11),o=function(){function e(e,t,a,o){var r=this;void 0===e&&(e=!1),void 0===t&&(t=!1),void 0===a&&(a=!1),void 0===o&&(o=0),this.has_armour=ko.observable(e),this.has_shielding=ko.observable(t),this.has_thanix_cannon=ko.observable(a),this._delay=ko.observable(o),this.delay=ko.pureComputed({read:function(){return r._delay()},write:function(e){var t=parseInt(""+e,10);!_.isNaN(t)&&t>=n.NormandyDelayOptions.None&&t<=n.NormandyDelayOptions.Many&&r._delay(t)}})}return e}();t.Normandy=o},function(e,t,a){"use strict";var n=a(20),o=function(){function e(e){this.oa=new n.ObjectArray(e)}return e.fromObjectArray=function(t){return new e(t.elements)},e.prototype.value=function(){return this.oa.elements},e.prototype.first=function(){return this.oa.first()},e.prototype.last=function(){return this.oa.last()},e.prototype.length=function(){return this.oa.length()},e.prototype.whoAreAlive=function(){return this.filter(function(e){return!e.is_dead()})},e.prototype.die=function(e,t){return this.each(function(a){a.die(e,t)}),this},e.prototype.whoAreRecruited=function(){return this.filter(function(e){return e.is_recruited()})},e.prototype.addRole=function(e){return this.each(function(t){t.addRole(e)}),this},e.prototype.removeRole=function(e){return this.each(function(t){t.removeRole(e)}),this},e.prototype.withRole=function(e){return this.filter(function(t){return t.hasRole(e)})},e.prototype.withAnyOfTheseRoles=function(){
for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return this.filter(function(t){return t.hasAnyOfTheseRoles.apply(t,e)})},e.prototype.withoutRole=function(e){return this.filter(function(t){return!t.hasRole(e)})},e.prototype.withoutAnyOfTheseRoles=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];return this.filter(function(t){return!t.hasAnyOfTheseRoles.apply(t,e)})},e.prototype.sortByHenchmanProperty=function(e,t){return void 0===t&&(t=!0),this.sort(function(a){return(t?1:-1)*a.henchman[e]})},e.prototype.sortByShieldingDeathPriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("shielding_death_priority",e)},e.prototype.sortByArmourDeathPriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("armour_death_priority",e)},e.prototype.sortByCannonDeathPriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("cannon_death_priority",e)},e.prototype.sortByLongWalkDeathPriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("long_walk_death_priority",e)},e.prototype.sortByDefenceReportPriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("defence_report_priority",e)},e.prototype.sortByKeepBasePriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("keep_base_priority",e)},e.prototype.sortByDestroyBasePriority=function(e){return void 0===e&&(e=!0),this.sortByHenchmanProperty("destroy_base_priority",e)},e.prototype.sortByIsRecruited=function(e){return void 0===e&&(e=!0),this.sort(function(e){return e.is_recruited()?0:1})},e.prototype.whoAdvocateKeepingTheBase=function(){return this.filter(function(e){return e.henchman.keep_base_priority>0})},e.prototype.whoAdvocateDestroyingTheBase=function(){return this.filter(function(e){return e.henchman.destroy_base_priority>0})},e.prototype.without=function(){for(var t=[],a=0;a<arguments.length;a++)t[a-0]=arguments[a];return e.fromObjectArray(this.oa.without.apply(this.oa,t))},e.prototype.filter=function(t){return e.fromObjectArray(this.oa.filter(t))},e.prototype.map=function(e){return this.oa.map(e)},e.prototype.find=function(e){return this.oa.find(e)},e.prototype.findByHenchman=function(e){return this.findByHenchmanID(e.id)},e.prototype.findByHenchmanID=function(e){return this.find(function(t){return t.henchman.id===e})},e.prototype.sort=function(t){return e.fromObjectArray(this.oa.sort(t))},e.prototype.slice=function(t,a){return e.fromObjectArray(this.oa.slice(t,a))},e.prototype.getHoldTheLineTotal=function(){var e=_.map(this.oa.elements,function(e){return e.getHoldTheLineScore()});return _.reduce(e,function(e,t){return e+t},0)},e.prototype.getHoldTheLineScore=function(){return this.getHoldTheLineTotal()/this.length()},e.prototype.getHoldTheLineDeathCount=function(){var e=this.length(),t=this.getHoldTheLineScore();return 2>t?e>=5?t>=1.5?1:t>=.5?2:3:4===e?t>=1?1:t>=.5?2:t>0?3:4:3===e?t>=1?1:t>0?2:3:2===e?t>0?1:2:1:0},e.prototype.whoDieHoldingTheLine=function(){var t=this.getHoldTheLineDeathCount();return t>0?this.sort(function(e){return e.henchman.htl_death_priority+(e.is_loyal()?0:100)}).slice(-t):new e([])},e.prototype.each=function(e){this.oa.each(e)},e}();t.Teammates=o},function(e,t){"use strict";var a=function(){function e(e){this.elements=e}return e.prototype.first=function(){return this.elements.length?this.elements[0]:void 0},e.prototype.last=function(){return this.elements.length?this.elements[this.elements.length-1]:void 0},e.prototype.length=function(){return this.elements.length},e.prototype.push=function(e){var t=this.cloneElements();return t.push(e),this.factory(t)},e.prototype.unshift=function(e){var t=this.cloneElements();return t.unshift(e),this.factory(t)},e.prototype.slice=function(e,t){return this.factory(this.elements.slice(e,t))},e.prototype.sort=function(e){var t=_.sortBy(this.cloneElements(),e);return this.factory(t)},e.prototype.filter=function(e){var t=_.filter(this.cloneElements(),e);return this.factory(t)},e.prototype.without=function(){for(var e=[],t=0;t<arguments.length;t++)e[t-0]=arguments[t];e.unshift.apply(e,this.cloneElements());var a=_.without.apply(_,e);return this.factory(a)},e.prototype.find=function(e){return _.find(this.elements,e)},e.prototype.map=function(e){return _.map(this.elements,e)},e.prototype.each=function(e){_.each(this.elements,e)},e.prototype.cloneElements=function(){return this.elements.slice(0)},e.prototype.factory=function(t){return new e(t)},e}();t.ObjectArray=a},function(e,t,a){"use strict";var n=a(18),o=a(8),r=a(19),i=a(17),s=a(11),l=function(){function e(e){this.app=e}return e.lpad=function(e,t){void 0===t&&(t=2);var a=e;return a.length>=t?a:new Array(t-a.length+1).join("0")+a},e.indexesToFlags=function(e){return _.reduce(e,function(e,t){return e+Math.pow(2,t)},0)},e.flagsToIndexes=function(e){for(var t=[],a=0,n=1;e>=n;)e&n&&t.push(a),a++,n*=2;return t},e.getRoleCount=function(){return _.keys(s.TeammateRoles).length/2},e.prototype.serialise=function(t){var a=this,n=[e.lpad(t.stage().id.toString(16),1),this.serialiseNormandy(t.normandy),_.map(t.teammates().value(),function(e){return a.serialiseTeammate(e)}).join("")];return n.join("")},e.prototype.deserialise=function(t){var a=this,n=t.match(e.SerialisedRegex);if(n){var o=new i.State(this.app);return o.stage(this.app.stager.getStage(parseInt("0x"+n[s.SerialisedElements.StageID],16))),o.normandy=this.deserialiseNormandyElements(n[s.SerialisedElements.NormandyDelay],n[s.SerialisedElements.NormandyFlags]),o.teammates(new r.Teammates(_.map(n[s.SerialisedElements.Teammates].match(e.TeammatesRegex),function(e){return a.deserialiseTeammate(e)}))),o}throw new Error("Serialised data was malformed.")},e.prototype.applySerialisedState=function(e,t){var a=this.deserialise(t);e.normandy.delay(a.normandy.delay()),e.normandy.has_armour(a.normandy.has_armour()),e.normandy.has_shielding(a.normandy.has_shielding()),e.normandy.has_thanix_cannon(a.normandy.has_thanix_cannon());var n=a.teammates();e.teammates().each(function(e){var t=n.findByHenchman(e.henchman);e.is_recruited(t.is_recruited()),e.is_loyal(t.is_loyal()),e.is_dead(t.is_dead()),e.roles.removeAll(),_.each(t.roles(),function(t){e.addRole(t)}),e.death_cause=t.death_cause,e.death_stage_id=t.death_stage_id}),e.stage(a.stage())},e.prototype.serialiseTeammate=function(t){var a=e.getRoleCount(),n=t.roles().slice(0);t.is_recruited()&&n.push(a+1),t.is_loyal()&&n.push(a+2),t.is_dead()&&n.push(a+3);var o=[e.lpad(t.henchman.id.toString(16),1),e.lpad((void 0===t.death_cause()?0:t.death_cause()+1).toString(16),1),e.lpad((t.death_stage_id()||0).toString(16),1),e.lpad(e.indexesToFlags(n).toString(16),5)];return o.join("")},e.prototype.deserialiseTeammate=function(t){var a=t.match(e.TeammateRegex),n=parseInt("0x"+a[s.SerialisedTeammateElements.HenchmanID],16),r=parseInt("0x"+a[s.SerialisedTeammateElements.DeathCause],16),i=parseInt("0x"+a[s.SerialisedTeammateElements.DeathStageID],16)||void 0,l=e.flagsToIndexes(parseInt("0x"+a[s.SerialisedTeammateElements.Roles],16)),u=e.getRoleCount(),d=_.indexOf(l,u+1)>=0,h=_.indexOf(l,u+2)>=0,c=_.indexOf(l,u+3)>=0;l=_.without(l,u+1,u+2,u+3);var m=new o.Teammate(this.app.getHenchman(n),d,h,c,l);return c&&m.die(i,r-1),m},e.prototype.serialiseNormandy=function(t){var a=0+(t.has_armour()?1:0)+(t.has_shielding()?2:0)+(t.has_thanix_cannon()?4:0),n=[e.lpad(t.delay().toString(10),2),e.lpad(a.toString(10),1)];return n.join("")},e.prototype.deserialiseNormandyElements=function(e,t){var a=parseInt(e,10),o=parseInt(t,10),r=!!(1&o),i=!!(2&o),s=!!(4&o);return new n.Normandy(r,i,s,a)},e.TeammateRegex=/^([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f]{5})$/,e.TeammatesRegex=/[0-9a-f]{8}/g,e.SerialisedRegex=/^([0-9a-f])([\d]{2})([\d])((?:[0-9a-f]{2}[0-9a-f][0-9a-f]{5}){12})$/,e}();t.Serialisation=l},function(e,t,a){"use strict";var n=a(11);!function(e){e[e.ApproachSquadmate1=0]="ApproachSquadmate1",e[e.ApproachSquadmate2=1]="ApproachSquadmate2",e[e.ApproachShieldsDeath=2]="ApproachShieldsDeath",e[e.ApproachArmorDeath=3]="ApproachArmorDeath",e[e.ApproachWeaponDeath=4]="ApproachWeaponDeath",e[e.VentsSquadmate1=5]="VentsSquadmate1",e[e.VentsSquadmate2=6]="VentsSquadmate2",e[e.VentsSpecialist=7]="VentsSpecialist",e[e.VentsFireteamLeader=8]="VentsFireteamLeader",e[e.VentsDeath=9]="VentsDeath",e[e.LongWalkSpecialist=10]="LongWalkSpecialist",e[e.LongWalkFireteamLeader=11]="LongWalkFireteamLeader",e[e.LongWalkEscort=12]="LongWalkEscort",e[e.LongWalkSquadmate1=13]="LongWalkSquadmate1",e[e.LongWalkSquadmate2=14]="LongWalkSquadmate2",e[e.LongWalkSquadmateDeath=15]="LongWalkSquadmateDeath",e[e.LongWalkEscortDeath=16]="LongWalkEscortDeath",e[e.LongWalkFireteamLeaderDeath=17]="LongWalkFireteamLeaderDeath",e[e.BossSquadmate1=18]="BossSquadmate1",e[e.BossSquadmate2=19]="BossSquadmate2",e[e.BossHoldingTheLine=20]="BossHoldingTheLine",e[e.BossSquadmateDeath=21]="BossSquadmateDeath",e[e.BossHoldingTheLineDeath=22]="BossHoldingTheLineDeath"}(t.Role||(t.Role={}));var o=t.Role,r=function(){function e(e,t,a,n,r,i,s,l,u,d,h,c,m,p,f,v,g,y,b,k,w,S,T,q,D){var R=this;this.logic=e,this.id=t,this.name=a,this.is_essential=n,this.hold_the_line_baseline_score=r,this.hold_the_line_death_priority=i,this.armour_death_priority=s,this.shield_death_priority=l,this.weapon_death_priority=u,this.long_walk_death_priority=d,this.cutscene_rescue_priority=h,this.defence_report_priority=c,this.keep_base_priority=m,this.destroy_base_priority=p,this.is_vent_ideal_candidate=f,this.is_bubble_ideal_candidate=v,this.is_leader_ideal_candidate=g,this.is_super_leader=y,this.is_escort_candidate=b,this.is_vent_candidate=k,this.is_bubble_candidate=w,this.is_leader_candidate=S,this.upgrade_unlocks_armour=T,this.upgrade_unlocks_shields=q,this.upgrade_unlocks_weapon=D,this.is_recruited=ko.observable(this.is_essential),this.is_loyal=ko.observable(!1),this.is_upgraded=ko.observable(!1),this.is_recruited.subscribe(function(e){e||(R.is_essential&&R.is_recruited(!0),R.is_loyal(!1),R.is_upgraded(!1))}),this.is_loyal.subscribe(function(e){e?R.is_recruited()||R.is_loyal(!1):R.is_upgraded(!1)}),this.is_upgraded.subscribe(function(e){e&&(R.is_loyal()||R.is_upgraded(!1))}),this.is_good_vent_specialist=ko.pureComputed(function(){return R.is_loyal()&&R.is_vent_ideal_candidate}),this.is_good_vent_fireteam_leader=ko.pureComputed(function(){return R.is_loyal()&&R.is_leader_ideal_candidate}),this.is_good_escort=ko.pureComputed(function(){return R.is_loyal()}),this.is_good_long_walk_specialist=ko.pureComputed(function(){return R.is_loyal()&&R.is_bubble_ideal_candidate}),this.is_good_long_walk_fireteam_leader=ko.pureComputed(function(){return R.is_leader_ideal_candidate&&(R.is_loyal()||R.is_super_leader)}),this.is_good_boss_squadmate=ko.pureComputed(function(){return R.is_loyal()}),this.hold_the_line_score=ko.pureComputed(function(){return R.hold_the_line_baseline_score+(R.is_loyal()?1:0)}),this.roles=ko.observableArray([]),this.syncRoleToObservable(e.approach_squadmate_1,o.ApproachSquadmate1).syncRoleToObservable(e.approach_squadmate_2,o.ApproachSquadmate2).syncRoleToObservable(e.approach_armour_death,o.ApproachArmorDeath).syncRoleToObservable(e.approach_shields_death,o.ApproachShieldsDeath).syncRoleToObservable(e.approach_weapon_death,o.ApproachWeaponDeath).syncRoleToObservable(e.vents_specialist,o.VentsSpecialist).syncRoleToObservable(e.vents_fireteam_leader,o.VentsFireteamLeader).syncRoleToObservable(e.vents_squadmate_1,o.VentsSquadmate1).syncRoleToObservable(e.vents_squadmate_2,o.VentsSquadmate2).syncRoleToObservable(e.vents_death,o.VentsDeath).syncRoleToObservable(e.long_walk_specialist,o.LongWalkSpecialist).syncRoleToObservable(e.long_walk_fireteam_leader,o.LongWalkFireteamLeader).syncRoleToObservable(e.long_walk_escort,o.LongWalkEscort).syncRoleToObservable(e.long_walk_squadmate_1,o.LongWalkSquadmate1).syncRoleToObservable(e.long_walk_squadmate_2,o.LongWalkSquadmate2).syncRoleToObservable(e.long_walk_escort_death,o.LongWalkEscortDeath).syncRoleToObservable(e.long_walk_squadmate_death,o.LongWalkSquadmateDeath).syncRoleToObservable(e.long_walk_fireteam_leader_death,o.LongWalkFireteamLeaderDeath).syncRoleToObservable(e.boss_squadmate_1,o.BossSquadmate1).syncRoleToObservable(e.boss_squadmate_2,o.BossSquadmate2).syncRoleToObservableSet(e.boss_squadmate_deaths,o.BossSquadmateDeath).syncRoleToObservableSet(e.boss_hold_the_line_candidates,o.BossHoldingTheLine).syncRoleToObservableSet(e.boss_hold_the_line_deaths,o.BossHoldingTheLineDeath),this.survives=ko.pureComputed(function(){var t=e.boss_survivors();return t?_.contains(t,R):void 0}),this.armour_death_priority_rank=this.deriveRank("armour_death_priority"),this.shield_death_priority_rank=this.deriveRank("shield_death_priority"),this.weapon_death_priority_rank=this.deriveRank("weapon_death_priority"),this.long_walk_death_priority_rank=this.deriveRank("long_walk_death_priority"),this.cutscene_rescue_priority_rank=this.deriveRank("cutscene_rescue_priority"),this.defence_report_priority_rank=this.deriveRank("defence_report_priority"),this.keep_base_priority_rank=this.deriveRank("keep_base_priority"),this.destroy_base_priority_rank=this.deriveRank("destroy_base_priority"),this.hold_the_line_death_priority_rank=this.deriveRank("hold_the_line_death_priority")}return e.prototype.deriveRank=function(e){var t=this;return ko.pureComputed(function(){var a=t.logic.pool();return t[e]>0?a.length-_.indexOf(_.sortBy(a,e),t):void 0})},e.prototype.switchRole=function(e,t){t?this.hasRole(e)||this.roles.push(e):this.roles.remove(e),console.log("switch role",this.name,o[e],t,this.roles())},e.prototype.syncRoleToObservable=function(e,t){var a=this;return e.subscribe(function(e){return a.switchRole(t,e&&e.id===a.id)}),this},e.prototype.syncRoleToObservableSet=function(e,t){var a=this;return e.subscribe(function(e){return a.switchRole(t,_.contains(e,a))}),this},e.prototype.hasRole=function(e){return this.roles.indexOf(e)>-1},e}();t.Teammate=r;var i=function(){function e(e){var t=this;this.normandy_has_armour=ko.pureComputed({read:function(){return _.find(t.pool(),"upgrade_unlocks_armour").is_upgraded()},write:function(e){_.find(t.pool(),"upgrade_unlocks_armour").is_upgraded(e)}}),this.normandy_has_shields=ko.pureComputed({read:function(){return _.find(t.pool(),"upgrade_unlocks_shields").is_upgraded()},write:function(e){_.find(t.pool(),"upgrade_unlocks_shields").is_upgraded(e)}}),this.normandy_has_weapon=ko.pureComputed({read:function(){return _.find(t.pool(),"upgrade_unlocks_weapon").is_upgraded()},write:function(e){_.find(t.pool(),"upgrade_unlocks_weapon").is_upgraded(e)}}),this.mission_delay=ko.observable(void 0),this.pool=ko.observableArray([]),this.recruited=ko.pureComputed(function(){return _.filter(t.pool(),function(e){return e.is_recruited()})}),this.loyal=ko.pureComputed(function(){return _.filter(t.pool(),function(e){return e.is_loyal()})}),this.upgraded=ko.pureComputed(function(){return _.filter(t.pool(),function(e){return e.is_upgraded()})}),this.all_recruited=ko.pureComputed({read:function(){return _.all(t.pool(),function(e){return e.is_recruited()})},write:function(e){_.each(t.pool(),function(t){t.is_recruited(e)})}}),this.all_loyal=ko.pureComputed({read:function(){return _.all(t.recruited(),function(e){return e.is_loyal()})},write:function(e){_.each(t.recruited(),function(t){t.is_loyal(e)})}}),this.all_upgraded=ko.pureComputed({read:function(){return _.all(t.loyal(),function(e){return e.is_upgraded()})},write:function(e){_.each(t.loyal(),function(t){t.is_upgraded(e)})}}),this.approach_squadmate_1=ko.observable(void 0),this.approach_squadmate_2=ko.observable(void 0),this.approach_squadmate_pool_1=ko.pureComputed(function(){var e=t.recruited();return e.length>=8?_.without(e,t.approach_squadmate_2()):void 0}),this.approach_squadmate_pool_2=ko.pureComputed(function(){var e=t.recruited();return e.length>=8?_.without(e,t.approach_squadmate_1()):void 0}),this.bindToPool(this.approach_squadmate_1,this.approach_squadmate_pool_1),this.bindToPool(this.approach_squadmate_2,this.approach_squadmate_pool_2),this.approach_evaluatable=ko.pureComputed(function(){return!(!t.approach_squadmate_1()||!t.approach_squadmate_2()||void 0===t.normandy_has_armour()||void 0===t.normandy_has_weapon()||void 0===t.normandy_has_shields())}),this.approach_shields_death=ko.pureComputed(function(){if(t.approach_evaluatable()&&!t.normandy_has_shields()){var e=_.chain(t.recruited()).without(t.approach_squadmate_1(),t.approach_squadmate_2()).filter("shield_death_priority").sortBy("shield_death_priority").value();return _.last(e)}}),this.approach_armour_death=ko.pureComputed(function(){if(t.approach_evaluatable()&&!t.normandy_has_armour()){var e=_.chain(t.recruited()).without(t.approach_squadmate_1(),t.approach_squadmate_2(),t.approach_shields_death()).filter("armour_death_priority").sortBy("armour_death_priority").value();return _.last(e)}}),this.approach_weapon_death=ko.pureComputed(function(){if(t.approach_evaluatable()&&!t.normandy_has_weapon()){var e=_.chain(t.recruited()).without(t.approach_squadmate_1(),t.approach_squadmate_2(),t.approach_shields_death(),t.approach_armour_death()).filter("weapon_death_priority").sortBy("weapon_death_priority").value();return _.last(e)}}),this.approach_survivors=ko.pureComputed(function(){return t.approach_evaluatable()?_.without(t.recruited(),t.approach_shields_death(),t.approach_armour_death(),t.approach_weapon_death()):void 0}),this.vents_specialist=ko.observable(void 0),this.vents_fireteam_leader=ko.observable(void 0),this.vents_squadmate_1=ko.observable(void 0),this.vents_squadmate_2=ko.observable(void 0),this.vents_specialist_pool=ko.pureComputed(function(){var e=t.approach_survivors();return e?_.without(_.filter(e,"is_vent_candidate"),t.vents_fireteam_leader(),t.vents_squadmate_1(),t.vents_squadmate_2()):void 0}),this.vents_fireteam_leader_pool=ko.pureComputed(function(){var e=t.approach_survivors();return e?_.without(_.filter(e,"is_leader_candidate"),t.vents_specialist(),t.vents_squadmate_1(),t.vents_squadmate_2()):void 0}),this.vents_squadmate_pool_1=ko.pureComputed(function(){var e=t.approach_survivors();return e?_.without(e,t.vents_specialist(),t.vents_fireteam_leader(),t.vents_squadmate_2()):void 0}),this.vents_squadmate_pool_2=ko.pureComputed(function(){var e=t.approach_survivors();return e?_.without(e,t.vents_specialist(),t.vents_fireteam_leader(),t.vents_squadmate_1()):void 0}),this.bindToPool(this.vents_specialist,this.vents_specialist_pool),this.bindToPool(this.vents_fireteam_leader,this.vents_fireteam_leader_pool),this.bindToPool(this.vents_squadmate_1,this.vents_squadmate_pool_1),this.bindToPool(this.vents_squadmate_2,this.vents_squadmate_pool_2),this.vents_evaluatable=ko.pureComputed(function(){return!!(t.vents_specialist()&&t.vents_fireteam_leader()&&t.vents_squadmate_1()&&t.vents_squadmate_2())}),this.vents_death=ko.pureComputed(function(){if(t.vents_evaluatable()){var e=t.vents_specialist(),a=t.vents_fireteam_leader();if(!e.is_good_vent_specialist()||!a.is_good_vent_fireteam_leader())return e}}),this.vents_survivors=ko.pureComputed(function(){return t.vents_evaluatable()?_.without(t.approach_survivors(),t.vents_death()):void 0}),this.long_walk_specialist=ko.observable(void 0),this.long_walk_fireteam_leader=ko.observable(void 0),this.long_walk_escort=ko.observable(void 0),this.long_walk_squadmate_1=ko.observable(void 0),this.long_walk_squadmate_2=ko.observable(void 0),this.long_walk_specialist_pool=ko.pureComputed(function(){var e=t.vents_survivors();return e?_.without(_.filter(e,"is_bubble_candidate"),t.long_walk_fireteam_leader(),t.long_walk_escort(),t.long_walk_squadmate_1(),t.long_walk_squadmate_2()):void 0}),this.long_walk_fireteam_leader_pool=ko.pureComputed(function(){var e=t.vents_survivors();return e?_.without(_.filter(e,"is_leader_candidate"),t.long_walk_specialist(),t.long_walk_escort(),t.long_walk_squadmate_1(),t.long_walk_squadmate_2()):void 0}),this.long_walk_escort_pool=ko.pureComputed(function(){var e=t.vents_survivors();return e?_.without(_.filter(e,"is_escort_candidate"),t.long_walk_specialist(),t.long_walk_fireteam_leader(),t.long_walk_squadmate_1(),t.long_walk_squadmate_2()):void 0}),this.long_walk_squadmate_pool_1=ko.pureComputed(function(){var e=t.vents_survivors();return e?_.without(e,t.long_walk_specialist(),t.long_walk_fireteam_leader(),t.long_walk_escort(),t.long_walk_squadmate_2()):void 0}),this.long_walk_squadmate_pool_2=ko.pureComputed(function(){var e=t.vents_survivors();return e?_.without(e,t.long_walk_specialist(),t.long_walk_fireteam_leader(),t.long_walk_escort(),t.long_walk_squadmate_1()):void 0}),this.bindToPool(this.long_walk_specialist,this.long_walk_specialist_pool),this.bindToPool(this.long_walk_fireteam_leader,this.long_walk_fireteam_leader_pool),this.bindToPool(this.long_walk_escort,this.long_walk_escort_pool),this.bindToPool(this.long_walk_squadmate_1,this.long_walk_squadmate_pool_1),this.bindToPool(this.long_walk_squadmate_2,this.long_walk_squadmate_pool_2),this.long_walk_evaluatable=ko.pureComputed(function(){return!!(t.long_walk_specialist()&&t.long_walk_fireteam_leader()&&t.long_walk_squadmate_1()&&t.long_walk_squadmate_2())}),this.long_walk_escort_death=ko.pureComputed(function(){if(t.long_walk_evaluatable()){var e=t.long_walk_escort();if(e&&!e.is_good_escort())return e}}),this.long_walk_squadmate_death=ko.pureComputed(function(){if(t.long_walk_evaluatable()){var e=t.long_walk_specialist(),a=t.long_walk_squadmate_1(),n=t.long_walk_squadmate_2();if(!e.is_good_long_walk_specialist()){var o=_.sortBy([a,n],"long_walk_death_priority");return _.last(o)}}}),this.long_walk_fireteam_leader_death=ko.pureComputed(function(){if(t.long_walk_evaluatable()){var e=t.long_walk_fireteam_leader();if(!e.is_good_long_walk_fireteam_leader()){var a=_.without(t.vents_survivors(),t.long_walk_fireteam_leader(),t.long_walk_escort(),t.long_walk_specialist(),t.long_walk_squadmate_1(),t.long_walk_squadmate_2());if(0===a.length&&t.long_walk_squadmate_death())return;return e}}}),this.long_walk_survivors=ko.pureComputed(function(){var e=t.vents_survivors();return t.long_walk_evaluatable()?_.without(e,t.long_walk_escort_death(),t.long_walk_squadmate_death(),t.long_walk_escort_death()):void 0}),this.boss_squadmate_1=ko.observable(void 0),this.boss_squadmate_2=ko.observable(void 0),this.boss_squadmate_pool_1=ko.pureComputed(function(){var e=t.long_walk_survivors();return e?_.without(e,t.long_walk_escort(),t.boss_squadmate_2()):void 0}),this.boss_squadmate_pool_2=ko.pureComputed(function(){var e=t.long_walk_survivors();return e?_.without(e,t.long_walk_escort(),t.boss_squadmate_1()):void 0}),this.bindToPool(this.boss_squadmate_1,this.boss_squadmate_pool_1),this.bindToPool(this.boss_squadmate_2,this.boss_squadmate_pool_2),this.boss_evaluatable=ko.pureComputed(function(){return!(!t.boss_squadmate_1()||!t.boss_squadmate_2())}),this.boss_squadmate_deaths=ko.pureComputed(function(){if(t.boss_evaluatable()){var e=[],a=t.boss_squadmate_1(),n=t.boss_squadmate_2();return a.is_good_boss_squadmate()||e.push(a),n.is_good_boss_squadmate()||e.push(n),e}}),this.boss_hold_the_line_candidates=ko.pureComputed(function(){var e=t.long_walk_survivors();return t.boss_evaluatable()?_.without(e,t.long_walk_escort(),t.boss_squadmate_1(),t.boss_squadmate_2()):void 0}),this.boss_hold_the_line_total=ko.pureComputed(function(){var e=t.boss_hold_the_line_candidates();return e?_.sum(_.map(e,function(e){return e.hold_the_line_score()})):void 0}),this.boss_hold_the_line_rating=ko.pureComputed(function(){var e=t.boss_hold_the_line_candidates(),a=t.boss_hold_the_line_total();return e?e.length>0?a/e.length:0:void 0}),this.boss_hold_the_line_death_count=ko.pureComputed(function(){var e=t.boss_hold_the_line_rating(),a=t.boss_hold_the_line_candidates();return void 0!==e?2>e?a.length>=5?e>=1.5?1:e>=.5?2:3:4===a.length?e>=1?1:e>=.5?2:e>0?3:4:3===a.length?e>=1?1:e>0?2:3:2===a.length?e>0?1:2:1:0:void 0}),this.boss_hold_the_line_deaths=ko.pureComputed(function(){var e=t.boss_hold_the_line_death_count(),a=t.boss_hold_the_line_candidates();return void 0!==e?0===e?[]:_.sortBy(a,function(e){return e.hold_the_line_death_priority+(e.is_loyal()?0:100)}).slice(-e):void 0}),this.boss_survivors=ko.pureComputed(function(){var e=t.long_walk_survivors();return t.boss_evaluatable()?_.without.apply(_,[e].concat(t.boss_hold_the_line_deaths(),t.boss_squadmate_deaths())):void 0}),this.summary_defence_reporter=ko.pureComputed(function(){var e=t.boss_hold_the_line_candidates();return e?_.last(_.sortBy(e,"defence_report_priority")):void 0}),this.summary_advocates_keeping_base=ko.pureComputed(function(){var e=t.boss_squadmate_1(),a=t.boss_squadmate_2();return e&&a?_.last(_.sortBy([e,a],"keep_base_priority")):void 0}),this.summary_advocates_destroying_base=ko.pureComputed(function(){var e=t.boss_squadmate_1(),a=t.boss_squadmate_2();return e&&a?_.last(_.sortBy([e,a],"destroy_base_priority")):void 0}),this.summary_shepard_lives=ko.pureComputed(function(){return t.boss_survivors().length>2}),this.summary_catches_shepard=ko.pureComputed(function(){var e=t.boss_survivors(),a=t.boss_squadmate_1(),n=t.boss_squadmate_2();return e&&e.length?(e=_.sortBy(e,function(e){var t=e===a||e===n;return e.cutscene_rescue_priority+(t?100:0)}),_.last(e)):void 0}),this.pool([new r(this,n.HenchmanIDs.Garrus,"Garrus Vakarian",!0,3,5,0,8,11,10,3,11,8,0,!1,!1,!0,!1,!0,!0,!1,!0,!1,!1,!0),new r(this,n.HenchmanIDs.Grunt,"Grunt",!1,3,0,0,6,9,8,5,9,12,0,!1,!1,!1,!1,!0,!1,!1,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Jack,"Jack",!0,0,8,12,5,8,11,2,12,0,8,!1,!0,!1,!1,!0,!1,!0,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Jacob,"Jacob Taylor",!0,1,6,0,0,0,6,8,8,0,10,!1,!1,!0,!1,!0,!0,!0,!0,!0,!1,!1),new r(this,n.HenchmanIDs.Kasumi,"Kasumi Goto",!1,0,9,0,12,0,3,10,4,0,9,!0,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Legion,"Legion",!1,1,3,0,11,0,9,4,10,9,0,!0,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Miranda,"Miranda Lawson",!0,1,7,0,0,0,-1,12,2,13,0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Mordin,"Mordin Solus",!0,0,11,0,0,0,5,7,6,10,0,!1,!1,!1,!1,!0,!0,!1,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Samara,"Samara",!1,1,4,0,4,7,7,6,7,0,12,!1,!0,!1,!1,!0,!1,!0,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Tali,"Tali'zorah",!1,0,10,0,10,0,4,9,5,0,11,!0,!1,!1,!1,!0,!0,!1,!0,!1,!0,!1),new r(this,n.HenchmanIDs.Thane,"Thane",!1,1,2,0,9,12,12,1,13,0,13,!1,!1,!1,!1,!0,!0,!0,!0,!1,!1,!1),new r(this,n.HenchmanIDs.Zaeed,"Zaeed Masani",!1,3,1,0,7,10,2,11,3,11,0,!1,!1,!1,!1,!0,!1,!1,!0,!1,!1,!1)]);var a=[this.approach_squadmate_1,this.approach_squadmate_2,this.vents_specialist,this.vents_fireteam_leader,this.vents_squadmate_1,this.vents_squadmate_2,this.long_walk_specialist,this.long_walk_fireteam_leader,this.long_walk_escort,this.long_walk_squadmate_1,this.long_walk_squadmate_2,this.boss_squadmate_1,this.boss_squadmate_2];this.serialised=ko.pureComputed({read:function(){var e=_.map(t.pool(),function(e){return((e.is_recruited()?1:0)+(e.is_loyal()?2:0)+(e.is_upgraded()?4:0)).toString(16)}).join("");return e+=_.map(a,function(e){var t=e();return(t?t.id:0).toString(16)}).join("")},write:function(e){for(var n=t.pool(),o=0,r=n.length;r>o;++o){var i=parseInt(e[o],16);n[o].is_recruited(!!(1&i)),n[o].is_loyal(!!(2&i)),n[o].is_upgraded(!!(4&i))}_.each(a,function(t,a){var o=parseInt(e[n.length+a],16);t(o>0?_.find(n,function(e){return e.id===o}):void 0)})}})}return e.prototype.bindToPool=function(e,t){t.subscribe(function(t){var a=e();t?a&&!_.contains(t,a)&&e(void 0):e(void 0)})},e}();t.Logic=i},function(e,t){},,,,function(e,t){"use strict";t.name="pick-teammate",void function(){ko.components.register(t.name,{viewModel:function(e){this.target=e.target,this.pool=ko.pureComputed(function(){var t=e.pool();return t&&t.unshift(void 0),t}),this.label=e.label,this.id=e.id},template:'\n        <div class="form-group">\n            <label data-bind="text: label, attr: {\'for\': id}"></label>\n            <select class="form-control" id="test" data-bind="attr: {\'id\': id}, options: pool, optionsText: function (teammate) { return teammate ? teammate.name : \'-- None --\'; }, value: target"></select>\n            </div>\n        '})}()},function(e,t){"use strict";t.name="teammate-list",void function(){ko.components.register(t.name,{viewModel:function(e){var t=this;this.pool=e.pool,this.label=e.label,this.rendered=ko.pureComputed(function(){return _.map(t.pool(),function(e){return e.name}).join(", ")})},template:'\n        <div class="form-group">\n            <label data-bind="text: label"></label>\n            <input class="form-control" type="text" data-bind="value: rendered" />\n        </div>\n        '})}()},function(e,t){"use strict";t.name="role-toggle",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e),this.glyphs={glyphicon:!0},this.glyphs["glyphicon-"+e.icon]=!0,this.available=ko.pureComputed(function(){return _.contains(e.pool(),e.teammate)})},template:'\n        <span data-bind="\n            style: {\n                visibility: $data.available() ? \'visible\' : \'hidden\'\n            },\n            css: {\'text-muted\': !$data.teammate.hasRole($data.role)},\n            click: function () {\n                if ($data.observable() === teammate) {\n                    $data.observable(undefined);\n                } else {\n                    $data.observable(teammate);\n                }\n            }">\n            <span data-bind="css: $data.glyphs" class="glyphicon"></span><sup data-bind="text: $data.supertext"></sup>\n        </span>\n        '})}()},function(e,t){"use strict";t.name="role-static",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e),this.glyphs={glyphicon:!0},this.glyphs["glyphicon-"+e.icon]=!0,this.classes={},this.classes[e.classes]=!0},template:'\n        <span data-bind="\n            if: $data.teammate.hasRole($data.role),\n            css: $data.classes\n            ">\n            <span data-bind="css: $data.glyphs" class="glyphicon"></span><sup data-bind="text: $data.supertext"></sup>\n        </span>\n        '})}()},function(e,t){"use strict";t.name="death-role-static",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e)},template:'\n        <!-- ko component: { name: \'role-static\', params: {\n            teammate: teammate,\n            role: role,\n            supertext: supertext,\n            icon: "alert",\n            classes: "text-danger"\n        } } --><!-- /ko -->\n        '})}()},function(e,t){"use strict";t.name="observable-toggle",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e),this.glyphs={glyphicon:!0},this.glyphs["glyphicon-"+e.icon]=!0},template:'\n        <span data-bind="\n            css: {\'text-muted\': !$data.observable()},\n            click: function () {\n                $data.observable(!$data.observable());\n            }">\n            <span data-bind="css: $data.glyphs" class="glyphicon"></span><sup data-bind="text: $data.supertext"></sup>\n        </span>\n        '})}()},function(e,t){"use strict";t.name="teammate-name",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e)},template:'\n        <p class="form-control-static" data-bind="with: teammate"><span data-bind="text: name"></span></p>\n        '})}()},function(e,t){"use strict";t.name="teammate-row",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e)},template:'\n        <tr data-bind="css: {\'text-muted\': !teammate.is_recruited() }">\n            <td>\n                <a href="#view-profile" data-bind="click: function () { modal_target(teammate); }">\n                    <span data-bind="text: teammate.name"></span>\n                </a>\n            </td>\n            <td>\n                <!-- ko component: { name: \'observable-toggle\', params: {\n                    observable: teammate.is_recruited,\n                    icon: "ok",\n                    supertext: ""\n                } } --><!-- /ko -->\n            </td>\n            <td>\n                <span data-bind="if: teammate.is_recruited">\n                <!-- ko component: { name: \'observable-toggle\', params: {\n                    observable: teammate.is_loyal,\n                    icon: "heart",\n                    supertext: ""\n                } } --><!-- /ko -->\n                </span>\n            </td>\n            <td>\n                <span data-bind="if: teammate.is_loyal">\n                <!-- ko component: { name: \'observable-toggle\', params: {\n                    observable: teammate.is_upgraded,\n                    icon: "circle-arrow-up",\n                    supertext: ""\n                } } --><!-- /ko -->\n                </span>\n            </td>\n            <td>\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.approach_squadmate_1,\n                    pool: logic.approach_squadmate_pool_1,\n                    role: Role.ApproachSquadmate1,\n                    icon: "user",\n                    supertext: "1"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.approach_squadmate_2,\n                    pool: logic.approach_squadmate_pool_2,\n                    role: Role.ApproachSquadmate2,\n                    icon: "user",\n                    supertext: "2"\n                } } --><!-- /ko -->\n            </td>\n            <td>\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.vents_specialist,\n                    pool: logic.vents_specialist_pool,\n                    role: Role.VentsSpecialist,\n                    icon: "star",\n                    supertext: ""\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.vents_fireteam_leader,\n                    pool: logic.vents_fireteam_leader_pool,\n                    role: Role.VentsFireteamLeader,\n                    icon: "fire",\n                    supertext: ""\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.vents_squadmate_1,\n                    pool: logic.vents_squadmate_pool_1,\n                    role: Role.VentsSquadmate1,\n                    icon: "user",\n                    supertext: "1"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.vents_squadmate_2,\n                    pool: logic.vents_squadmate_pool_2,\n                    role: Role.VentsSquadmate2,\n                    icon: "user",\n                    supertext: "2"\n                } } --><!-- /ko -->\n            </td>\n            <td>\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.long_walk_specialist,\n                    pool: logic.long_walk_specialist_pool,\n                    role: Role.LongWalkSpecialist,\n                    icon: "star",\n                    supertext: ""\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.long_walk_fireteam_leader,\n                    pool: logic.long_walk_fireteam_leader_pool,\n                    role: Role.LongWalkFireteamLeader,\n                    icon: "fire",\n                    supertext: ""\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.long_walk_escort,\n                    pool: logic.long_walk_escort_pool,\n                    role: Role.LongWalkEscort,\n                    icon: "heart-empty",\n                    supertext: ""\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.long_walk_squadmate_1,\n                    pool: logic.long_walk_squadmate_pool_1,\n                    role: Role.LongWalkSquadmate1,\n                    icon: "user",\n                    supertext: "1"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.long_walk_squadmate_2,\n                    pool: logic.long_walk_squadmate_pool_2,\n                    role: Role.LongWalkSquadmate2,\n                    icon: "user",\n                    supertext: "2"\n                } } --><!-- /ko -->\n            </td>\n            <td>\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.boss_squadmate_1,\n                    pool: logic.boss_squadmate_pool_1,\n                    role: Role.BossSquadmate1,\n                    icon: "user",\n                    supertext: "1"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-toggle\', params: {\n                    teammate: teammate,\n                    observable: logic.boss_squadmate_2,\n                    pool: logic.boss_squadmate_pool_2,\n                    role: Role.BossSquadmate2,\n                    icon: "user",\n                    supertext: "2"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'role-static\', params: {\n                    teammate: teammate,\n                    role: Role.BossHoldingTheLine,\n                    supertext: "",\n                    icon: "flash"\n                } } --><!-- /ko -->\n            </td>\n            <td>\n                <span data-bind="\n                    if: teammate.survives\n                    ">\n                    <span class="glyphicon glyphicon-ok-circle text-success"></span>\n                </span>\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.ApproachShieldsDeath,\n                    supertext: "Shield"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.ApproachArmorDeath,\n                    supertext: "Armour"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.ApproachWeaponDeath,\n                    supertext: "Weapon"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.VentsDeath,\n                    supertext: "Vents"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.LongWalkSquadmateDeath,\n                    supertext: "LW Squadmate"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.LongWalkFireteamLeaderDeath,\n                    supertext: "LW Leader"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.LongWalkEscortDeath,\n                    supertext: "Escort"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.BossSquadmateDeath,\n                    supertext: "Boss Squadmate"\n                } } --><!-- /ko -->\n                <!-- ko component: { name: \'death-role-static\', params: {\n                    teammate: teammate,\n                    role: Role.BossHoldingTheLineDeath,\n                    supertext: "HTL"\n                } } --><!-- /ko -->\n            </td>\n        </tr>\n        '
})}()},function(e,t){"use strict";t.name="yes-no",void function(){ko.components.register(t.name,{viewModel:function(e){_.extend(this,e),this.value=ko.observable(ko.unwrap(e.value))},template:"\n        <p class=\"form-control-static\" data-bind=\"text: value() ? 'Yes' : 'No'\"></p>\n        "})}()},function(e,t){"use strict";t.name="priority-rank",void function(){ko.components.register(t.name,{viewModel:function(e){this.value=ko.unwrap(e.value)},template:'\n        <p class="form-control-static">\n            <span data-bind="if: value !== undefined">#<span data-bind="text: value"></span></span>\n            <span data-bind="if: value === undefined"><span class="text-muted">N/A</span></span>\n        </p>\n        '})}()},function(e,t){"use strict";var a=function(){function e(e){this.app=e}return e.prototype.showRankPopover=function(e,t,a){var n=$(e.target),o=$("<ol />").addClass("rank-popover-list"),r=_.chain(this.app.logic.pool()).filter(function(e){var a=e[t];return!!a()}).sortBy(function(e){var a=e[t];return a()}).value();_.each(r,function(e){o.append($("<li />").append(e.name))}),n.popover({trigger:"focus",title:a,html:!0,content:o}).on("hidden.bs.popover",function(){n.popover("destroy")}).popover("show")},e}();t.UI=a}]);
//# sourceMappingURL=bundle.1.0.0.js.map